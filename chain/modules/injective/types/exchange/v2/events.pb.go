// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: injective/exchange/v2/events.proto

package v2

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/InjectiveLabs/injective-core/injective-chain/modules/oracle/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventBatchSpotExecution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	IsBuy         bool                   `protobuf:"varint,2,opt,name=is_buy,json=isBuy,proto3" json:"is_buy,omitempty"`
	ExecutionType ExecutionType          `protobuf:"varint,3,opt,name=executionType,proto3,enum=injective.exchange.v2.ExecutionType" json:"executionType,omitempty"`
	Trades        []*TradeLog            `protobuf:"bytes,4,rep,name=trades,proto3" json:"trades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBatchSpotExecution) Reset() {
	*x = EventBatchSpotExecution{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBatchSpotExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatchSpotExecution) ProtoMessage() {}

func (x *EventBatchSpotExecution) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatchSpotExecution.ProtoReflect.Descriptor instead.
func (*EventBatchSpotExecution) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventBatchSpotExecution) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventBatchSpotExecution) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *EventBatchSpotExecution) GetExecutionType() ExecutionType {
	if x != nil {
		return x.ExecutionType
	}
	return ExecutionType_UnspecifiedExecutionType
}

func (x *EventBatchSpotExecution) GetTrades() []*TradeLog {
	if x != nil {
		return x.Trades
	}
	return nil
}

type EventBatchDerivativeExecution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	IsBuy         bool                   `protobuf:"varint,2,opt,name=is_buy,json=isBuy,proto3" json:"is_buy,omitempty"`
	IsLiquidation bool                   `protobuf:"varint,3,opt,name=is_liquidation,json=isLiquidation,proto3" json:"is_liquidation,omitempty"`
	// nil for time expiry futures
	CumulativeFunding string                `protobuf:"bytes,4,opt,name=cumulative_funding,json=cumulativeFunding,proto3" json:"cumulative_funding,omitempty"`
	ExecutionType     ExecutionType         `protobuf:"varint,5,opt,name=executionType,proto3,enum=injective.exchange.v2.ExecutionType" json:"executionType,omitempty"`
	Trades            []*DerivativeTradeLog `protobuf:"bytes,6,rep,name=trades,proto3" json:"trades,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EventBatchDerivativeExecution) Reset() {
	*x = EventBatchDerivativeExecution{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBatchDerivativeExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatchDerivativeExecution) ProtoMessage() {}

func (x *EventBatchDerivativeExecution) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatchDerivativeExecution.ProtoReflect.Descriptor instead.
func (*EventBatchDerivativeExecution) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventBatchDerivativeExecution) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventBatchDerivativeExecution) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *EventBatchDerivativeExecution) GetIsLiquidation() bool {
	if x != nil {
		return x.IsLiquidation
	}
	return false
}

func (x *EventBatchDerivativeExecution) GetCumulativeFunding() string {
	if x != nil {
		return x.CumulativeFunding
	}
	return ""
}

func (x *EventBatchDerivativeExecution) GetExecutionType() ExecutionType {
	if x != nil {
		return x.ExecutionType
	}
	return ExecutionType_UnspecifiedExecutionType
}

func (x *EventBatchDerivativeExecution) GetTrades() []*DerivativeTradeLog {
	if x != nil {
		return x.Trades
	}
	return nil
}

type EventLostFundsFromLiquidation struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	MarketId                           string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	SubaccountId                       []byte                 `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	LostFundsFromAvailableDuringPayout string                 `protobuf:"bytes,3,opt,name=lost_funds_from_available_during_payout,json=lostFundsFromAvailableDuringPayout,proto3" json:"lost_funds_from_available_during_payout,omitempty"`
	LostFundsFromOrderCancels          string                 `protobuf:"bytes,4,opt,name=lost_funds_from_order_cancels,json=lostFundsFromOrderCancels,proto3" json:"lost_funds_from_order_cancels,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *EventLostFundsFromLiquidation) Reset() {
	*x = EventLostFundsFromLiquidation{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventLostFundsFromLiquidation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLostFundsFromLiquidation) ProtoMessage() {}

func (x *EventLostFundsFromLiquidation) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLostFundsFromLiquidation.ProtoReflect.Descriptor instead.
func (*EventLostFundsFromLiquidation) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventLostFundsFromLiquidation) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventLostFundsFromLiquidation) GetSubaccountId() []byte {
	if x != nil {
		return x.SubaccountId
	}
	return nil
}

func (x *EventLostFundsFromLiquidation) GetLostFundsFromAvailableDuringPayout() string {
	if x != nil {
		return x.LostFundsFromAvailableDuringPayout
	}
	return ""
}

func (x *EventLostFundsFromLiquidation) GetLostFundsFromOrderCancels() string {
	if x != nil {
		return x.LostFundsFromOrderCancels
	}
	return ""
}

type EventBatchDerivativePosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Positions     []*SubaccountPosition  `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBatchDerivativePosition) Reset() {
	*x = EventBatchDerivativePosition{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBatchDerivativePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatchDerivativePosition) ProtoMessage() {}

func (x *EventBatchDerivativePosition) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatchDerivativePosition.ProtoReflect.Descriptor instead.
func (*EventBatchDerivativePosition) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventBatchDerivativePosition) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventBatchDerivativePosition) GetPositions() []*SubaccountPosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

type EventDerivativeMarketPaused struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MarketId          string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	SettlePrice       string                 `protobuf:"bytes,2,opt,name=settle_price,json=settlePrice,proto3" json:"settle_price,omitempty"`
	TotalMissingFunds string                 `protobuf:"bytes,3,opt,name=total_missing_funds,json=totalMissingFunds,proto3" json:"total_missing_funds,omitempty"`
	MissingFundsRate  string                 `protobuf:"bytes,4,opt,name=missing_funds_rate,json=missingFundsRate,proto3" json:"missing_funds_rate,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EventDerivativeMarketPaused) Reset() {
	*x = EventDerivativeMarketPaused{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDerivativeMarketPaused) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDerivativeMarketPaused) ProtoMessage() {}

func (x *EventDerivativeMarketPaused) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDerivativeMarketPaused.ProtoReflect.Descriptor instead.
func (*EventDerivativeMarketPaused) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventDerivativeMarketPaused) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventDerivativeMarketPaused) GetSettlePrice() string {
	if x != nil {
		return x.SettlePrice
	}
	return ""
}

func (x *EventDerivativeMarketPaused) GetTotalMissingFunds() string {
	if x != nil {
		return x.TotalMissingFunds
	}
	return ""
}

func (x *EventDerivativeMarketPaused) GetMissingFundsRate() string {
	if x != nil {
		return x.MissingFundsRate
	}
	return ""
}

type EventSettledMarketBalance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSettledMarketBalance) Reset() {
	*x = EventSettledMarketBalance{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSettledMarketBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSettledMarketBalance) ProtoMessage() {}

func (x *EventSettledMarketBalance) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSettledMarketBalance.ProtoReflect.Descriptor instead.
func (*EventSettledMarketBalance) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventSettledMarketBalance) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventSettledMarketBalance) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type EventNotSettledMarketBalance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventNotSettledMarketBalance) Reset() {
	*x = EventNotSettledMarketBalance{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventNotSettledMarketBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNotSettledMarketBalance) ProtoMessage() {}

func (x *EventNotSettledMarketBalance) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNotSettledMarketBalance.ProtoReflect.Descriptor instead.
func (*EventNotSettledMarketBalance) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{6}
}

func (x *EventNotSettledMarketBalance) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventNotSettledMarketBalance) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type EventMarketBeyondBankruptcy struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MarketId           string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	SettlePrice        string                 `protobuf:"bytes,2,opt,name=settle_price,json=settlePrice,proto3" json:"settle_price,omitempty"`
	MissingMarketFunds string                 `protobuf:"bytes,3,opt,name=missing_market_funds,json=missingMarketFunds,proto3" json:"missing_market_funds,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EventMarketBeyondBankruptcy) Reset() {
	*x = EventMarketBeyondBankruptcy{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMarketBeyondBankruptcy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMarketBeyondBankruptcy) ProtoMessage() {}

func (x *EventMarketBeyondBankruptcy) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMarketBeyondBankruptcy.ProtoReflect.Descriptor instead.
func (*EventMarketBeyondBankruptcy) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{7}
}

func (x *EventMarketBeyondBankruptcy) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventMarketBeyondBankruptcy) GetSettlePrice() string {
	if x != nil {
		return x.SettlePrice
	}
	return ""
}

func (x *EventMarketBeyondBankruptcy) GetMissingMarketFunds() string {
	if x != nil {
		return x.MissingMarketFunds
	}
	return ""
}

type EventAllPositionsHaircut struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MarketId         string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	SettlePrice      string                 `protobuf:"bytes,2,opt,name=settle_price,json=settlePrice,proto3" json:"settle_price,omitempty"`
	MissingFundsRate string                 `protobuf:"bytes,3,opt,name=missing_funds_rate,json=missingFundsRate,proto3" json:"missing_funds_rate,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventAllPositionsHaircut) Reset() {
	*x = EventAllPositionsHaircut{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventAllPositionsHaircut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAllPositionsHaircut) ProtoMessage() {}

func (x *EventAllPositionsHaircut) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAllPositionsHaircut.ProtoReflect.Descriptor instead.
func (*EventAllPositionsHaircut) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{8}
}

func (x *EventAllPositionsHaircut) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventAllPositionsHaircut) GetSettlePrice() string {
	if x != nil {
		return x.SettlePrice
	}
	return ""
}

func (x *EventAllPositionsHaircut) GetMissingFundsRate() string {
	if x != nil {
		return x.MissingFundsRate
	}
	return ""
}

type EventBinaryOptionsMarketUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Market        *BinaryOptionsMarket   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBinaryOptionsMarketUpdate) Reset() {
	*x = EventBinaryOptionsMarketUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBinaryOptionsMarketUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBinaryOptionsMarketUpdate) ProtoMessage() {}

func (x *EventBinaryOptionsMarketUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBinaryOptionsMarketUpdate.ProtoReflect.Descriptor instead.
func (*EventBinaryOptionsMarketUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{9}
}

func (x *EventBinaryOptionsMarketUpdate) GetMarket() *BinaryOptionsMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

type EventNewSpotOrders struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	BuyOrders     []*SpotLimitOrder      `protobuf:"bytes,2,rep,name=buy_orders,json=buyOrders,proto3" json:"buy_orders,omitempty"`
	SellOrders    []*SpotLimitOrder      `protobuf:"bytes,3,rep,name=sell_orders,json=sellOrders,proto3" json:"sell_orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventNewSpotOrders) Reset() {
	*x = EventNewSpotOrders{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventNewSpotOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNewSpotOrders) ProtoMessage() {}

func (x *EventNewSpotOrders) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNewSpotOrders.ProtoReflect.Descriptor instead.
func (*EventNewSpotOrders) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{10}
}

func (x *EventNewSpotOrders) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventNewSpotOrders) GetBuyOrders() []*SpotLimitOrder {
	if x != nil {
		return x.BuyOrders
	}
	return nil
}

func (x *EventNewSpotOrders) GetSellOrders() []*SpotLimitOrder {
	if x != nil {
		return x.SellOrders
	}
	return nil
}

type EventNewDerivativeOrders struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	MarketId      string                  `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	BuyOrders     []*DerivativeLimitOrder `protobuf:"bytes,2,rep,name=buy_orders,json=buyOrders,proto3" json:"buy_orders,omitempty"`
	SellOrders    []*DerivativeLimitOrder `protobuf:"bytes,3,rep,name=sell_orders,json=sellOrders,proto3" json:"sell_orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventNewDerivativeOrders) Reset() {
	*x = EventNewDerivativeOrders{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventNewDerivativeOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNewDerivativeOrders) ProtoMessage() {}

func (x *EventNewDerivativeOrders) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNewDerivativeOrders.ProtoReflect.Descriptor instead.
func (*EventNewDerivativeOrders) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{11}
}

func (x *EventNewDerivativeOrders) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventNewDerivativeOrders) GetBuyOrders() []*DerivativeLimitOrder {
	if x != nil {
		return x.BuyOrders
	}
	return nil
}

func (x *EventNewDerivativeOrders) GetSellOrders() []*DerivativeLimitOrder {
	if x != nil {
		return x.SellOrders
	}
	return nil
}

type EventCancelSpotOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Order         *SpotLimitOrder        `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventCancelSpotOrder) Reset() {
	*x = EventCancelSpotOrder{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventCancelSpotOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCancelSpotOrder) ProtoMessage() {}

func (x *EventCancelSpotOrder) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCancelSpotOrder.ProtoReflect.Descriptor instead.
func (*EventCancelSpotOrder) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{12}
}

func (x *EventCancelSpotOrder) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventCancelSpotOrder) GetOrder() *SpotLimitOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

type EventSpotMarketUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Market        *SpotMarket            `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSpotMarketUpdate) Reset() {
	*x = EventSpotMarketUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSpotMarketUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSpotMarketUpdate) ProtoMessage() {}

func (x *EventSpotMarketUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSpotMarketUpdate.ProtoReflect.Descriptor instead.
func (*EventSpotMarketUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{13}
}

func (x *EventSpotMarketUpdate) GetMarket() *SpotMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

type EventPerpetualMarketUpdate struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	Market              *DerivativeMarket       `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	PerpetualMarketInfo *PerpetualMarketInfo    `protobuf:"bytes,2,opt,name=perpetual_market_info,json=perpetualMarketInfo,proto3" json:"perpetual_market_info,omitempty"`
	Funding             *PerpetualMarketFunding `protobuf:"bytes,3,opt,name=funding,proto3" json:"funding,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EventPerpetualMarketUpdate) Reset() {
	*x = EventPerpetualMarketUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPerpetualMarketUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPerpetualMarketUpdate) ProtoMessage() {}

func (x *EventPerpetualMarketUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPerpetualMarketUpdate.ProtoReflect.Descriptor instead.
func (*EventPerpetualMarketUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{14}
}

func (x *EventPerpetualMarketUpdate) GetMarket() *DerivativeMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *EventPerpetualMarketUpdate) GetPerpetualMarketInfo() *PerpetualMarketInfo {
	if x != nil {
		return x.PerpetualMarketInfo
	}
	return nil
}

func (x *EventPerpetualMarketUpdate) GetFunding() *PerpetualMarketFunding {
	if x != nil {
		return x.Funding
	}
	return nil
}

type EventExpiryFuturesMarketUpdate struct {
	state                   protoimpl.MessageState   `protogen:"open.v1"`
	Market                  *DerivativeMarket        `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	ExpiryFuturesMarketInfo *ExpiryFuturesMarketInfo `protobuf:"bytes,3,opt,name=expiry_futures_market_info,json=expiryFuturesMarketInfo,proto3" json:"expiry_futures_market_info,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *EventExpiryFuturesMarketUpdate) Reset() {
	*x = EventExpiryFuturesMarketUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventExpiryFuturesMarketUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventExpiryFuturesMarketUpdate) ProtoMessage() {}

func (x *EventExpiryFuturesMarketUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventExpiryFuturesMarketUpdate.ProtoReflect.Descriptor instead.
func (*EventExpiryFuturesMarketUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{15}
}

func (x *EventExpiryFuturesMarketUpdate) GetMarket() *DerivativeMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *EventExpiryFuturesMarketUpdate) GetExpiryFuturesMarketInfo() *ExpiryFuturesMarketInfo {
	if x != nil {
		return x.ExpiryFuturesMarketInfo
	}
	return nil
}

type EventPerpetualMarketFundingUpdate struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	MarketId        string                  `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Funding         *PerpetualMarketFunding `protobuf:"bytes,2,opt,name=funding,proto3" json:"funding,omitempty"`
	IsHourlyFunding bool                    `protobuf:"varint,3,opt,name=is_hourly_funding,json=isHourlyFunding,proto3" json:"is_hourly_funding,omitempty"`
	FundingRate     string                  `protobuf:"bytes,4,opt,name=funding_rate,json=fundingRate,proto3" json:"funding_rate,omitempty"`
	MarkPrice       string                  `protobuf:"bytes,5,opt,name=mark_price,json=markPrice,proto3" json:"mark_price,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventPerpetualMarketFundingUpdate) Reset() {
	*x = EventPerpetualMarketFundingUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPerpetualMarketFundingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPerpetualMarketFundingUpdate) ProtoMessage() {}

func (x *EventPerpetualMarketFundingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPerpetualMarketFundingUpdate.ProtoReflect.Descriptor instead.
func (*EventPerpetualMarketFundingUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{16}
}

func (x *EventPerpetualMarketFundingUpdate) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventPerpetualMarketFundingUpdate) GetFunding() *PerpetualMarketFunding {
	if x != nil {
		return x.Funding
	}
	return nil
}

func (x *EventPerpetualMarketFundingUpdate) GetIsHourlyFunding() bool {
	if x != nil {
		return x.IsHourlyFunding
	}
	return false
}

func (x *EventPerpetualMarketFundingUpdate) GetFundingRate() string {
	if x != nil {
		return x.FundingRate
	}
	return ""
}

func (x *EventPerpetualMarketFundingUpdate) GetMarkPrice() string {
	if x != nil {
		return x.MarkPrice
	}
	return ""
}

type EventSubaccountDeposit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcAddress    string                 `protobuf:"bytes,1,opt,name=src_address,json=srcAddress,proto3" json:"src_address,omitempty"`
	SubaccountId  []byte                 `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	Amount        *types.Coin            `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSubaccountDeposit) Reset() {
	*x = EventSubaccountDeposit{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSubaccountDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSubaccountDeposit) ProtoMessage() {}

func (x *EventSubaccountDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSubaccountDeposit.ProtoReflect.Descriptor instead.
func (*EventSubaccountDeposit) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{17}
}

func (x *EventSubaccountDeposit) GetSrcAddress() string {
	if x != nil {
		return x.SrcAddress
	}
	return ""
}

func (x *EventSubaccountDeposit) GetSubaccountId() []byte {
	if x != nil {
		return x.SubaccountId
	}
	return nil
}

func (x *EventSubaccountDeposit) GetAmount() *types.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type EventSubaccountWithdraw struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubaccountId  []byte                 `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	DstAddress    string                 `protobuf:"bytes,2,opt,name=dst_address,json=dstAddress,proto3" json:"dst_address,omitempty"`
	Amount        *types.Coin            `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSubaccountWithdraw) Reset() {
	*x = EventSubaccountWithdraw{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSubaccountWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSubaccountWithdraw) ProtoMessage() {}

func (x *EventSubaccountWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSubaccountWithdraw.ProtoReflect.Descriptor instead.
func (*EventSubaccountWithdraw) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{18}
}

func (x *EventSubaccountWithdraw) GetSubaccountId() []byte {
	if x != nil {
		return x.SubaccountId
	}
	return nil
}

func (x *EventSubaccountWithdraw) GetDstAddress() string {
	if x != nil {
		return x.DstAddress
	}
	return ""
}

func (x *EventSubaccountWithdraw) GetAmount() *types.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type EventSubaccountBalanceTransfer struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SrcSubaccountId string                 `protobuf:"bytes,1,opt,name=src_subaccount_id,json=srcSubaccountId,proto3" json:"src_subaccount_id,omitempty"`
	DstSubaccountId string                 `protobuf:"bytes,2,opt,name=dst_subaccount_id,json=dstSubaccountId,proto3" json:"dst_subaccount_id,omitempty"`
	Amount          *types.Coin            `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventSubaccountBalanceTransfer) Reset() {
	*x = EventSubaccountBalanceTransfer{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSubaccountBalanceTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSubaccountBalanceTransfer) ProtoMessage() {}

func (x *EventSubaccountBalanceTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSubaccountBalanceTransfer.ProtoReflect.Descriptor instead.
func (*EventSubaccountBalanceTransfer) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{19}
}

func (x *EventSubaccountBalanceTransfer) GetSrcSubaccountId() string {
	if x != nil {
		return x.SrcSubaccountId
	}
	return ""
}

func (x *EventSubaccountBalanceTransfer) GetDstSubaccountId() string {
	if x != nil {
		return x.DstSubaccountId
	}
	return ""
}

func (x *EventSubaccountBalanceTransfer) GetAmount() *types.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type EventBatchDepositUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DepositUpdates []*DepositUpdate       `protobuf:"bytes,1,rep,name=deposit_updates,json=depositUpdates,proto3" json:"deposit_updates,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventBatchDepositUpdate) Reset() {
	*x = EventBatchDepositUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBatchDepositUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatchDepositUpdate) ProtoMessage() {}

func (x *EventBatchDepositUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatchDepositUpdate.ProtoReflect.Descriptor instead.
func (*EventBatchDepositUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{20}
}

func (x *EventBatchDepositUpdate) GetDepositUpdates() []*DepositUpdate {
	if x != nil {
		return x.DepositUpdates
	}
	return nil
}

type DerivativeMarketOrderCancel struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MarketOrder    *DerivativeMarketOrder `protobuf:"bytes,1,opt,name=market_order,json=marketOrder,proto3" json:"market_order,omitempty"`
	CancelQuantity string                 `protobuf:"bytes,2,opt,name=cancel_quantity,json=cancelQuantity,proto3" json:"cancel_quantity,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DerivativeMarketOrderCancel) Reset() {
	*x = DerivativeMarketOrderCancel{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DerivativeMarketOrderCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivativeMarketOrderCancel) ProtoMessage() {}

func (x *DerivativeMarketOrderCancel) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivativeMarketOrderCancel.ProtoReflect.Descriptor instead.
func (*DerivativeMarketOrderCancel) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{21}
}

func (x *DerivativeMarketOrderCancel) GetMarketOrder() *DerivativeMarketOrder {
	if x != nil {
		return x.MarketOrder
	}
	return nil
}

func (x *DerivativeMarketOrderCancel) GetCancelQuantity() string {
	if x != nil {
		return x.CancelQuantity
	}
	return ""
}

type EventCancelDerivativeOrder struct {
	state             protoimpl.MessageState       `protogen:"open.v1"`
	MarketId          string                       `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	IsLimitCancel     bool                         `protobuf:"varint,2,opt,name=isLimitCancel,proto3" json:"isLimitCancel,omitempty"`
	LimitOrder        *DerivativeLimitOrder        `protobuf:"bytes,3,opt,name=limit_order,json=limitOrder,proto3" json:"limit_order,omitempty"`
	MarketOrderCancel *DerivativeMarketOrderCancel `protobuf:"bytes,4,opt,name=market_order_cancel,json=marketOrderCancel,proto3" json:"market_order_cancel,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EventCancelDerivativeOrder) Reset() {
	*x = EventCancelDerivativeOrder{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventCancelDerivativeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCancelDerivativeOrder) ProtoMessage() {}

func (x *EventCancelDerivativeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCancelDerivativeOrder.ProtoReflect.Descriptor instead.
func (*EventCancelDerivativeOrder) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{22}
}

func (x *EventCancelDerivativeOrder) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventCancelDerivativeOrder) GetIsLimitCancel() bool {
	if x != nil {
		return x.IsLimitCancel
	}
	return false
}

func (x *EventCancelDerivativeOrder) GetLimitOrder() *DerivativeLimitOrder {
	if x != nil {
		return x.LimitOrder
	}
	return nil
}

func (x *EventCancelDerivativeOrder) GetMarketOrderCancel() *DerivativeMarketOrderCancel {
	if x != nil {
		return x.MarketOrderCancel
	}
	return nil
}

type EventFeeDiscountSchedule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schedule      *FeeDiscountSchedule   `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventFeeDiscountSchedule) Reset() {
	*x = EventFeeDiscountSchedule{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventFeeDiscountSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFeeDiscountSchedule) ProtoMessage() {}

func (x *EventFeeDiscountSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFeeDiscountSchedule.ProtoReflect.Descriptor instead.
func (*EventFeeDiscountSchedule) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{23}
}

func (x *EventFeeDiscountSchedule) GetSchedule() *FeeDiscountSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type EventTradingRewardCampaignUpdate struct {
	state               protoimpl.MessageState     `protogen:"open.v1"`
	CampaignInfo        *TradingRewardCampaignInfo `protobuf:"bytes,1,opt,name=campaign_info,json=campaignInfo,proto3" json:"campaign_info,omitempty"`
	CampaignRewardPools []*CampaignRewardPool      `protobuf:"bytes,2,rep,name=campaign_reward_pools,json=campaignRewardPools,proto3" json:"campaign_reward_pools,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EventTradingRewardCampaignUpdate) Reset() {
	*x = EventTradingRewardCampaignUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventTradingRewardCampaignUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTradingRewardCampaignUpdate) ProtoMessage() {}

func (x *EventTradingRewardCampaignUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTradingRewardCampaignUpdate.ProtoReflect.Descriptor instead.
func (*EventTradingRewardCampaignUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{24}
}

func (x *EventTradingRewardCampaignUpdate) GetCampaignInfo() *TradingRewardCampaignInfo {
	if x != nil {
		return x.CampaignInfo
	}
	return nil
}

func (x *EventTradingRewardCampaignUpdate) GetCampaignRewardPools() []*CampaignRewardPool {
	if x != nil {
		return x.CampaignRewardPools
	}
	return nil
}

type EventTradingRewardDistribution struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AccountRewards []*AccountRewards      `protobuf:"bytes,1,rep,name=account_rewards,json=accountRewards,proto3" json:"account_rewards,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventTradingRewardDistribution) Reset() {
	*x = EventTradingRewardDistribution{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventTradingRewardDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTradingRewardDistribution) ProtoMessage() {}

func (x *EventTradingRewardDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTradingRewardDistribution.ProtoReflect.Descriptor instead.
func (*EventTradingRewardDistribution) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{25}
}

func (x *EventTradingRewardDistribution) GetAccountRewards() []*AccountRewards {
	if x != nil {
		return x.AccountRewards
	}
	return nil
}

type EventNewConditionalDerivativeOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Order         *DerivativeOrder       `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Hash          []byte                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	IsMarket      bool                   `protobuf:"varint,4,opt,name=is_market,json=isMarket,proto3" json:"is_market,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventNewConditionalDerivativeOrder) Reset() {
	*x = EventNewConditionalDerivativeOrder{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventNewConditionalDerivativeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNewConditionalDerivativeOrder) ProtoMessage() {}

func (x *EventNewConditionalDerivativeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNewConditionalDerivativeOrder.ProtoReflect.Descriptor instead.
func (*EventNewConditionalDerivativeOrder) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{26}
}

func (x *EventNewConditionalDerivativeOrder) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventNewConditionalDerivativeOrder) GetOrder() *DerivativeOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *EventNewConditionalDerivativeOrder) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *EventNewConditionalDerivativeOrder) GetIsMarket() bool {
	if x != nil {
		return x.IsMarket
	}
	return false
}

type EventCancelConditionalDerivativeOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	IsLimitCancel bool                   `protobuf:"varint,2,opt,name=isLimitCancel,proto3" json:"isLimitCancel,omitempty"`
	LimitOrder    *DerivativeLimitOrder  `protobuf:"bytes,3,opt,name=limit_order,json=limitOrder,proto3" json:"limit_order,omitempty"`
	MarketOrder   *DerivativeMarketOrder `protobuf:"bytes,4,opt,name=market_order,json=marketOrder,proto3" json:"market_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventCancelConditionalDerivativeOrder) Reset() {
	*x = EventCancelConditionalDerivativeOrder{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventCancelConditionalDerivativeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCancelConditionalDerivativeOrder) ProtoMessage() {}

func (x *EventCancelConditionalDerivativeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCancelConditionalDerivativeOrder.ProtoReflect.Descriptor instead.
func (*EventCancelConditionalDerivativeOrder) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{27}
}

func (x *EventCancelConditionalDerivativeOrder) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventCancelConditionalDerivativeOrder) GetIsLimitCancel() bool {
	if x != nil {
		return x.IsLimitCancel
	}
	return false
}

func (x *EventCancelConditionalDerivativeOrder) GetLimitOrder() *DerivativeLimitOrder {
	if x != nil {
		return x.LimitOrder
	}
	return nil
}

func (x *EventCancelConditionalDerivativeOrder) GetMarketOrder() *DerivativeMarketOrder {
	if x != nil {
		return x.MarketOrder
	}
	return nil
}

type EventConditionalDerivativeOrderTrigger struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MarketId           []byte                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	IsLimitTrigger     bool                   `protobuf:"varint,2,opt,name=isLimitTrigger,proto3" json:"isLimitTrigger,omitempty"`
	TriggeredOrderHash []byte                 `protobuf:"bytes,3,opt,name=triggered_order_hash,json=triggeredOrderHash,proto3" json:"triggered_order_hash,omitempty"`
	PlacedOrderHash    []byte                 `protobuf:"bytes,4,opt,name=placed_order_hash,json=placedOrderHash,proto3" json:"placed_order_hash,omitempty"`
	TriggeredOrderCid  string                 `protobuf:"bytes,5,opt,name=triggered_order_cid,json=triggeredOrderCid,proto3" json:"triggered_order_cid,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EventConditionalDerivativeOrderTrigger) Reset() {
	*x = EventConditionalDerivativeOrderTrigger{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventConditionalDerivativeOrderTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventConditionalDerivativeOrderTrigger) ProtoMessage() {}

func (x *EventConditionalDerivativeOrderTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventConditionalDerivativeOrderTrigger.ProtoReflect.Descriptor instead.
func (*EventConditionalDerivativeOrderTrigger) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{28}
}

func (x *EventConditionalDerivativeOrderTrigger) GetMarketId() []byte {
	if x != nil {
		return x.MarketId
	}
	return nil
}

func (x *EventConditionalDerivativeOrderTrigger) GetIsLimitTrigger() bool {
	if x != nil {
		return x.IsLimitTrigger
	}
	return false
}

func (x *EventConditionalDerivativeOrderTrigger) GetTriggeredOrderHash() []byte {
	if x != nil {
		return x.TriggeredOrderHash
	}
	return nil
}

func (x *EventConditionalDerivativeOrderTrigger) GetPlacedOrderHash() []byte {
	if x != nil {
		return x.PlacedOrderHash
	}
	return nil
}

func (x *EventConditionalDerivativeOrderTrigger) GetTriggeredOrderCid() string {
	if x != nil {
		return x.TriggeredOrderCid
	}
	return ""
}

type EventOrderFail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       []byte                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Hashes        [][]byte               `protobuf:"bytes,2,rep,name=hashes,proto3" json:"hashes,omitempty"`
	Flags         []uint32               `protobuf:"varint,3,rep,packed,name=flags,proto3" json:"flags,omitempty"`
	Cids          []string               `protobuf:"bytes,4,rep,name=cids,proto3" json:"cids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventOrderFail) Reset() {
	*x = EventOrderFail{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOrderFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOrderFail) ProtoMessage() {}

func (x *EventOrderFail) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOrderFail.ProtoReflect.Descriptor instead.
func (*EventOrderFail) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{29}
}

func (x *EventOrderFail) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *EventOrderFail) GetHashes() [][]byte {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *EventOrderFail) GetFlags() []uint32 {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *EventOrderFail) GetCids() []string {
	if x != nil {
		return x.Cids
	}
	return nil
}

type EventAtomicMarketOrderFeeMultipliersUpdated struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	MarketFeeMultipliers []*MarketFeeMultiplier `protobuf:"bytes,1,rep,name=market_fee_multipliers,json=marketFeeMultipliers,proto3" json:"market_fee_multipliers,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *EventAtomicMarketOrderFeeMultipliersUpdated) Reset() {
	*x = EventAtomicMarketOrderFeeMultipliersUpdated{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventAtomicMarketOrderFeeMultipliersUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAtomicMarketOrderFeeMultipliersUpdated) ProtoMessage() {}

func (x *EventAtomicMarketOrderFeeMultipliersUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAtomicMarketOrderFeeMultipliersUpdated.ProtoReflect.Descriptor instead.
func (*EventAtomicMarketOrderFeeMultipliersUpdated) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{30}
}

func (x *EventAtomicMarketOrderFeeMultipliersUpdated) GetMarketFeeMultipliers() []*MarketFeeMultiplier {
	if x != nil {
		return x.MarketFeeMultipliers
	}
	return nil
}

type EventOrderbookUpdate struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SpotUpdates       []*OrderbookUpdate     `protobuf:"bytes,1,rep,name=spot_updates,json=spotUpdates,proto3" json:"spot_updates,omitempty"`
	DerivativeUpdates []*OrderbookUpdate     `protobuf:"bytes,2,rep,name=derivative_updates,json=derivativeUpdates,proto3" json:"derivative_updates,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EventOrderbookUpdate) Reset() {
	*x = EventOrderbookUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOrderbookUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOrderbookUpdate) ProtoMessage() {}

func (x *EventOrderbookUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOrderbookUpdate.ProtoReflect.Descriptor instead.
func (*EventOrderbookUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{31}
}

func (x *EventOrderbookUpdate) GetSpotUpdates() []*OrderbookUpdate {
	if x != nil {
		return x.SpotUpdates
	}
	return nil
}

func (x *EventOrderbookUpdate) GetDerivativeUpdates() []*OrderbookUpdate {
	if x != nil {
		return x.DerivativeUpdates
	}
	return nil
}

type OrderbookUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seq           uint64                 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Orderbook     *Orderbook             `protobuf:"bytes,2,opt,name=orderbook,proto3" json:"orderbook,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderbookUpdate) Reset() {
	*x = OrderbookUpdate{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderbookUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderbookUpdate) ProtoMessage() {}

func (x *OrderbookUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderbookUpdate.ProtoReflect.Descriptor instead.
func (*OrderbookUpdate) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{32}
}

func (x *OrderbookUpdate) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *OrderbookUpdate) GetOrderbook() *Orderbook {
	if x != nil {
		return x.Orderbook
	}
	return nil
}

type Orderbook struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      []byte                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	BuyLevels     []*Level               `protobuf:"bytes,2,rep,name=buy_levels,json=buyLevels,proto3" json:"buy_levels,omitempty"`
	SellLevels    []*Level               `protobuf:"bytes,3,rep,name=sell_levels,json=sellLevels,proto3" json:"sell_levels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Orderbook) Reset() {
	*x = Orderbook{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Orderbook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orderbook) ProtoMessage() {}

func (x *Orderbook) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orderbook.ProtoReflect.Descriptor instead.
func (*Orderbook) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{33}
}

func (x *Orderbook) GetMarketId() []byte {
	if x != nil {
		return x.MarketId
	}
	return nil
}

func (x *Orderbook) GetBuyLevels() []*Level {
	if x != nil {
		return x.BuyLevels
	}
	return nil
}

func (x *Orderbook) GetSellLevels() []*Level {
	if x != nil {
		return x.SellLevels
	}
	return nil
}

type EventGrantAuthorizations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Granter       string                 `protobuf:"bytes,1,opt,name=granter,proto3" json:"granter,omitempty"`
	Grants        []*GrantAuthorization  `protobuf:"bytes,2,rep,name=grants,proto3" json:"grants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventGrantAuthorizations) Reset() {
	*x = EventGrantAuthorizations{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventGrantAuthorizations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventGrantAuthorizations) ProtoMessage() {}

func (x *EventGrantAuthorizations) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventGrantAuthorizations.ProtoReflect.Descriptor instead.
func (*EventGrantAuthorizations) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{34}
}

func (x *EventGrantAuthorizations) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

func (x *EventGrantAuthorizations) GetGrants() []*GrantAuthorization {
	if x != nil {
		return x.Grants
	}
	return nil
}

type EventGrantActivation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grantee       string                 `protobuf:"bytes,1,opt,name=grantee,proto3" json:"grantee,omitempty"`
	Granter       string                 `protobuf:"bytes,2,opt,name=granter,proto3" json:"granter,omitempty"`
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventGrantActivation) Reset() {
	*x = EventGrantActivation{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventGrantActivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventGrantActivation) ProtoMessage() {}

func (x *EventGrantActivation) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventGrantActivation.ProtoReflect.Descriptor instead.
func (*EventGrantActivation) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{35}
}

func (x *EventGrantActivation) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

func (x *EventGrantActivation) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

func (x *EventGrantActivation) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type EventInvalidGrant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grantee       string                 `protobuf:"bytes,1,opt,name=grantee,proto3" json:"grantee,omitempty"`
	Granter       string                 `protobuf:"bytes,2,opt,name=granter,proto3" json:"granter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventInvalidGrant) Reset() {
	*x = EventInvalidGrant{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventInvalidGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInvalidGrant) ProtoMessage() {}

func (x *EventInvalidGrant) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInvalidGrant.ProtoReflect.Descriptor instead.
func (*EventInvalidGrant) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{36}
}

func (x *EventInvalidGrant) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

func (x *EventInvalidGrant) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

type EventOrderCancelFail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	SubaccountId  string                 `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	OrderHash     string                 `protobuf:"bytes,3,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	Cid           string                 `protobuf:"bytes,4,opt,name=cid,proto3" json:"cid,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventOrderCancelFail) Reset() {
	*x = EventOrderCancelFail{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOrderCancelFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOrderCancelFail) ProtoMessage() {}

func (x *EventOrderCancelFail) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOrderCancelFail.ProtoReflect.Descriptor instead.
func (*EventOrderCancelFail) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{37}
}

func (x *EventOrderCancelFail) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventOrderCancelFail) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *EventOrderCancelFail) GetOrderHash() string {
	if x != nil {
		return x.OrderHash
	}
	return ""
}

func (x *EventOrderCancelFail) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *EventOrderCancelFail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type EventDerivativeOrdersV2Migration struct {
	state            protoimpl.MessageState      `protogen:"open.v1"`
	MarketId         string                      `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	BuyOrderChanges  []*DerivativeOrderV2Changes `protobuf:"bytes,2,rep,name=buy_order_changes,json=buyOrderChanges,proto3" json:"buy_order_changes,omitempty"`
	SellOrderChanges []*DerivativeOrderV2Changes `protobuf:"bytes,3,rep,name=sell_order_changes,json=sellOrderChanges,proto3" json:"sell_order_changes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventDerivativeOrdersV2Migration) Reset() {
	*x = EventDerivativeOrdersV2Migration{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDerivativeOrdersV2Migration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDerivativeOrdersV2Migration) ProtoMessage() {}

func (x *EventDerivativeOrdersV2Migration) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDerivativeOrdersV2Migration.ProtoReflect.Descriptor instead.
func (*EventDerivativeOrdersV2Migration) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{38}
}

func (x *EventDerivativeOrdersV2Migration) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventDerivativeOrdersV2Migration) GetBuyOrderChanges() []*DerivativeOrderV2Changes {
	if x != nil {
		return x.BuyOrderChanges
	}
	return nil
}

func (x *EventDerivativeOrdersV2Migration) GetSellOrderChanges() []*DerivativeOrderV2Changes {
	if x != nil {
		return x.SellOrderChanges
	}
	return nil
}

type DerivativeOrderV2Changes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Cid   string                 `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Hash  []byte                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// price of the order
	P string `protobuf:"bytes,3,opt,name=p,proto3" json:"p,omitempty"`
	// quantity of the order
	Q string `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	// margin of the order
	M string `protobuf:"bytes,5,opt,name=m,proto3" json:"m,omitempty"`
	// the amount of the quantity remaining fillable
	F string `protobuf:"bytes,6,opt,name=f,proto3" json:"f,omitempty"`
	// trigger price of the order
	Tp            string `protobuf:"bytes,7,opt,name=tp,proto3" json:"tp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DerivativeOrderV2Changes) Reset() {
	*x = DerivativeOrderV2Changes{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DerivativeOrderV2Changes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivativeOrderV2Changes) ProtoMessage() {}

func (x *DerivativeOrderV2Changes) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivativeOrderV2Changes.ProtoReflect.Descriptor instead.
func (*DerivativeOrderV2Changes) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{39}
}

func (x *DerivativeOrderV2Changes) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *DerivativeOrderV2Changes) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *DerivativeOrderV2Changes) GetP() string {
	if x != nil {
		return x.P
	}
	return ""
}

func (x *DerivativeOrderV2Changes) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *DerivativeOrderV2Changes) GetM() string {
	if x != nil {
		return x.M
	}
	return ""
}

func (x *DerivativeOrderV2Changes) GetF() string {
	if x != nil {
		return x.F
	}
	return ""
}

func (x *DerivativeOrderV2Changes) GetTp() string {
	if x != nil {
		return x.Tp
	}
	return ""
}

type EventSpotOrdersV2Migration struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MarketId         string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	BuyOrderChanges  []*SpotOrderV2Changes  `protobuf:"bytes,2,rep,name=buy_order_changes,json=buyOrderChanges,proto3" json:"buy_order_changes,omitempty"`
	SellOrderChanges []*SpotOrderV2Changes  `protobuf:"bytes,3,rep,name=sell_order_changes,json=sellOrderChanges,proto3" json:"sell_order_changes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventSpotOrdersV2Migration) Reset() {
	*x = EventSpotOrdersV2Migration{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSpotOrdersV2Migration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSpotOrdersV2Migration) ProtoMessage() {}

func (x *EventSpotOrdersV2Migration) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSpotOrdersV2Migration.ProtoReflect.Descriptor instead.
func (*EventSpotOrdersV2Migration) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{40}
}

func (x *EventSpotOrdersV2Migration) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventSpotOrdersV2Migration) GetBuyOrderChanges() []*SpotOrderV2Changes {
	if x != nil {
		return x.BuyOrderChanges
	}
	return nil
}

func (x *EventSpotOrdersV2Migration) GetSellOrderChanges() []*SpotOrderV2Changes {
	if x != nil {
		return x.SellOrderChanges
	}
	return nil
}

type EventTriggerConditionalMarketOrderFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	SubaccountId  string                 `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	MarkPrice     string                 `protobuf:"bytes,3,opt,name=mark_price,json=markPrice,proto3" json:"mark_price,omitempty"`
	OrderHash     []byte                 `protobuf:"bytes,4,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	TriggerErr    string                 `protobuf:"bytes,5,opt,name=trigger_err,json=triggerErr,proto3" json:"trigger_err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventTriggerConditionalMarketOrderFailed) Reset() {
	*x = EventTriggerConditionalMarketOrderFailed{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventTriggerConditionalMarketOrderFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTriggerConditionalMarketOrderFailed) ProtoMessage() {}

func (x *EventTriggerConditionalMarketOrderFailed) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTriggerConditionalMarketOrderFailed.ProtoReflect.Descriptor instead.
func (*EventTriggerConditionalMarketOrderFailed) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{41}
}

func (x *EventTriggerConditionalMarketOrderFailed) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventTriggerConditionalMarketOrderFailed) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *EventTriggerConditionalMarketOrderFailed) GetMarkPrice() string {
	if x != nil {
		return x.MarkPrice
	}
	return ""
}

func (x *EventTriggerConditionalMarketOrderFailed) GetOrderHash() []byte {
	if x != nil {
		return x.OrderHash
	}
	return nil
}

func (x *EventTriggerConditionalMarketOrderFailed) GetTriggerErr() string {
	if x != nil {
		return x.TriggerErr
	}
	return ""
}

type EventTriggerConditionalLimitOrderFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	SubaccountId  string                 `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	MarkPrice     string                 `protobuf:"bytes,3,opt,name=mark_price,json=markPrice,proto3" json:"mark_price,omitempty"`
	OrderHash     []byte                 `protobuf:"bytes,4,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	TriggerErr    string                 `protobuf:"bytes,5,opt,name=trigger_err,json=triggerErr,proto3" json:"trigger_err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventTriggerConditionalLimitOrderFailed) Reset() {
	*x = EventTriggerConditionalLimitOrderFailed{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventTriggerConditionalLimitOrderFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTriggerConditionalLimitOrderFailed) ProtoMessage() {}

func (x *EventTriggerConditionalLimitOrderFailed) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTriggerConditionalLimitOrderFailed.ProtoReflect.Descriptor instead.
func (*EventTriggerConditionalLimitOrderFailed) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{42}
}

func (x *EventTriggerConditionalLimitOrderFailed) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *EventTriggerConditionalLimitOrderFailed) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *EventTriggerConditionalLimitOrderFailed) GetMarkPrice() string {
	if x != nil {
		return x.MarkPrice
	}
	return ""
}

func (x *EventTriggerConditionalLimitOrderFailed) GetOrderHash() []byte {
	if x != nil {
		return x.OrderHash
	}
	return nil
}

func (x *EventTriggerConditionalLimitOrderFailed) GetTriggerErr() string {
	if x != nil {
		return x.TriggerErr
	}
	return ""
}

type SpotOrderV2Changes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Cid   string                 `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Hash  []byte                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// price of the order
	P string `protobuf:"bytes,3,opt,name=p,proto3" json:"p,omitempty"`
	// quantity of the order
	Q string `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	// the amount of the quantity remaining fillable
	F string `protobuf:"bytes,5,opt,name=f,proto3" json:"f,omitempty"`
	// trigger_price is the trigger price used by stop/take orders
	Tp            string `protobuf:"bytes,6,opt,name=tp,proto3" json:"tp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpotOrderV2Changes) Reset() {
	*x = SpotOrderV2Changes{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpotOrderV2Changes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpotOrderV2Changes) ProtoMessage() {}

func (x *SpotOrderV2Changes) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpotOrderV2Changes.ProtoReflect.Descriptor instead.
func (*SpotOrderV2Changes) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{43}
}

func (x *SpotOrderV2Changes) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *SpotOrderV2Changes) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *SpotOrderV2Changes) GetP() string {
	if x != nil {
		return x.P
	}
	return ""
}

func (x *SpotOrderV2Changes) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SpotOrderV2Changes) GetF() string {
	if x != nil {
		return x.F
	}
	return ""
}

func (x *SpotOrderV2Changes) GetTp() string {
	if x != nil {
		return x.Tp
	}
	return ""
}

type EventDerivativePositionV2Migration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *DerivativePosition    `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventDerivativePositionV2Migration) Reset() {
	*x = EventDerivativePositionV2Migration{}
	mi := &file_injective_exchange_v2_events_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDerivativePositionV2Migration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDerivativePositionV2Migration) ProtoMessage() {}

func (x *EventDerivativePositionV2Migration) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_events_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDerivativePositionV2Migration.ProtoReflect.Descriptor instead.
func (*EventDerivativePositionV2Migration) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_events_proto_rawDescGZIP(), []int{44}
}

func (x *EventDerivativePositionV2Migration) GetPosition() *DerivativePosition {
	if x != nil {
		return x.Position
	}
	return nil
}

var File_injective_exchange_v2_events_proto protoreflect.FileDescriptor

const file_injective_exchange_v2_events_proto_rawDesc = "" +
	"\n" +
	"\"injective/exchange/v2/events.proto\x12\x15injective.exchange.v2\x1a\x14gogoproto/gogo.proto\x1a\x1ecosmos/base/v1beta1/coin.proto\x1a%injective/oracle/v1beta1/oracle.proto\x1a$injective/exchange/v2/exchange.proto\x1a\"injective/exchange/v2/market.proto\x1a!injective/exchange/v2/order.proto\"\xd2\x01\n" +
	"\x17EventBatchSpotExecution\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12\x15\n" +
	"\x06is_buy\x18\x02 \x01(\bR\x05isBuy\x12J\n" +
	"\rexecutionType\x18\x03 \x01(\x0e2$.injective.exchange.v2.ExecutionTypeR\rexecutionType\x127\n" +
	"\x06trades\x18\x04 \x03(\v2\x1f.injective.exchange.v2.TradeLogR\x06trades\"\xdd\x02\n" +
	"\x1dEventBatchDerivativeExecution\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12\x15\n" +
	"\x06is_buy\x18\x02 \x01(\bR\x05isBuy\x12%\n" +
	"\x0eis_liquidation\x18\x03 \x01(\bR\risLiquidation\x12R\n" +
	"\x12cumulative_funding\x18\x04 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x11cumulativeFunding\x12J\n" +
	"\rexecutionType\x18\x05 \x01(\x0e2$.injective.exchange.v2.ExecutionTypeR\rexecutionType\x12A\n" +
	"\x06trades\x18\x06 \x03(\v2).injective.exchange.v2.DerivativeTradeLogR\x06trades\"\xc2\x02\n" +
	"\x1dEventLostFundsFromLiquidation\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\fR\fsubaccountId\x12x\n" +
	"'lost_funds_from_available_during_payout\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\"lostFundsFromAvailableDuringPayout\x12e\n" +
	"\x1dlost_funds_from_order_cancels\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x19lostFundsFromOrderCancels\"\x84\x01\n" +
	"\x1cEventBatchDerivativePosition\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12G\n" +
	"\tpositions\x18\x02 \x03(\v2).injective.exchange.v2.SubaccountPositionR\tpositions\"\xbb\x01\n" +
	"\x1bEventDerivativeMarketPaused\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12!\n" +
	"\fsettle_price\x18\x02 \x01(\tR\vsettlePrice\x12.\n" +
	"\x13total_missing_funds\x18\x03 \x01(\tR\x11totalMissingFunds\x12,\n" +
	"\x12missing_funds_rate\x18\x04 \x01(\tR\x10missingFundsRate\"P\n" +
	"\x19EventSettledMarketBalance\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\"S\n" +
	"\x1cEventNotSettledMarketBalance\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\"\x8f\x01\n" +
	"\x1bEventMarketBeyondBankruptcy\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12!\n" +
	"\fsettle_price\x18\x02 \x01(\tR\vsettlePrice\x120\n" +
	"\x14missing_market_funds\x18\x03 \x01(\tR\x12missingMarketFunds\"\x88\x01\n" +
	"\x18EventAllPositionsHaircut\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12!\n" +
	"\fsettle_price\x18\x02 \x01(\tR\vsettlePrice\x12,\n" +
	"\x12missing_funds_rate\x18\x03 \x01(\tR\x10missingFundsRate\"j\n" +
	"\x1eEventBinaryOptionsMarketUpdate\x12H\n" +
	"\x06market\x18\x01 \x01(\v2*.injective.exchange.v2.BinaryOptionsMarketB\x04\xc8\xde\x1f\x00R\x06market\"\xbf\x01\n" +
	"\x12EventNewSpotOrders\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12D\n" +
	"\n" +
	"buy_orders\x18\x02 \x03(\v2%.injective.exchange.v2.SpotLimitOrderR\tbuyOrders\x12F\n" +
	"\vsell_orders\x18\x03 \x03(\v2%.injective.exchange.v2.SpotLimitOrderR\n" +
	"sellOrders\"\xd1\x01\n" +
	"\x18EventNewDerivativeOrders\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12J\n" +
	"\n" +
	"buy_orders\x18\x02 \x03(\v2+.injective.exchange.v2.DerivativeLimitOrderR\tbuyOrders\x12L\n" +
	"\vsell_orders\x18\x03 \x03(\v2+.injective.exchange.v2.DerivativeLimitOrderR\n" +
	"sellOrders\"v\n" +
	"\x14EventCancelSpotOrder\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12A\n" +
	"\x05order\x18\x02 \x01(\v2%.injective.exchange.v2.SpotLimitOrderB\x04\xc8\xde\x1f\x00R\x05order\"X\n" +
	"\x15EventSpotMarketUpdate\x12?\n" +
	"\x06market\x18\x01 \x01(\v2!.injective.exchange.v2.SpotMarketB\x04\xc8\xde\x1f\x00R\x06market\"\x98\x02\n" +
	"\x1aEventPerpetualMarketUpdate\x12E\n" +
	"\x06market\x18\x01 \x01(\v2'.injective.exchange.v2.DerivativeMarketB\x04\xc8\xde\x1f\x00R\x06market\x12d\n" +
	"\x15perpetual_market_info\x18\x02 \x01(\v2*.injective.exchange.v2.PerpetualMarketInfoB\x04\xc8\xde\x1f\x01R\x13perpetualMarketInfo\x12M\n" +
	"\afunding\x18\x03 \x01(\v2-.injective.exchange.v2.PerpetualMarketFundingB\x04\xc8\xde\x1f\x01R\afunding\"\xda\x01\n" +
	"\x1eEventExpiryFuturesMarketUpdate\x12E\n" +
	"\x06market\x18\x01 \x01(\v2'.injective.exchange.v2.DerivativeMarketB\x04\xc8\xde\x1f\x00R\x06market\x12q\n" +
	"\x1aexpiry_futures_market_info\x18\x03 \x01(\v2..injective.exchange.v2.ExpiryFuturesMarketInfoB\x04\xc8\xde\x1f\x01R\x17expiryFuturesMarketInfo\"\xc7\x02\n" +
	"!EventPerpetualMarketFundingUpdate\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12M\n" +
	"\afunding\x18\x02 \x01(\v2-.injective.exchange.v2.PerpetualMarketFundingB\x04\xc8\xde\x1f\x00R\afunding\x12*\n" +
	"\x11is_hourly_funding\x18\x03 \x01(\bR\x0fisHourlyFunding\x12F\n" +
	"\ffunding_rate\x18\x04 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\vfundingRate\x12B\n" +
	"\n" +
	"mark_price\x18\x05 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\tmarkPrice\"\x97\x01\n" +
	"\x16EventSubaccountDeposit\x12\x1f\n" +
	"\vsrc_address\x18\x01 \x01(\tR\n" +
	"srcAddress\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\fR\fsubaccountId\x127\n" +
	"\x06amount\x18\x03 \x01(\v2\x19.cosmos.base.v1beta1.CoinB\x04\xc8\xde\x1f\x00R\x06amount\"\x98\x01\n" +
	"\x17EventSubaccountWithdraw\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\fR\fsubaccountId\x12\x1f\n" +
	"\vdst_address\x18\x02 \x01(\tR\n" +
	"dstAddress\x127\n" +
	"\x06amount\x18\x03 \x01(\v2\x19.cosmos.base.v1beta1.CoinB\x04\xc8\xde\x1f\x00R\x06amount\"\xb1\x01\n" +
	"\x1eEventSubaccountBalanceTransfer\x12*\n" +
	"\x11src_subaccount_id\x18\x01 \x01(\tR\x0fsrcSubaccountId\x12*\n" +
	"\x11dst_subaccount_id\x18\x02 \x01(\tR\x0fdstSubaccountId\x127\n" +
	"\x06amount\x18\x03 \x01(\v2\x19.cosmos.base.v1beta1.CoinB\x04\xc8\xde\x1f\x00R\x06amount\"h\n" +
	"\x17EventBatchDepositUpdate\x12M\n" +
	"\x0fdeposit_updates\x18\x01 \x03(\v2$.injective.exchange.v2.DepositUpdateR\x0edepositUpdates\"\xc2\x01\n" +
	"\x1bDerivativeMarketOrderCancel\x12U\n" +
	"\fmarket_order\x18\x01 \x01(\v2,.injective.exchange.v2.DerivativeMarketOrderB\x04\xc8\xde\x1f\x01R\vmarketOrder\x12L\n" +
	"\x0fcancel_quantity\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x0ecancelQuantity\"\x9d\x02\n" +
	"\x1aEventCancelDerivativeOrder\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12$\n" +
	"\risLimitCancel\x18\x02 \x01(\bR\risLimitCancel\x12R\n" +
	"\vlimit_order\x18\x03 \x01(\v2+.injective.exchange.v2.DerivativeLimitOrderB\x04\xc8\xde\x1f\x01R\n" +
	"limitOrder\x12h\n" +
	"\x13market_order_cancel\x18\x04 \x01(\v22.injective.exchange.v2.DerivativeMarketOrderCancelB\x04\xc8\xde\x1f\x01R\x11marketOrderCancel\"b\n" +
	"\x18EventFeeDiscountSchedule\x12F\n" +
	"\bschedule\x18\x01 \x01(\v2*.injective.exchange.v2.FeeDiscountScheduleR\bschedule\"\xd8\x01\n" +
	" EventTradingRewardCampaignUpdate\x12U\n" +
	"\rcampaign_info\x18\x01 \x01(\v20.injective.exchange.v2.TradingRewardCampaignInfoR\fcampaignInfo\x12]\n" +
	"\x15campaign_reward_pools\x18\x02 \x03(\v2).injective.exchange.v2.CampaignRewardPoolR\x13campaignRewardPools\"p\n" +
	"\x1eEventTradingRewardDistribution\x12N\n" +
	"\x0faccount_rewards\x18\x01 \x03(\v2%.injective.exchange.v2.AccountRewardsR\x0eaccountRewards\"\xb0\x01\n" +
	"\"EventNewConditionalDerivativeOrder\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12<\n" +
	"\x05order\x18\x02 \x01(\v2&.injective.exchange.v2.DerivativeOrderR\x05order\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\fR\x04hash\x12\x1b\n" +
	"\tis_market\x18\x04 \x01(\bR\bisMarket\"\x95\x02\n" +
	"%EventCancelConditionalDerivativeOrder\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12$\n" +
	"\risLimitCancel\x18\x02 \x01(\bR\risLimitCancel\x12R\n" +
	"\vlimit_order\x18\x03 \x01(\v2+.injective.exchange.v2.DerivativeLimitOrderB\x04\xc8\xde\x1f\x01R\n" +
	"limitOrder\x12U\n" +
	"\fmarket_order\x18\x04 \x01(\v2,.injective.exchange.v2.DerivativeMarketOrderB\x04\xc8\xde\x1f\x01R\vmarketOrder\"\xfb\x01\n" +
	"&EventConditionalDerivativeOrderTrigger\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\fR\bmarketId\x12&\n" +
	"\x0eisLimitTrigger\x18\x02 \x01(\bR\x0eisLimitTrigger\x120\n" +
	"\x14triggered_order_hash\x18\x03 \x01(\fR\x12triggeredOrderHash\x12*\n" +
	"\x11placed_order_hash\x18\x04 \x01(\fR\x0fplacedOrderHash\x12.\n" +
	"\x13triggered_order_cid\x18\x05 \x01(\tR\x11triggeredOrderCid\"l\n" +
	"\x0eEventOrderFail\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\fR\aaccount\x12\x16\n" +
	"\x06hashes\x18\x02 \x03(\fR\x06hashes\x12\x14\n" +
	"\x05flags\x18\x03 \x03(\rR\x05flags\x12\x12\n" +
	"\x04cids\x18\x04 \x03(\tR\x04cids\"\x8f\x01\n" +
	"+EventAtomicMarketOrderFeeMultipliersUpdated\x12`\n" +
	"\x16market_fee_multipliers\x18\x01 \x03(\v2*.injective.exchange.v2.MarketFeeMultiplierR\x14marketFeeMultipliers\"\xb8\x01\n" +
	"\x14EventOrderbookUpdate\x12I\n" +
	"\fspot_updates\x18\x01 \x03(\v2&.injective.exchange.v2.OrderbookUpdateR\vspotUpdates\x12U\n" +
	"\x12derivative_updates\x18\x02 \x03(\v2&.injective.exchange.v2.OrderbookUpdateR\x11derivativeUpdates\"c\n" +
	"\x0fOrderbookUpdate\x12\x10\n" +
	"\x03seq\x18\x01 \x01(\x04R\x03seq\x12>\n" +
	"\torderbook\x18\x02 \x01(\v2 .injective.exchange.v2.OrderbookR\torderbook\"\xa4\x01\n" +
	"\tOrderbook\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\fR\bmarketId\x12;\n" +
	"\n" +
	"buy_levels\x18\x02 \x03(\v2\x1c.injective.exchange.v2.LevelR\tbuyLevels\x12=\n" +
	"\vsell_levels\x18\x03 \x03(\v2\x1c.injective.exchange.v2.LevelR\n" +
	"sellLevels\"w\n" +
	"\x18EventGrantAuthorizations\x12\x18\n" +
	"\agranter\x18\x01 \x01(\tR\agranter\x12A\n" +
	"\x06grants\x18\x02 \x03(\v2).injective.exchange.v2.GrantAuthorizationR\x06grants\"\x81\x01\n" +
	"\x14EventGrantActivation\x12\x18\n" +
	"\agrantee\x18\x01 \x01(\tR\agrantee\x12\x18\n" +
	"\agranter\x18\x02 \x01(\tR\agranter\x125\n" +
	"\x06amount\x18\x03 \x01(\tB\x1d\xc8\xde\x1f\x00\xda\xde\x1f\x15cosmossdk.io/math.IntR\x06amount\"G\n" +
	"\x11EventInvalidGrant\x12\x18\n" +
	"\agrantee\x18\x01 \x01(\tR\agrantee\x12\x18\n" +
	"\agranter\x18\x02 \x01(\tR\agranter\"\xab\x01\n" +
	"\x14EventOrderCancelFail\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\x12\x1d\n" +
	"\n" +
	"order_hash\x18\x03 \x01(\tR\torderHash\x12\x10\n" +
	"\x03cid\x18\x04 \x01(\tR\x03cid\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"\xfb\x01\n" +
	" EventDerivativeOrdersV2Migration\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12[\n" +
	"\x11buy_order_changes\x18\x02 \x03(\v2/.injective.exchange.v2.DerivativeOrderV2ChangesR\x0fbuyOrderChanges\x12]\n" +
	"\x12sell_order_changes\x18\x03 \x03(\v2/.injective.exchange.v2.DerivativeOrderV2ChangesR\x10sellOrderChanges\"\xc1\x02\n" +
	"\x18DerivativeOrderV2Changes\x12\x10\n" +
	"\x03cid\x18\x01 \x01(\tR\x03cid\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\fR\x04hash\x121\n" +
	"\x01p\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x01p\x121\n" +
	"\x01q\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x01q\x121\n" +
	"\x01m\x18\x05 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x01m\x121\n" +
	"\x01f\x18\x06 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x01f\x123\n" +
	"\x02tp\x18\a \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x02tp\"\xe9\x01\n" +
	"\x1aEventSpotOrdersV2Migration\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12U\n" +
	"\x11buy_order_changes\x18\x02 \x03(\v2).injective.exchange.v2.SpotOrderV2ChangesR\x0fbuyOrderChanges\x12W\n" +
	"\x12sell_order_changes\x18\x03 \x03(\v2).injective.exchange.v2.SpotOrderV2ChangesR\x10sellOrderChanges\"\xf0\x01\n" +
	"(EventTriggerConditionalMarketOrderFailed\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\x12B\n" +
	"\n" +
	"mark_price\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\tmarkPrice\x12\x1d\n" +
	"\n" +
	"order_hash\x18\x04 \x01(\fR\torderHash\x12\x1f\n" +
	"\vtrigger_err\x18\x05 \x01(\tR\n" +
	"triggerErr\"\xef\x01\n" +
	"'EventTriggerConditionalLimitOrderFailed\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\x12B\n" +
	"\n" +
	"mark_price\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\tmarkPrice\x12\x1d\n" +
	"\n" +
	"order_hash\x18\x04 \x01(\fR\torderHash\x12\x1f\n" +
	"\vtrigger_err\x18\x05 \x01(\tR\n" +
	"triggerErr\"\x88\x02\n" +
	"\x12SpotOrderV2Changes\x12\x10\n" +
	"\x03cid\x18\x01 \x01(\tR\x03cid\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\fR\x04hash\x121\n" +
	"\x01p\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x01p\x121\n" +
	"\x01q\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x01q\x121\n" +
	"\x01f\x18\x05 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x01f\x123\n" +
	"\x02tp\x18\x06 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x02tp\"k\n" +
	"\"EventDerivativePositionV2Migration\x12E\n" +
	"\bposition\x18\x01 \x01(\v2).injective.exchange.v2.DerivativePositionR\bpositionBSZQgithub.com/InjectiveLabs/injective-core/injective-chain/modules/exchange/types/v2b\x06proto3"

var (
	file_injective_exchange_v2_events_proto_rawDescOnce sync.Once
	file_injective_exchange_v2_events_proto_rawDescData []byte
)

func file_injective_exchange_v2_events_proto_rawDescGZIP() []byte {
	file_injective_exchange_v2_events_proto_rawDescOnce.Do(func() {
		file_injective_exchange_v2_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_injective_exchange_v2_events_proto_rawDesc), len(file_injective_exchange_v2_events_proto_rawDesc)))
	})
	return file_injective_exchange_v2_events_proto_rawDescData
}

var file_injective_exchange_v2_events_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_injective_exchange_v2_events_proto_goTypes = []any{
	(*EventBatchSpotExecution)(nil),                     // 0: injective.exchange.v2.EventBatchSpotExecution
	(*EventBatchDerivativeExecution)(nil),               // 1: injective.exchange.v2.EventBatchDerivativeExecution
	(*EventLostFundsFromLiquidation)(nil),               // 2: injective.exchange.v2.EventLostFundsFromLiquidation
	(*EventBatchDerivativePosition)(nil),                // 3: injective.exchange.v2.EventBatchDerivativePosition
	(*EventDerivativeMarketPaused)(nil),                 // 4: injective.exchange.v2.EventDerivativeMarketPaused
	(*EventSettledMarketBalance)(nil),                   // 5: injective.exchange.v2.EventSettledMarketBalance
	(*EventNotSettledMarketBalance)(nil),                // 6: injective.exchange.v2.EventNotSettledMarketBalance
	(*EventMarketBeyondBankruptcy)(nil),                 // 7: injective.exchange.v2.EventMarketBeyondBankruptcy
	(*EventAllPositionsHaircut)(nil),                    // 8: injective.exchange.v2.EventAllPositionsHaircut
	(*EventBinaryOptionsMarketUpdate)(nil),              // 9: injective.exchange.v2.EventBinaryOptionsMarketUpdate
	(*EventNewSpotOrders)(nil),                          // 10: injective.exchange.v2.EventNewSpotOrders
	(*EventNewDerivativeOrders)(nil),                    // 11: injective.exchange.v2.EventNewDerivativeOrders
	(*EventCancelSpotOrder)(nil),                        // 12: injective.exchange.v2.EventCancelSpotOrder
	(*EventSpotMarketUpdate)(nil),                       // 13: injective.exchange.v2.EventSpotMarketUpdate
	(*EventPerpetualMarketUpdate)(nil),                  // 14: injective.exchange.v2.EventPerpetualMarketUpdate
	(*EventExpiryFuturesMarketUpdate)(nil),              // 15: injective.exchange.v2.EventExpiryFuturesMarketUpdate
	(*EventPerpetualMarketFundingUpdate)(nil),           // 16: injective.exchange.v2.EventPerpetualMarketFundingUpdate
	(*EventSubaccountDeposit)(nil),                      // 17: injective.exchange.v2.EventSubaccountDeposit
	(*EventSubaccountWithdraw)(nil),                     // 18: injective.exchange.v2.EventSubaccountWithdraw
	(*EventSubaccountBalanceTransfer)(nil),              // 19: injective.exchange.v2.EventSubaccountBalanceTransfer
	(*EventBatchDepositUpdate)(nil),                     // 20: injective.exchange.v2.EventBatchDepositUpdate
	(*DerivativeMarketOrderCancel)(nil),                 // 21: injective.exchange.v2.DerivativeMarketOrderCancel
	(*EventCancelDerivativeOrder)(nil),                  // 22: injective.exchange.v2.EventCancelDerivativeOrder
	(*EventFeeDiscountSchedule)(nil),                    // 23: injective.exchange.v2.EventFeeDiscountSchedule
	(*EventTradingRewardCampaignUpdate)(nil),            // 24: injective.exchange.v2.EventTradingRewardCampaignUpdate
	(*EventTradingRewardDistribution)(nil),              // 25: injective.exchange.v2.EventTradingRewardDistribution
	(*EventNewConditionalDerivativeOrder)(nil),          // 26: injective.exchange.v2.EventNewConditionalDerivativeOrder
	(*EventCancelConditionalDerivativeOrder)(nil),       // 27: injective.exchange.v2.EventCancelConditionalDerivativeOrder
	(*EventConditionalDerivativeOrderTrigger)(nil),      // 28: injective.exchange.v2.EventConditionalDerivativeOrderTrigger
	(*EventOrderFail)(nil),                              // 29: injective.exchange.v2.EventOrderFail
	(*EventAtomicMarketOrderFeeMultipliersUpdated)(nil), // 30: injective.exchange.v2.EventAtomicMarketOrderFeeMultipliersUpdated
	(*EventOrderbookUpdate)(nil),                        // 31: injective.exchange.v2.EventOrderbookUpdate
	(*OrderbookUpdate)(nil),                             // 32: injective.exchange.v2.OrderbookUpdate
	(*Orderbook)(nil),                                   // 33: injective.exchange.v2.Orderbook
	(*EventGrantAuthorizations)(nil),                    // 34: injective.exchange.v2.EventGrantAuthorizations
	(*EventGrantActivation)(nil),                        // 35: injective.exchange.v2.EventGrantActivation
	(*EventInvalidGrant)(nil),                           // 36: injective.exchange.v2.EventInvalidGrant
	(*EventOrderCancelFail)(nil),                        // 37: injective.exchange.v2.EventOrderCancelFail
	(*EventDerivativeOrdersV2Migration)(nil),            // 38: injective.exchange.v2.EventDerivativeOrdersV2Migration
	(*DerivativeOrderV2Changes)(nil),                    // 39: injective.exchange.v2.DerivativeOrderV2Changes
	(*EventSpotOrdersV2Migration)(nil),                  // 40: injective.exchange.v2.EventSpotOrdersV2Migration
	(*EventTriggerConditionalMarketOrderFailed)(nil),    // 41: injective.exchange.v2.EventTriggerConditionalMarketOrderFailed
	(*EventTriggerConditionalLimitOrderFailed)(nil),     // 42: injective.exchange.v2.EventTriggerConditionalLimitOrderFailed
	(*SpotOrderV2Changes)(nil),                          // 43: injective.exchange.v2.SpotOrderV2Changes
	(*EventDerivativePositionV2Migration)(nil),          // 44: injective.exchange.v2.EventDerivativePositionV2Migration
	(ExecutionType)(0),                                  // 45: injective.exchange.v2.ExecutionType
	(*TradeLog)(nil),                                    // 46: injective.exchange.v2.TradeLog
	(*DerivativeTradeLog)(nil),                          // 47: injective.exchange.v2.DerivativeTradeLog
	(*SubaccountPosition)(nil),                          // 48: injective.exchange.v2.SubaccountPosition
	(*BinaryOptionsMarket)(nil),                         // 49: injective.exchange.v2.BinaryOptionsMarket
	(*SpotLimitOrder)(nil),                              // 50: injective.exchange.v2.SpotLimitOrder
	(*DerivativeLimitOrder)(nil),                        // 51: injective.exchange.v2.DerivativeLimitOrder
	(*SpotMarket)(nil),                                  // 52: injective.exchange.v2.SpotMarket
	(*DerivativeMarket)(nil),                            // 53: injective.exchange.v2.DerivativeMarket
	(*PerpetualMarketInfo)(nil),                         // 54: injective.exchange.v2.PerpetualMarketInfo
	(*PerpetualMarketFunding)(nil),                      // 55: injective.exchange.v2.PerpetualMarketFunding
	(*ExpiryFuturesMarketInfo)(nil),                     // 56: injective.exchange.v2.ExpiryFuturesMarketInfo
	(*types.Coin)(nil),                                  // 57: cosmos.base.v1beta1.Coin
	(*DepositUpdate)(nil),                               // 58: injective.exchange.v2.DepositUpdate
	(*DerivativeMarketOrder)(nil),                       // 59: injective.exchange.v2.DerivativeMarketOrder
	(*FeeDiscountSchedule)(nil),                         // 60: injective.exchange.v2.FeeDiscountSchedule
	(*TradingRewardCampaignInfo)(nil),                   // 61: injective.exchange.v2.TradingRewardCampaignInfo
	(*CampaignRewardPool)(nil),                          // 62: injective.exchange.v2.CampaignRewardPool
	(*AccountRewards)(nil),                              // 63: injective.exchange.v2.AccountRewards
	(*DerivativeOrder)(nil),                             // 64: injective.exchange.v2.DerivativeOrder
	(*MarketFeeMultiplier)(nil),                         // 65: injective.exchange.v2.MarketFeeMultiplier
	(*Level)(nil),                                       // 66: injective.exchange.v2.Level
	(*GrantAuthorization)(nil),                          // 67: injective.exchange.v2.GrantAuthorization
	(*DerivativePosition)(nil),                          // 68: injective.exchange.v2.DerivativePosition
}
var file_injective_exchange_v2_events_proto_depIdxs = []int32{
	45, // 0: injective.exchange.v2.EventBatchSpotExecution.executionType:type_name -> injective.exchange.v2.ExecutionType
	46, // 1: injective.exchange.v2.EventBatchSpotExecution.trades:type_name -> injective.exchange.v2.TradeLog
	45, // 2: injective.exchange.v2.EventBatchDerivativeExecution.executionType:type_name -> injective.exchange.v2.ExecutionType
	47, // 3: injective.exchange.v2.EventBatchDerivativeExecution.trades:type_name -> injective.exchange.v2.DerivativeTradeLog
	48, // 4: injective.exchange.v2.EventBatchDerivativePosition.positions:type_name -> injective.exchange.v2.SubaccountPosition
	49, // 5: injective.exchange.v2.EventBinaryOptionsMarketUpdate.market:type_name -> injective.exchange.v2.BinaryOptionsMarket
	50, // 6: injective.exchange.v2.EventNewSpotOrders.buy_orders:type_name -> injective.exchange.v2.SpotLimitOrder
	50, // 7: injective.exchange.v2.EventNewSpotOrders.sell_orders:type_name -> injective.exchange.v2.SpotLimitOrder
	51, // 8: injective.exchange.v2.EventNewDerivativeOrders.buy_orders:type_name -> injective.exchange.v2.DerivativeLimitOrder
	51, // 9: injective.exchange.v2.EventNewDerivativeOrders.sell_orders:type_name -> injective.exchange.v2.DerivativeLimitOrder
	50, // 10: injective.exchange.v2.EventCancelSpotOrder.order:type_name -> injective.exchange.v2.SpotLimitOrder
	52, // 11: injective.exchange.v2.EventSpotMarketUpdate.market:type_name -> injective.exchange.v2.SpotMarket
	53, // 12: injective.exchange.v2.EventPerpetualMarketUpdate.market:type_name -> injective.exchange.v2.DerivativeMarket
	54, // 13: injective.exchange.v2.EventPerpetualMarketUpdate.perpetual_market_info:type_name -> injective.exchange.v2.PerpetualMarketInfo
	55, // 14: injective.exchange.v2.EventPerpetualMarketUpdate.funding:type_name -> injective.exchange.v2.PerpetualMarketFunding
	53, // 15: injective.exchange.v2.EventExpiryFuturesMarketUpdate.market:type_name -> injective.exchange.v2.DerivativeMarket
	56, // 16: injective.exchange.v2.EventExpiryFuturesMarketUpdate.expiry_futures_market_info:type_name -> injective.exchange.v2.ExpiryFuturesMarketInfo
	55, // 17: injective.exchange.v2.EventPerpetualMarketFundingUpdate.funding:type_name -> injective.exchange.v2.PerpetualMarketFunding
	57, // 18: injective.exchange.v2.EventSubaccountDeposit.amount:type_name -> cosmos.base.v1beta1.Coin
	57, // 19: injective.exchange.v2.EventSubaccountWithdraw.amount:type_name -> cosmos.base.v1beta1.Coin
	57, // 20: injective.exchange.v2.EventSubaccountBalanceTransfer.amount:type_name -> cosmos.base.v1beta1.Coin
	58, // 21: injective.exchange.v2.EventBatchDepositUpdate.deposit_updates:type_name -> injective.exchange.v2.DepositUpdate
	59, // 22: injective.exchange.v2.DerivativeMarketOrderCancel.market_order:type_name -> injective.exchange.v2.DerivativeMarketOrder
	51, // 23: injective.exchange.v2.EventCancelDerivativeOrder.limit_order:type_name -> injective.exchange.v2.DerivativeLimitOrder
	21, // 24: injective.exchange.v2.EventCancelDerivativeOrder.market_order_cancel:type_name -> injective.exchange.v2.DerivativeMarketOrderCancel
	60, // 25: injective.exchange.v2.EventFeeDiscountSchedule.schedule:type_name -> injective.exchange.v2.FeeDiscountSchedule
	61, // 26: injective.exchange.v2.EventTradingRewardCampaignUpdate.campaign_info:type_name -> injective.exchange.v2.TradingRewardCampaignInfo
	62, // 27: injective.exchange.v2.EventTradingRewardCampaignUpdate.campaign_reward_pools:type_name -> injective.exchange.v2.CampaignRewardPool
	63, // 28: injective.exchange.v2.EventTradingRewardDistribution.account_rewards:type_name -> injective.exchange.v2.AccountRewards
	64, // 29: injective.exchange.v2.EventNewConditionalDerivativeOrder.order:type_name -> injective.exchange.v2.DerivativeOrder
	51, // 30: injective.exchange.v2.EventCancelConditionalDerivativeOrder.limit_order:type_name -> injective.exchange.v2.DerivativeLimitOrder
	59, // 31: injective.exchange.v2.EventCancelConditionalDerivativeOrder.market_order:type_name -> injective.exchange.v2.DerivativeMarketOrder
	65, // 32: injective.exchange.v2.EventAtomicMarketOrderFeeMultipliersUpdated.market_fee_multipliers:type_name -> injective.exchange.v2.MarketFeeMultiplier
	32, // 33: injective.exchange.v2.EventOrderbookUpdate.spot_updates:type_name -> injective.exchange.v2.OrderbookUpdate
	32, // 34: injective.exchange.v2.EventOrderbookUpdate.derivative_updates:type_name -> injective.exchange.v2.OrderbookUpdate
	33, // 35: injective.exchange.v2.OrderbookUpdate.orderbook:type_name -> injective.exchange.v2.Orderbook
	66, // 36: injective.exchange.v2.Orderbook.buy_levels:type_name -> injective.exchange.v2.Level
	66, // 37: injective.exchange.v2.Orderbook.sell_levels:type_name -> injective.exchange.v2.Level
	67, // 38: injective.exchange.v2.EventGrantAuthorizations.grants:type_name -> injective.exchange.v2.GrantAuthorization
	39, // 39: injective.exchange.v2.EventDerivativeOrdersV2Migration.buy_order_changes:type_name -> injective.exchange.v2.DerivativeOrderV2Changes
	39, // 40: injective.exchange.v2.EventDerivativeOrdersV2Migration.sell_order_changes:type_name -> injective.exchange.v2.DerivativeOrderV2Changes
	43, // 41: injective.exchange.v2.EventSpotOrdersV2Migration.buy_order_changes:type_name -> injective.exchange.v2.SpotOrderV2Changes
	43, // 42: injective.exchange.v2.EventSpotOrdersV2Migration.sell_order_changes:type_name -> injective.exchange.v2.SpotOrderV2Changes
	68, // 43: injective.exchange.v2.EventDerivativePositionV2Migration.position:type_name -> injective.exchange.v2.DerivativePosition
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_injective_exchange_v2_events_proto_init() }
func file_injective_exchange_v2_events_proto_init() {
	if File_injective_exchange_v2_events_proto != nil {
		return
	}
	file_injective_exchange_v2_exchange_proto_init()
	file_injective_exchange_v2_market_proto_init()
	file_injective_exchange_v2_order_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_injective_exchange_v2_events_proto_rawDesc), len(file_injective_exchange_v2_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_injective_exchange_v2_events_proto_goTypes,
		DependencyIndexes: file_injective_exchange_v2_events_proto_depIdxs,
		MessageInfos:      file_injective_exchange_v2_events_proto_msgTypes,
	}.Build()
	File_injective_exchange_v2_events_proto = out.File
	file_injective_exchange_v2_events_proto_goTypes = nil
	file_injective_exchange_v2_events_proto_depIdxs = nil
}
