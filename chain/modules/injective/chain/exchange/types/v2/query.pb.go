// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: injective/exchange/v2/query.proto

package v2

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/cosmos/gogoproto/gogoproto"
	types "github.com/wutdahack1337/flux-sdk-go/chain/modules/injective/chain/oracle/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderSide int32

const (
	// will return both
	OrderSide_Side_Unspecified OrderSide = 0
	OrderSide_Buy              OrderSide = 1
	OrderSide_Sell             OrderSide = 2
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "Side_Unspecified",
		1: "Buy",
		2: "Sell",
	}
	OrderSide_value = map[string]int32{
		"Side_Unspecified": 0,
		"Buy":              1,
		"Sell":             2,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_injective_exchange_v2_query_proto_enumTypes[0].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_injective_exchange_v2_query_proto_enumTypes[0]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{0}
}

// CancellationStrategy is the list of cancellation strategies.
type CancellationStrategy int32

const (
	// just cancelling in random order in most efficient way
	CancellationStrategy_UnspecifiedOrder CancellationStrategy = 0
	// e.g. for buy orders from lowest to highest price
	CancellationStrategy_FromWorstToBest CancellationStrategy = 1
	// e.g. for buy orders from higest to lowest price
	CancellationStrategy_FromBestToWorst CancellationStrategy = 2
)

// Enum value maps for CancellationStrategy.
var (
	CancellationStrategy_name = map[int32]string{
		0: "UnspecifiedOrder",
		1: "FromWorstToBest",
		2: "FromBestToWorst",
	}
	CancellationStrategy_value = map[string]int32{
		"UnspecifiedOrder": 0,
		"FromWorstToBest":  1,
		"FromBestToWorst":  2,
	}
)

func (x CancellationStrategy) Enum() *CancellationStrategy {
	p := new(CancellationStrategy)
	*p = x
	return p
}

func (x CancellationStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancellationStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_injective_exchange_v2_query_proto_enumTypes[1].Descriptor()
}

func (CancellationStrategy) Type() protoreflect.EnumType {
	return &file_injective_exchange_v2_query_proto_enumTypes[1]
}

func (x CancellationStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancellationStrategy.Descriptor instead.
func (CancellationStrategy) EnumDescriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{1}
}

type Subaccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount's trader address
	Trader string `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	// the subaccount's nonce number
	SubaccountNonce uint32 `protobuf:"varint,2,opt,name=subaccount_nonce,json=subaccountNonce,proto3" json:"subaccount_nonce,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Subaccount) Reset() {
	*x = Subaccount{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subaccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subaccount) ProtoMessage() {}

func (x *Subaccount) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subaccount.ProtoReflect.Descriptor instead.
func (*Subaccount) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{0}
}

func (x *Subaccount) GetTrader() string {
	if x != nil {
		return x.Trader
	}
	return ""
}

func (x *Subaccount) GetSubaccountNonce() uint32 {
	if x != nil {
		return x.SubaccountNonce
	}
	return 0
}

type QuerySubaccountOrdersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the market ID
	MarketId      string `protobuf:"bytes,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountOrdersRequest) Reset() {
	*x = QuerySubaccountOrdersRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountOrdersRequest) ProtoMessage() {}

func (x *QuerySubaccountOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountOrdersRequest.ProtoReflect.Descriptor instead.
func (*QuerySubaccountOrdersRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{1}
}

func (x *QuerySubaccountOrdersRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QuerySubaccountOrdersRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

type QuerySubaccountOrdersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuyOrders     []*SubaccountOrderData `protobuf:"bytes,1,rep,name=buy_orders,json=buyOrders,proto3" json:"buy_orders,omitempty"`
	SellOrders    []*SubaccountOrderData `protobuf:"bytes,2,rep,name=sell_orders,json=sellOrders,proto3" json:"sell_orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountOrdersResponse) Reset() {
	*x = QuerySubaccountOrdersResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountOrdersResponse) ProtoMessage() {}

func (x *QuerySubaccountOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountOrdersResponse.ProtoReflect.Descriptor instead.
func (*QuerySubaccountOrdersResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{2}
}

func (x *QuerySubaccountOrdersResponse) GetBuyOrders() []*SubaccountOrderData {
	if x != nil {
		return x.BuyOrders
	}
	return nil
}

func (x *QuerySubaccountOrdersResponse) GetSellOrders() []*SubaccountOrderData {
	if x != nil {
		return x.SellOrders
	}
	return nil
}

type SubaccountOrderbookMetadataWithMarket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount orderbook details
	Metadata *SubaccountOrderbookMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// the market ID
	MarketId string `protobuf:"bytes,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// true if the orderbook is for a buy orders
	IsBuy         bool `protobuf:"varint,3,opt,name=isBuy,proto3" json:"isBuy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubaccountOrderbookMetadataWithMarket) Reset() {
	*x = SubaccountOrderbookMetadataWithMarket{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubaccountOrderbookMetadataWithMarket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubaccountOrderbookMetadataWithMarket) ProtoMessage() {}

func (x *SubaccountOrderbookMetadataWithMarket) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubaccountOrderbookMetadataWithMarket.ProtoReflect.Descriptor instead.
func (*SubaccountOrderbookMetadataWithMarket) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{3}
}

func (x *SubaccountOrderbookMetadataWithMarket) GetMetadata() *SubaccountOrderbookMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SubaccountOrderbookMetadataWithMarket) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *SubaccountOrderbookMetadataWithMarket) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

// QueryExchangeParamsRequest is the request type for the Query/ExchangeParams
// RPC method.
type QueryExchangeParamsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryExchangeParamsRequest) Reset() {
	*x = QueryExchangeParamsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExchangeParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExchangeParamsRequest) ProtoMessage() {}

func (x *QueryExchangeParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExchangeParamsRequest.ProtoReflect.Descriptor instead.
func (*QueryExchangeParamsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{4}
}

// QueryExchangeParamsRequest is the response type for the Query/ExchangeParams
// RPC method.
type QueryExchangeParamsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *Params                `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryExchangeParamsResponse) Reset() {
	*x = QueryExchangeParamsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExchangeParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExchangeParamsResponse) ProtoMessage() {}

func (x *QueryExchangeParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExchangeParamsResponse.ProtoReflect.Descriptor instead.
func (*QueryExchangeParamsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryExchangeParamsResponse) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// QuerySubaccountDepositsRequest is the request type for the
// Query/SubaccountDeposits RPC method.
type QuerySubaccountDepositsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the subaccount details
	Subaccount    *Subaccount `protobuf:"bytes,2,opt,name=subaccount,proto3" json:"subaccount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountDepositsRequest) Reset() {
	*x = QuerySubaccountDepositsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountDepositsRequest) ProtoMessage() {}

func (x *QuerySubaccountDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountDepositsRequest.ProtoReflect.Descriptor instead.
func (*QuerySubaccountDepositsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{6}
}

func (x *QuerySubaccountDepositsRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QuerySubaccountDepositsRequest) GetSubaccount() *Subaccount {
	if x != nil {
		return x.Subaccount
	}
	return nil
}

// QuerySubaccountDepositsResponse is the response type for the
// Query/SubaccountDeposits RPC method.
type QuerySubaccountDepositsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deposits      map[string]*Deposit    `protobuf:"bytes,1,rep,name=deposits,proto3" json:"deposits,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountDepositsResponse) Reset() {
	*x = QuerySubaccountDepositsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountDepositsResponse) ProtoMessage() {}

func (x *QuerySubaccountDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountDepositsResponse.ProtoReflect.Descriptor instead.
func (*QuerySubaccountDepositsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{7}
}

func (x *QuerySubaccountDepositsResponse) GetDeposits() map[string]*Deposit {
	if x != nil {
		return x.Deposits
	}
	return nil
}

// QueryExchangeBalancesRequest is the request type for the
// Query/ExchangeBalances RPC method.
type QueryExchangeBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryExchangeBalancesRequest) Reset() {
	*x = QueryExchangeBalancesRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExchangeBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExchangeBalancesRequest) ProtoMessage() {}

func (x *QueryExchangeBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExchangeBalancesRequest.ProtoReflect.Descriptor instead.
func (*QueryExchangeBalancesRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{8}
}

// QuerySubaccountDepositsResponse is the response type for the
// Query/SubaccountDeposits RPC method.
type QueryExchangeBalancesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balances      []*Balance             `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryExchangeBalancesResponse) Reset() {
	*x = QueryExchangeBalancesResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExchangeBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExchangeBalancesResponse) ProtoMessage() {}

func (x *QueryExchangeBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExchangeBalancesResponse.ProtoReflect.Descriptor instead.
func (*QueryExchangeBalancesResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryExchangeBalancesResponse) GetBalances() []*Balance {
	if x != nil {
		return x.Balances
	}
	return nil
}

// QueryAggregateVolumeRequest is the request type for the Query/AggregateVolume
// RPC method.
type QueryAggregateVolumeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// can either be an address or a subaccount
	Account       string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAggregateVolumeRequest) Reset() {
	*x = QueryAggregateVolumeRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAggregateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAggregateVolumeRequest) ProtoMessage() {}

func (x *QueryAggregateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAggregateVolumeRequest.ProtoReflect.Descriptor instead.
func (*QueryAggregateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{10}
}

func (x *QueryAggregateVolumeRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// QueryAggregateVolumeResponse is the response type for the
// Query/AggregateVolume RPC method.
type QueryAggregateVolumeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// if an address is specified, then the aggregate_volumes will aggregate the
	// volumes across all subaccounts for the address
	AggregateVolumes []*MarketVolume `protobuf:"bytes,1,rep,name=aggregate_volumes,json=aggregateVolumes,proto3" json:"aggregate_volumes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QueryAggregateVolumeResponse) Reset() {
	*x = QueryAggregateVolumeResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAggregateVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAggregateVolumeResponse) ProtoMessage() {}

func (x *QueryAggregateVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAggregateVolumeResponse.ProtoReflect.Descriptor instead.
func (*QueryAggregateVolumeResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryAggregateVolumeResponse) GetAggregateVolumes() []*MarketVolume {
	if x != nil {
		return x.AggregateVolumes
	}
	return nil
}

// QueryAggregateVolumesRequest is the request type for the
// Query/AggregateVolumes RPC method.
type QueryAggregateVolumesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []string               `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	MarketIds     []string               `protobuf:"bytes,2,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAggregateVolumesRequest) Reset() {
	*x = QueryAggregateVolumesRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAggregateVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAggregateVolumesRequest) ProtoMessage() {}

func (x *QueryAggregateVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAggregateVolumesRequest.ProtoReflect.Descriptor instead.
func (*QueryAggregateVolumesRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{12}
}

func (x *QueryAggregateVolumesRequest) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *QueryAggregateVolumesRequest) GetMarketIds() []string {
	if x != nil {
		return x.MarketIds
	}
	return nil
}

// QueryAggregateVolumesResponse is the response type for the
// Query/AggregateVolumes RPC method.
type QueryAggregateVolumesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the aggregate volume records for the accounts specified
	AggregateAccountVolumes []*AggregateAccountVolumeRecord `protobuf:"bytes,1,rep,name=aggregate_account_volumes,json=aggregateAccountVolumes,proto3" json:"aggregate_account_volumes,omitempty"`
	// the aggregate volumes for the markets specified
	AggregateMarketVolumes []*MarketVolume `protobuf:"bytes,2,rep,name=aggregate_market_volumes,json=aggregateMarketVolumes,proto3" json:"aggregate_market_volumes,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *QueryAggregateVolumesResponse) Reset() {
	*x = QueryAggregateVolumesResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAggregateVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAggregateVolumesResponse) ProtoMessage() {}

func (x *QueryAggregateVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAggregateVolumesResponse.ProtoReflect.Descriptor instead.
func (*QueryAggregateVolumesResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{13}
}

func (x *QueryAggregateVolumesResponse) GetAggregateAccountVolumes() []*AggregateAccountVolumeRecord {
	if x != nil {
		return x.AggregateAccountVolumes
	}
	return nil
}

func (x *QueryAggregateVolumesResponse) GetAggregateMarketVolumes() []*MarketVolume {
	if x != nil {
		return x.AggregateMarketVolumes
	}
	return nil
}

// QueryAggregateMarketVolumeRequest is the request type for the
// Query/AggregateMarketVolume RPC method.
type QueryAggregateMarketVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAggregateMarketVolumeRequest) Reset() {
	*x = QueryAggregateMarketVolumeRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAggregateMarketVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAggregateMarketVolumeRequest) ProtoMessage() {}

func (x *QueryAggregateMarketVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAggregateMarketVolumeRequest.ProtoReflect.Descriptor instead.
func (*QueryAggregateMarketVolumeRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{14}
}

func (x *QueryAggregateMarketVolumeRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QueryAggregateMarketVolumeResponse is the response type for the
// Query/AggregateMarketVolume RPC method.
type QueryAggregateMarketVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volume        *VolumeRecord          `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAggregateMarketVolumeResponse) Reset() {
	*x = QueryAggregateMarketVolumeResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAggregateMarketVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAggregateMarketVolumeResponse) ProtoMessage() {}

func (x *QueryAggregateMarketVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAggregateMarketVolumeResponse.ProtoReflect.Descriptor instead.
func (*QueryAggregateMarketVolumeResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{15}
}

func (x *QueryAggregateMarketVolumeResponse) GetVolume() *VolumeRecord {
	if x != nil {
		return x.Volume
	}
	return nil
}

// QueryDenomDecimalRequest is the request type for the Query/DenomDecimal RPC
// method.
type QueryDenomDecimalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Denom         string                 `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDenomDecimalRequest) Reset() {
	*x = QueryDenomDecimalRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDenomDecimalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDenomDecimalRequest) ProtoMessage() {}

func (x *QueryDenomDecimalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDenomDecimalRequest.ProtoReflect.Descriptor instead.
func (*QueryDenomDecimalRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{16}
}

func (x *QueryDenomDecimalRequest) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

// QueryDenomDecimalResponse is the response type for the Query/DenomDecimal RPC
// method.
type QueryDenomDecimalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decimal       uint64                 `protobuf:"varint,1,opt,name=decimal,proto3" json:"decimal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDenomDecimalResponse) Reset() {
	*x = QueryDenomDecimalResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDenomDecimalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDenomDecimalResponse) ProtoMessage() {}

func (x *QueryDenomDecimalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDenomDecimalResponse.ProtoReflect.Descriptor instead.
func (*QueryDenomDecimalResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{17}
}

func (x *QueryDenomDecimalResponse) GetDecimal() uint64 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

// QueryDenomDecimalsRequest is the request type for the Query/DenomDecimals RPC
// method.
type QueryDenomDecimalsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// denoms can be empty to query all denom decimals
	Denoms        []string `protobuf:"bytes,1,rep,name=denoms,proto3" json:"denoms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDenomDecimalsRequest) Reset() {
	*x = QueryDenomDecimalsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDenomDecimalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDenomDecimalsRequest) ProtoMessage() {}

func (x *QueryDenomDecimalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDenomDecimalsRequest.ProtoReflect.Descriptor instead.
func (*QueryDenomDecimalsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{18}
}

func (x *QueryDenomDecimalsRequest) GetDenoms() []string {
	if x != nil {
		return x.Denoms
	}
	return nil
}

// QueryDenomDecimalsRequest is the response type for the Query/DenomDecimals
// RPC method.
type QueryDenomDecimalsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DenomDecimals []*DenomDecimals       `protobuf:"bytes,1,rep,name=denom_decimals,json=denomDecimals,proto3" json:"denom_decimals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDenomDecimalsResponse) Reset() {
	*x = QueryDenomDecimalsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDenomDecimalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDenomDecimalsResponse) ProtoMessage() {}

func (x *QueryDenomDecimalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDenomDecimalsResponse.ProtoReflect.Descriptor instead.
func (*QueryDenomDecimalsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{19}
}

func (x *QueryDenomDecimalsResponse) GetDenomDecimals() []*DenomDecimals {
	if x != nil {
		return x.DenomDecimals
	}
	return nil
}

// QueryAggregateMarketVolumesRequest is the request type for the
// Query/AggregateMarketVolumes RPC method.
type QueryAggregateMarketVolumesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketIds     []string               `protobuf:"bytes,1,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAggregateMarketVolumesRequest) Reset() {
	*x = QueryAggregateMarketVolumesRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAggregateMarketVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAggregateMarketVolumesRequest) ProtoMessage() {}

func (x *QueryAggregateMarketVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAggregateMarketVolumesRequest.ProtoReflect.Descriptor instead.
func (*QueryAggregateMarketVolumesRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{20}
}

func (x *QueryAggregateMarketVolumesRequest) GetMarketIds() []string {
	if x != nil {
		return x.MarketIds
	}
	return nil
}

// QueryAggregateMarketVolumesResponse is the response type for the
// Query/AggregateMarketVolumes RPC method.
type QueryAggregateMarketVolumesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the aggregate volumes for the entire market
	Volumes       []*MarketVolume `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAggregateMarketVolumesResponse) Reset() {
	*x = QueryAggregateMarketVolumesResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAggregateMarketVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAggregateMarketVolumesResponse) ProtoMessage() {}

func (x *QueryAggregateMarketVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAggregateMarketVolumesResponse.ProtoReflect.Descriptor instead.
func (*QueryAggregateMarketVolumesResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{21}
}

func (x *QueryAggregateMarketVolumesResponse) GetVolumes() []*MarketVolume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

// QuerySubaccountDepositsRequest is the request type for the
// Query/SubaccountDeposits RPC method.
type QuerySubaccountDepositRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the token denom
	Denom         string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountDepositRequest) Reset() {
	*x = QuerySubaccountDepositRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountDepositRequest) ProtoMessage() {}

func (x *QuerySubaccountDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountDepositRequest.ProtoReflect.Descriptor instead.
func (*QuerySubaccountDepositRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{22}
}

func (x *QuerySubaccountDepositRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QuerySubaccountDepositRequest) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

// QuerySubaccountDepositsResponse is the response type for the
// Query/SubaccountDeposits RPC method.
type QuerySubaccountDepositResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deposits      *Deposit               `protobuf:"bytes,1,opt,name=deposits,proto3" json:"deposits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountDepositResponse) Reset() {
	*x = QuerySubaccountDepositResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountDepositResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountDepositResponse) ProtoMessage() {}

func (x *QuerySubaccountDepositResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountDepositResponse.ProtoReflect.Descriptor instead.
func (*QuerySubaccountDepositResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{23}
}

func (x *QuerySubaccountDepositResponse) GetDeposits() *Deposit {
	if x != nil {
		return x.Deposits
	}
	return nil
}

// QuerySpotMarketsRequest is the request type for the Query/SpotMarkets RPC
// method.
type QuerySpotMarketsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the market, for convenience it is set to string - not enum
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Filter by market IDs
	MarketIds     []string `protobuf:"bytes,2,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySpotMarketsRequest) Reset() {
	*x = QuerySpotMarketsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotMarketsRequest) ProtoMessage() {}

func (x *QuerySpotMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotMarketsRequest.ProtoReflect.Descriptor instead.
func (*QuerySpotMarketsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{24}
}

func (x *QuerySpotMarketsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QuerySpotMarketsRequest) GetMarketIds() []string {
	if x != nil {
		return x.MarketIds
	}
	return nil
}

// QuerySpotMarketsResponse is the response type for the Query/SpotMarkets RPC
// method.
type QuerySpotMarketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Markets       []*SpotMarket          `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySpotMarketsResponse) Reset() {
	*x = QuerySpotMarketsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotMarketsResponse) ProtoMessage() {}

func (x *QuerySpotMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotMarketsResponse.ProtoReflect.Descriptor instead.
func (*QuerySpotMarketsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{25}
}

func (x *QuerySpotMarketsResponse) GetMarkets() []*SpotMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

// QuerySpotMarketRequest is the request type for the Query/SpotMarket RPC
// method.
type QuerySpotMarketRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId      string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySpotMarketRequest) Reset() {
	*x = QuerySpotMarketRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotMarketRequest) ProtoMessage() {}

func (x *QuerySpotMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotMarketRequest.ProtoReflect.Descriptor instead.
func (*QuerySpotMarketRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{26}
}

func (x *QuerySpotMarketRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QuerySpotMarketResponse is the response type for the Query/SpotMarket RPC
// method.
type QuerySpotMarketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Market        *SpotMarket            `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySpotMarketResponse) Reset() {
	*x = QuerySpotMarketResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotMarketResponse) ProtoMessage() {}

func (x *QuerySpotMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotMarketResponse.ProtoReflect.Descriptor instead.
func (*QuerySpotMarketResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{27}
}

func (x *QuerySpotMarketResponse) GetMarket() *SpotMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

// QuerySpotOrderbookRequest is the request type for the Query/SpotOrderbook RPC
// method.
type QuerySpotOrderbookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// the maximum number of orderbook entries to return per side (optional)
	Limit uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// the order side to return the orderbook entries for (optional)
	OrderSide OrderSide `protobuf:"varint,3,opt,name=order_side,json=orderSide,proto3,enum=injective.exchange.v2.OrderSide" json:"order_side,omitempty"`
	// limits the number of entries to return per side based on the cumulative
	// notional (in human readable format)
	LimitCumulativeNotional string `protobuf:"bytes,4,opt,name=limit_cumulative_notional,json=limitCumulativeNotional,proto3" json:"limit_cumulative_notional,omitempty"`
	// limits the number of entries to return per side based on the cumulative
	// quantity (in human readable format)
	LimitCumulativeQuantity string `protobuf:"bytes,5,opt,name=limit_cumulative_quantity,json=limitCumulativeQuantity,proto3" json:"limit_cumulative_quantity,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *QuerySpotOrderbookRequest) Reset() {
	*x = QuerySpotOrderbookRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotOrderbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotOrderbookRequest) ProtoMessage() {}

func (x *QuerySpotOrderbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotOrderbookRequest.ProtoReflect.Descriptor instead.
func (*QuerySpotOrderbookRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{28}
}

func (x *QuerySpotOrderbookRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QuerySpotOrderbookRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QuerySpotOrderbookRequest) GetOrderSide() OrderSide {
	if x != nil {
		return x.OrderSide
	}
	return OrderSide_Side_Unspecified
}

func (x *QuerySpotOrderbookRequest) GetLimitCumulativeNotional() string {
	if x != nil {
		return x.LimitCumulativeNotional
	}
	return ""
}

func (x *QuerySpotOrderbookRequest) GetLimitCumulativeQuantity() string {
	if x != nil {
		return x.LimitCumulativeQuantity
	}
	return ""
}

// QuerySpotOrderbookResponse is the response type for the Query/SpotOrderbook
// RPC method.
type QuerySpotOrderbookResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BuysPriceLevel  []*Level               `protobuf:"bytes,1,rep,name=buys_price_level,json=buysPriceLevel,proto3" json:"buys_price_level,omitempty"`
	SellsPriceLevel []*Level               `protobuf:"bytes,2,rep,name=sells_price_level,json=sellsPriceLevel,proto3" json:"sells_price_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QuerySpotOrderbookResponse) Reset() {
	*x = QuerySpotOrderbookResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotOrderbookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotOrderbookResponse) ProtoMessage() {}

func (x *QuerySpotOrderbookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotOrderbookResponse.ProtoReflect.Descriptor instead.
func (*QuerySpotOrderbookResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{29}
}

func (x *QuerySpotOrderbookResponse) GetBuysPriceLevel() []*Level {
	if x != nil {
		return x.BuysPriceLevel
	}
	return nil
}

func (x *QuerySpotOrderbookResponse) GetSellsPriceLevel() []*Level {
	if x != nil {
		return x.SellsPriceLevel
	}
	return nil
}

type FullSpotMarket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// spot market details
	Market *SpotMarket `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// mid_price_and_tob defines the mid price for this market and the best ask
	// and bid orders
	MidPriceAndTob *MidPriceAndTOB `protobuf:"bytes,2,opt,name=mid_price_and_tob,json=midPriceAndTob,proto3" json:"mid_price_and_tob,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FullSpotMarket) Reset() {
	*x = FullSpotMarket{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullSpotMarket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullSpotMarket) ProtoMessage() {}

func (x *FullSpotMarket) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullSpotMarket.ProtoReflect.Descriptor instead.
func (*FullSpotMarket) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{30}
}

func (x *FullSpotMarket) GetMarket() *SpotMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *FullSpotMarket) GetMidPriceAndTob() *MidPriceAndTOB {
	if x != nil {
		return x.MidPriceAndTob
	}
	return nil
}

// QueryFullSpotMarketsRequest is the request type for the Query/FullSpotMarkets
// RPC method.
type QueryFullSpotMarketsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the market, for convenience it is set to string - not enum
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Filter by market IDs
	MarketIds []string `protobuf:"bytes,2,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	// Flag to return the markets mid price and top of the book buy and sell
	// orders.
	WithMidPriceAndTob bool `protobuf:"varint,3,opt,name=with_mid_price_and_tob,json=withMidPriceAndTob,proto3" json:"with_mid_price_and_tob,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *QueryFullSpotMarketsRequest) Reset() {
	*x = QueryFullSpotMarketsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFullSpotMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFullSpotMarketsRequest) ProtoMessage() {}

func (x *QueryFullSpotMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFullSpotMarketsRequest.ProtoReflect.Descriptor instead.
func (*QueryFullSpotMarketsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{31}
}

func (x *QueryFullSpotMarketsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QueryFullSpotMarketsRequest) GetMarketIds() []string {
	if x != nil {
		return x.MarketIds
	}
	return nil
}

func (x *QueryFullSpotMarketsRequest) GetWithMidPriceAndTob() bool {
	if x != nil {
		return x.WithMidPriceAndTob
	}
	return false
}

// QueryFullSpotMarketsResponse is the response type for the
// Query/FullSpotMarkets RPC method.
type QueryFullSpotMarketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Markets       []*FullSpotMarket      `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFullSpotMarketsResponse) Reset() {
	*x = QueryFullSpotMarketsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFullSpotMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFullSpotMarketsResponse) ProtoMessage() {}

func (x *QueryFullSpotMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFullSpotMarketsResponse.ProtoReflect.Descriptor instead.
func (*QueryFullSpotMarketsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{32}
}

func (x *QueryFullSpotMarketsResponse) GetMarkets() []*FullSpotMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

// QuerySpotMarketRequest is the request type for the Query/SpotMarket RPC
// method.
type QueryFullSpotMarketRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// Flag to return the markets mid price and top of the book buy and sell
	// orders.
	WithMidPriceAndTob bool `protobuf:"varint,2,opt,name=with_mid_price_and_tob,json=withMidPriceAndTob,proto3" json:"with_mid_price_and_tob,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *QueryFullSpotMarketRequest) Reset() {
	*x = QueryFullSpotMarketRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFullSpotMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFullSpotMarketRequest) ProtoMessage() {}

func (x *QueryFullSpotMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFullSpotMarketRequest.ProtoReflect.Descriptor instead.
func (*QueryFullSpotMarketRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{33}
}

func (x *QueryFullSpotMarketRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryFullSpotMarketRequest) GetWithMidPriceAndTob() bool {
	if x != nil {
		return x.WithMidPriceAndTob
	}
	return false
}

// QuerySpotMarketResponse is the response type for the Query/SpotMarket RPC
// method.
type QueryFullSpotMarketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Market        *FullSpotMarket        `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFullSpotMarketResponse) Reset() {
	*x = QueryFullSpotMarketResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFullSpotMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFullSpotMarketResponse) ProtoMessage() {}

func (x *QueryFullSpotMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFullSpotMarketResponse.ProtoReflect.Descriptor instead.
func (*QueryFullSpotMarketResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{34}
}

func (x *QueryFullSpotMarketResponse) GetMarket() *FullSpotMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

// QuerySpotOrdersByHashesRequest is the request type for the
// Query/SpotOrdersByHashes RPC method.
type QuerySpotOrdersByHashesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// SubaccountID of the trader
	SubaccountId string `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the order hashes
	OrderHashes   []string `protobuf:"bytes,3,rep,name=order_hashes,json=orderHashes,proto3" json:"order_hashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySpotOrdersByHashesRequest) Reset() {
	*x = QuerySpotOrdersByHashesRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotOrdersByHashesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotOrdersByHashesRequest) ProtoMessage() {}

func (x *QuerySpotOrdersByHashesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotOrdersByHashesRequest.ProtoReflect.Descriptor instead.
func (*QuerySpotOrdersByHashesRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{35}
}

func (x *QuerySpotOrdersByHashesRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QuerySpotOrdersByHashesRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QuerySpotOrdersByHashesRequest) GetOrderHashes() []string {
	if x != nil {
		return x.OrderHashes
	}
	return nil
}

// QuerySpotOrdersByHashesResponse is the response type for the
// Query/SpotOrdersByHashes RPC method.
type QuerySpotOrdersByHashesResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Orders        []*TrimmedSpotLimitOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySpotOrdersByHashesResponse) Reset() {
	*x = QuerySpotOrdersByHashesResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotOrdersByHashesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotOrdersByHashesResponse) ProtoMessage() {}

func (x *QuerySpotOrdersByHashesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotOrdersByHashesResponse.ProtoReflect.Descriptor instead.
func (*QuerySpotOrdersByHashesResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{36}
}

func (x *QuerySpotOrdersByHashesResponse) GetOrders() []*TrimmedSpotLimitOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

// QueryTraderSpotOrdersRequest is the request type for the
// Query/TraderSpotOrders RPC method.
type QueryTraderSpotOrdersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// SubaccountID of the trader
	SubaccountId  string `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTraderSpotOrdersRequest) Reset() {
	*x = QueryTraderSpotOrdersRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTraderSpotOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTraderSpotOrdersRequest) ProtoMessage() {}

func (x *QueryTraderSpotOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTraderSpotOrdersRequest.ProtoReflect.Descriptor instead.
func (*QueryTraderSpotOrdersRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{37}
}

func (x *QueryTraderSpotOrdersRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryTraderSpotOrdersRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

// QueryAccountAddressSpotOrdersRequest is the request type for the
// Query/AccountAddressSpotOrders RPC method.
type QueryAccountAddressSpotOrdersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// Account address of the trader
	AccountAddress string `protobuf:"bytes,2,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryAccountAddressSpotOrdersRequest) Reset() {
	*x = QueryAccountAddressSpotOrdersRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAccountAddressSpotOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountAddressSpotOrdersRequest) ProtoMessage() {}

func (x *QueryAccountAddressSpotOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAccountAddressSpotOrdersRequest.ProtoReflect.Descriptor instead.
func (*QueryAccountAddressSpotOrdersRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{38}
}

func (x *QueryAccountAddressSpotOrdersRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryAccountAddressSpotOrdersRequest) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

type TrimmedSpotLimitOrder struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// price of the order (in human readable format)
	Price string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	// quantity of the order (in human readable format)
	Quantity string `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// the amount of the quantity remaining fillable (in human readable format)
	Fillable string `protobuf:"bytes,3,opt,name=fillable,proto3" json:"fillable,omitempty"`
	// true if the order is a buy
	IsBuy bool `protobuf:"varint,4,opt,name=isBuy,proto3" json:"isBuy,omitempty"`
	// the order hash (optional)
	OrderHash string `protobuf:"bytes,5,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	// the client order ID (optional)
	Cid           string `protobuf:"bytes,6,opt,name=cid,proto3" json:"cid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrimmedSpotLimitOrder) Reset() {
	*x = TrimmedSpotLimitOrder{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrimmedSpotLimitOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrimmedSpotLimitOrder) ProtoMessage() {}

func (x *TrimmedSpotLimitOrder) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrimmedSpotLimitOrder.ProtoReflect.Descriptor instead.
func (*TrimmedSpotLimitOrder) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{39}
}

func (x *TrimmedSpotLimitOrder) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *TrimmedSpotLimitOrder) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *TrimmedSpotLimitOrder) GetFillable() string {
	if x != nil {
		return x.Fillable
	}
	return ""
}

func (x *TrimmedSpotLimitOrder) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *TrimmedSpotLimitOrder) GetOrderHash() string {
	if x != nil {
		return x.OrderHash
	}
	return ""
}

func (x *TrimmedSpotLimitOrder) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

// QueryTraderSpotOrdersResponse is the response type for the
// Query/TraderSpotOrders RPC method.
type QueryTraderSpotOrdersResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Orders        []*TrimmedSpotLimitOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTraderSpotOrdersResponse) Reset() {
	*x = QueryTraderSpotOrdersResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTraderSpotOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTraderSpotOrdersResponse) ProtoMessage() {}

func (x *QueryTraderSpotOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTraderSpotOrdersResponse.ProtoReflect.Descriptor instead.
func (*QueryTraderSpotOrdersResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{40}
}

func (x *QueryTraderSpotOrdersResponse) GetOrders() []*TrimmedSpotLimitOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

// QueryAccountAddressSpotOrdersResponse is the response type for the
// Query/AccountAddressSpotOrders RPC method.
type QueryAccountAddressSpotOrdersResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Orders        []*TrimmedSpotLimitOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAccountAddressSpotOrdersResponse) Reset() {
	*x = QueryAccountAddressSpotOrdersResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAccountAddressSpotOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountAddressSpotOrdersResponse) ProtoMessage() {}

func (x *QueryAccountAddressSpotOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAccountAddressSpotOrdersResponse.ProtoReflect.Descriptor instead.
func (*QueryAccountAddressSpotOrdersResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{41}
}

func (x *QueryAccountAddressSpotOrdersResponse) GetOrders() []*TrimmedSpotLimitOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

// QuerySpotMidPriceAndTOBRequest is the request type for the
// Query/SpotMidPriceAndTOB RPC method.
type QuerySpotMidPriceAndTOBRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId      string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySpotMidPriceAndTOBRequest) Reset() {
	*x = QuerySpotMidPriceAndTOBRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotMidPriceAndTOBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotMidPriceAndTOBRequest) ProtoMessage() {}

func (x *QuerySpotMidPriceAndTOBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotMidPriceAndTOBRequest.ProtoReflect.Descriptor instead.
func (*QuerySpotMidPriceAndTOBRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{42}
}

func (x *QuerySpotMidPriceAndTOBRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QuerySpotMidPriceAndTOBResponse is the response type for the
// Query/SpotMidPriceAndTOB RPC method.
type QuerySpotMidPriceAndTOBResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// mid price of the market (in human readable format)
	MidPrice string `protobuf:"bytes,1,opt,name=mid_price,json=midPrice,proto3" json:"mid_price,omitempty"`
	// best buy price of the market (in human readable format)
	BestBuyPrice string `protobuf:"bytes,2,opt,name=best_buy_price,json=bestBuyPrice,proto3" json:"best_buy_price,omitempty"`
	// best sell price of the market
	BestSellPrice string `protobuf:"bytes,3,opt,name=best_sell_price,json=bestSellPrice,proto3" json:"best_sell_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySpotMidPriceAndTOBResponse) Reset() {
	*x = QuerySpotMidPriceAndTOBResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySpotMidPriceAndTOBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpotMidPriceAndTOBResponse) ProtoMessage() {}

func (x *QuerySpotMidPriceAndTOBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpotMidPriceAndTOBResponse.ProtoReflect.Descriptor instead.
func (*QuerySpotMidPriceAndTOBResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{43}
}

func (x *QuerySpotMidPriceAndTOBResponse) GetMidPrice() string {
	if x != nil {
		return x.MidPrice
	}
	return ""
}

func (x *QuerySpotMidPriceAndTOBResponse) GetBestBuyPrice() string {
	if x != nil {
		return x.BestBuyPrice
	}
	return ""
}

func (x *QuerySpotMidPriceAndTOBResponse) GetBestSellPrice() string {
	if x != nil {
		return x.BestSellPrice
	}
	return ""
}

// QueryDerivativeMidPriceAndTOBRequest is the request type for the
// Query/GetDerivativeMidPriceAndTOB RPC method.
type QueryDerivativeMidPriceAndTOBRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId      string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeMidPriceAndTOBRequest) Reset() {
	*x = QueryDerivativeMidPriceAndTOBRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeMidPriceAndTOBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeMidPriceAndTOBRequest) ProtoMessage() {}

func (x *QueryDerivativeMidPriceAndTOBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeMidPriceAndTOBRequest.ProtoReflect.Descriptor instead.
func (*QueryDerivativeMidPriceAndTOBRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{44}
}

func (x *QueryDerivativeMidPriceAndTOBRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QueryDerivativeMidPriceAndTOBResponse is the response type for the
// Query/GetDerivativeMidPriceAndTOB RPC method.
type QueryDerivativeMidPriceAndTOBResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// mid price of the market
	MidPrice string `protobuf:"bytes,1,opt,name=mid_price,json=midPrice,proto3" json:"mid_price,omitempty"`
	// best buy price of the market
	BestBuyPrice string `protobuf:"bytes,2,opt,name=best_buy_price,json=bestBuyPrice,proto3" json:"best_buy_price,omitempty"`
	// best sell price of the market
	BestSellPrice string `protobuf:"bytes,3,opt,name=best_sell_price,json=bestSellPrice,proto3" json:"best_sell_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeMidPriceAndTOBResponse) Reset() {
	*x = QueryDerivativeMidPriceAndTOBResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeMidPriceAndTOBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeMidPriceAndTOBResponse) ProtoMessage() {}

func (x *QueryDerivativeMidPriceAndTOBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeMidPriceAndTOBResponse.ProtoReflect.Descriptor instead.
func (*QueryDerivativeMidPriceAndTOBResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{45}
}

func (x *QueryDerivativeMidPriceAndTOBResponse) GetMidPrice() string {
	if x != nil {
		return x.MidPrice
	}
	return ""
}

func (x *QueryDerivativeMidPriceAndTOBResponse) GetBestBuyPrice() string {
	if x != nil {
		return x.BestBuyPrice
	}
	return ""
}

func (x *QueryDerivativeMidPriceAndTOBResponse) GetBestSellPrice() string {
	if x != nil {
		return x.BestSellPrice
	}
	return ""
}

// QueryDerivativeOrderbookRequest is the request type for the
// Query/DerivativeOrderbook RPC method.
type QueryDerivativeOrderbookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId                string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	Limit                   uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	LimitCumulativeNotional string `protobuf:"bytes,3,opt,name=limit_cumulative_notional,json=limitCumulativeNotional,proto3" json:"limit_cumulative_notional,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *QueryDerivativeOrderbookRequest) Reset() {
	*x = QueryDerivativeOrderbookRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeOrderbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeOrderbookRequest) ProtoMessage() {}

func (x *QueryDerivativeOrderbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeOrderbookRequest.ProtoReflect.Descriptor instead.
func (*QueryDerivativeOrderbookRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{46}
}

func (x *QueryDerivativeOrderbookRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryDerivativeOrderbookRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryDerivativeOrderbookRequest) GetLimitCumulativeNotional() string {
	if x != nil {
		return x.LimitCumulativeNotional
	}
	return ""
}

// QueryDerivativeOrderbookResponse is the response type for the
// Query/DerivativeOrderbook RPC method.
type QueryDerivativeOrderbookResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BuysPriceLevel  []*Level               `protobuf:"bytes,1,rep,name=buys_price_level,json=buysPriceLevel,proto3" json:"buys_price_level,omitempty"`
	SellsPriceLevel []*Level               `protobuf:"bytes,2,rep,name=sells_price_level,json=sellsPriceLevel,proto3" json:"sells_price_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryDerivativeOrderbookResponse) Reset() {
	*x = QueryDerivativeOrderbookResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeOrderbookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeOrderbookResponse) ProtoMessage() {}

func (x *QueryDerivativeOrderbookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeOrderbookResponse.ProtoReflect.Descriptor instead.
func (*QueryDerivativeOrderbookResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{47}
}

func (x *QueryDerivativeOrderbookResponse) GetBuysPriceLevel() []*Level {
	if x != nil {
		return x.BuysPriceLevel
	}
	return nil
}

func (x *QueryDerivativeOrderbookResponse) GetSellsPriceLevel() []*Level {
	if x != nil {
		return x.SellsPriceLevel
	}
	return nil
}

// QueryTraderSpotOrdersToCancelUpToAmountRequest is the request type for the
// Query/TraderSpotOrdersToCancelUpToAmountRequest RPC method.
type QueryTraderSpotOrdersToCancelUpToAmountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// SubaccountID of the trader
	SubaccountId string `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the base amount to cancel (free up)
	BaseAmount string `protobuf:"bytes,3,opt,name=base_amount,json=baseAmount,proto3" json:"base_amount,omitempty"`
	// the quote amount to cancel (free up)
	QuoteAmount string `protobuf:"bytes,4,opt,name=quote_amount,json=quoteAmount,proto3" json:"quote_amount,omitempty"`
	// The cancellation strategy
	Strategy CancellationStrategy `protobuf:"varint,5,opt,name=strategy,proto3,enum=injective.exchange.v2.CancellationStrategy" json:"strategy,omitempty"`
	// The reference price for the cancellation strategy, e.g. mid price or mark
	// price
	ReferencePrice string `protobuf:"bytes,6,opt,name=reference_price,json=referencePrice,proto3" json:"reference_price,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) Reset() {
	*x = QueryTraderSpotOrdersToCancelUpToAmountRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTraderSpotOrdersToCancelUpToAmountRequest) ProtoMessage() {}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTraderSpotOrdersToCancelUpToAmountRequest.ProtoReflect.Descriptor instead.
func (*QueryTraderSpotOrdersToCancelUpToAmountRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{48}
}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) GetBaseAmount() string {
	if x != nil {
		return x.BaseAmount
	}
	return ""
}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) GetQuoteAmount() string {
	if x != nil {
		return x.QuoteAmount
	}
	return ""
}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) GetStrategy() CancellationStrategy {
	if x != nil {
		return x.Strategy
	}
	return CancellationStrategy_UnspecifiedOrder
}

func (x *QueryTraderSpotOrdersToCancelUpToAmountRequest) GetReferencePrice() string {
	if x != nil {
		return x.ReferencePrice
	}
	return ""
}

// QueryTraderDerivativeOrdersToCancelUpToAmountRequest is the request type for
// the Query/TraderDerivativeOrdersToCancelUpToAmountRequest RPC method.
type QueryTraderDerivativeOrdersToCancelUpToAmountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// SubaccountID of the trader
	SubaccountId string `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the quote amount to cancel (free up)
	QuoteAmount string `protobuf:"bytes,3,opt,name=quote_amount,json=quoteAmount,proto3" json:"quote_amount,omitempty"`
	// The cancellation strategy
	Strategy CancellationStrategy `protobuf:"varint,4,opt,name=strategy,proto3,enum=injective.exchange.v2.CancellationStrategy" json:"strategy,omitempty"`
	// The reference price for the cancellation strategy, e.g. mid price or mark
	// price
	ReferencePrice string `protobuf:"bytes,5,opt,name=reference_price,json=referencePrice,proto3" json:"reference_price,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryTraderDerivativeOrdersToCancelUpToAmountRequest) Reset() {
	*x = QueryTraderDerivativeOrdersToCancelUpToAmountRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTraderDerivativeOrdersToCancelUpToAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTraderDerivativeOrdersToCancelUpToAmountRequest) ProtoMessage() {}

func (x *QueryTraderDerivativeOrdersToCancelUpToAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTraderDerivativeOrdersToCancelUpToAmountRequest.ProtoReflect.Descriptor instead.
func (*QueryTraderDerivativeOrdersToCancelUpToAmountRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{49}
}

func (x *QueryTraderDerivativeOrdersToCancelUpToAmountRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryTraderDerivativeOrdersToCancelUpToAmountRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QueryTraderDerivativeOrdersToCancelUpToAmountRequest) GetQuoteAmount() string {
	if x != nil {
		return x.QuoteAmount
	}
	return ""
}

func (x *QueryTraderDerivativeOrdersToCancelUpToAmountRequest) GetStrategy() CancellationStrategy {
	if x != nil {
		return x.Strategy
	}
	return CancellationStrategy_UnspecifiedOrder
}

func (x *QueryTraderDerivativeOrdersToCancelUpToAmountRequest) GetReferencePrice() string {
	if x != nil {
		return x.ReferencePrice
	}
	return ""
}

// QueryTraderDerivativeOrdersRequest is the request type for the
// Query/TraderDerivativeOrders RPC method.
type QueryTraderDerivativeOrdersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// SubaccountID of the trader
	SubaccountId  string `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTraderDerivativeOrdersRequest) Reset() {
	*x = QueryTraderDerivativeOrdersRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTraderDerivativeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTraderDerivativeOrdersRequest) ProtoMessage() {}

func (x *QueryTraderDerivativeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTraderDerivativeOrdersRequest.ProtoReflect.Descriptor instead.
func (*QueryTraderDerivativeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{50}
}

func (x *QueryTraderDerivativeOrdersRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryTraderDerivativeOrdersRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

// QueryAccountAddressSpotOrdersRequest is the request type for the
// Query/AccountAddressDerivativeOrders RPC method.
type QueryAccountAddressDerivativeOrdersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// Account address of the trader
	AccountAddress string `protobuf:"bytes,2,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryAccountAddressDerivativeOrdersRequest) Reset() {
	*x = QueryAccountAddressDerivativeOrdersRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAccountAddressDerivativeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountAddressDerivativeOrdersRequest) ProtoMessage() {}

func (x *QueryAccountAddressDerivativeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAccountAddressDerivativeOrdersRequest.ProtoReflect.Descriptor instead.
func (*QueryAccountAddressDerivativeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{51}
}

func (x *QueryAccountAddressDerivativeOrdersRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryAccountAddressDerivativeOrdersRequest) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

type TrimmedDerivativeLimitOrder struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// price of the order (in human readable format)
	Price string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	// quantity of the order (in human readable format)
	Quantity string `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// margin of the order (in human readable format)
	Margin string `protobuf:"bytes,3,opt,name=margin,proto3" json:"margin,omitempty"`
	// the amount of the quantity remaining fillable (in human readable format)
	Fillable string `protobuf:"bytes,4,opt,name=fillable,proto3" json:"fillable,omitempty"`
	// true if the order is a buy
	IsBuy bool `protobuf:"varint,5,opt,name=isBuy,proto3" json:"isBuy,omitempty"`
	// the order hash (optional)
	OrderHash string `protobuf:"bytes,6,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	// the client order ID (optional)
	Cid           string `protobuf:"bytes,7,opt,name=cid,proto3" json:"cid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrimmedDerivativeLimitOrder) Reset() {
	*x = TrimmedDerivativeLimitOrder{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrimmedDerivativeLimitOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrimmedDerivativeLimitOrder) ProtoMessage() {}

func (x *TrimmedDerivativeLimitOrder) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrimmedDerivativeLimitOrder.ProtoReflect.Descriptor instead.
func (*TrimmedDerivativeLimitOrder) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{52}
}

func (x *TrimmedDerivativeLimitOrder) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *TrimmedDerivativeLimitOrder) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *TrimmedDerivativeLimitOrder) GetMargin() string {
	if x != nil {
		return x.Margin
	}
	return ""
}

func (x *TrimmedDerivativeLimitOrder) GetFillable() string {
	if x != nil {
		return x.Fillable
	}
	return ""
}

func (x *TrimmedDerivativeLimitOrder) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *TrimmedDerivativeLimitOrder) GetOrderHash() string {
	if x != nil {
		return x.OrderHash
	}
	return ""
}

func (x *TrimmedDerivativeLimitOrder) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

// QueryTraderDerivativeOrdersResponse is the response type for the
// Query/TraderDerivativeOrders RPC method.
type QueryTraderDerivativeOrdersResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Orders        []*TrimmedDerivativeLimitOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTraderDerivativeOrdersResponse) Reset() {
	*x = QueryTraderDerivativeOrdersResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTraderDerivativeOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTraderDerivativeOrdersResponse) ProtoMessage() {}

func (x *QueryTraderDerivativeOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTraderDerivativeOrdersResponse.ProtoReflect.Descriptor instead.
func (*QueryTraderDerivativeOrdersResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{53}
}

func (x *QueryTraderDerivativeOrdersResponse) GetOrders() []*TrimmedDerivativeLimitOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

// QueryAccountAddressDerivativeOrdersResponse is the response type for the
// Query/AccountAddressDerivativeOrders RPC method.
type QueryAccountAddressDerivativeOrdersResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Orders        []*TrimmedDerivativeLimitOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAccountAddressDerivativeOrdersResponse) Reset() {
	*x = QueryAccountAddressDerivativeOrdersResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAccountAddressDerivativeOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountAddressDerivativeOrdersResponse) ProtoMessage() {}

func (x *QueryAccountAddressDerivativeOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAccountAddressDerivativeOrdersResponse.ProtoReflect.Descriptor instead.
func (*QueryAccountAddressDerivativeOrdersResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{54}
}

func (x *QueryAccountAddressDerivativeOrdersResponse) GetOrders() []*TrimmedDerivativeLimitOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

// QueryTraderDerivativeOrdersRequest is the request type for the
// Query/TraderDerivativeOrders RPC method.
type QueryDerivativeOrdersByHashesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// SubaccountID of the trader
	SubaccountId string `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the order hashes
	OrderHashes   []string `protobuf:"bytes,3,rep,name=order_hashes,json=orderHashes,proto3" json:"order_hashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeOrdersByHashesRequest) Reset() {
	*x = QueryDerivativeOrdersByHashesRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeOrdersByHashesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeOrdersByHashesRequest) ProtoMessage() {}

func (x *QueryDerivativeOrdersByHashesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeOrdersByHashesRequest.ProtoReflect.Descriptor instead.
func (*QueryDerivativeOrdersByHashesRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{55}
}

func (x *QueryDerivativeOrdersByHashesRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryDerivativeOrdersByHashesRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QueryDerivativeOrdersByHashesRequest) GetOrderHashes() []string {
	if x != nil {
		return x.OrderHashes
	}
	return nil
}

// QueryDerivativeOrdersByHashesResponse is the response type for the
// Query/DerivativeOrdersByHashes RPC method.
type QueryDerivativeOrdersByHashesResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Orders        []*TrimmedDerivativeLimitOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeOrdersByHashesResponse) Reset() {
	*x = QueryDerivativeOrdersByHashesResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeOrdersByHashesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeOrdersByHashesResponse) ProtoMessage() {}

func (x *QueryDerivativeOrdersByHashesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeOrdersByHashesResponse.ProtoReflect.Descriptor instead.
func (*QueryDerivativeOrdersByHashesResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{56}
}

func (x *QueryDerivativeOrdersByHashesResponse) GetOrders() []*TrimmedDerivativeLimitOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

// QueryDerivativeMarketsRequest is the request type for the
// Query/DerivativeMarkets RPC method.
type QueryDerivativeMarketsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the market, for convenience it is set to string - not enum
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Filter by market IDs
	MarketIds []string `protobuf:"bytes,2,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	// Flag to return the markets mid price and top of the book buy and sell
	// orders.
	WithMidPriceAndTob bool `protobuf:"varint,3,opt,name=with_mid_price_and_tob,json=withMidPriceAndTob,proto3" json:"with_mid_price_and_tob,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *QueryDerivativeMarketsRequest) Reset() {
	*x = QueryDerivativeMarketsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeMarketsRequest) ProtoMessage() {}

func (x *QueryDerivativeMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeMarketsRequest.ProtoReflect.Descriptor instead.
func (*QueryDerivativeMarketsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{57}
}

func (x *QueryDerivativeMarketsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QueryDerivativeMarketsRequest) GetMarketIds() []string {
	if x != nil {
		return x.MarketIds
	}
	return nil
}

func (x *QueryDerivativeMarketsRequest) GetWithMidPriceAndTob() bool {
	if x != nil {
		return x.WithMidPriceAndTob
	}
	return false
}

type PriceLevel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Price string                 `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	// quantity
	Quantity      string `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PriceLevel) Reset() {
	*x = PriceLevel{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceLevel) ProtoMessage() {}

func (x *PriceLevel) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceLevel.ProtoReflect.Descriptor instead.
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{58}
}

func (x *PriceLevel) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *PriceLevel) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

type PerpetualMarketState struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	MarketInfo    *PerpetualMarketInfo    `protobuf:"bytes,1,opt,name=market_info,json=marketInfo,proto3" json:"market_info,omitempty"`
	FundingInfo   *PerpetualMarketFunding `protobuf:"bytes,2,opt,name=funding_info,json=fundingInfo,proto3" json:"funding_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerpetualMarketState) Reset() {
	*x = PerpetualMarketState{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerpetualMarketState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerpetualMarketState) ProtoMessage() {}

func (x *PerpetualMarketState) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerpetualMarketState.ProtoReflect.Descriptor instead.
func (*PerpetualMarketState) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{59}
}

func (x *PerpetualMarketState) GetMarketInfo() *PerpetualMarketInfo {
	if x != nil {
		return x.MarketInfo
	}
	return nil
}

func (x *PerpetualMarketState) GetFundingInfo() *PerpetualMarketFunding {
	if x != nil {
		return x.FundingInfo
	}
	return nil
}

type FullDerivativeMarket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// derivative market details
	Market *DerivativeMarket `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// perpetual market state or expiry futures market state
	//
	// Types that are valid to be assigned to Info:
	//
	//	*FullDerivativeMarket_PerpetualInfo
	//	*FullDerivativeMarket_FuturesInfo
	Info isFullDerivativeMarket_Info `protobuf_oneof:"info"`
	// mark price (in human readable format)
	MarkPrice string `protobuf:"bytes,4,opt,name=mark_price,json=markPrice,proto3" json:"mark_price,omitempty"`
	// mid_price_and_tob defines the mid price for this market and the best ask
	// and bid orders
	MidPriceAndTob *MidPriceAndTOB `protobuf:"bytes,5,opt,name=mid_price_and_tob,json=midPriceAndTob,proto3" json:"mid_price_and_tob,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FullDerivativeMarket) Reset() {
	*x = FullDerivativeMarket{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullDerivativeMarket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullDerivativeMarket) ProtoMessage() {}

func (x *FullDerivativeMarket) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullDerivativeMarket.ProtoReflect.Descriptor instead.
func (*FullDerivativeMarket) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{60}
}

func (x *FullDerivativeMarket) GetMarket() *DerivativeMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *FullDerivativeMarket) GetInfo() isFullDerivativeMarket_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *FullDerivativeMarket) GetPerpetualInfo() *PerpetualMarketState {
	if x != nil {
		if x, ok := x.Info.(*FullDerivativeMarket_PerpetualInfo); ok {
			return x.PerpetualInfo
		}
	}
	return nil
}

func (x *FullDerivativeMarket) GetFuturesInfo() *ExpiryFuturesMarketInfo {
	if x != nil {
		if x, ok := x.Info.(*FullDerivativeMarket_FuturesInfo); ok {
			return x.FuturesInfo
		}
	}
	return nil
}

func (x *FullDerivativeMarket) GetMarkPrice() string {
	if x != nil {
		return x.MarkPrice
	}
	return ""
}

func (x *FullDerivativeMarket) GetMidPriceAndTob() *MidPriceAndTOB {
	if x != nil {
		return x.MidPriceAndTob
	}
	return nil
}

type isFullDerivativeMarket_Info interface {
	isFullDerivativeMarket_Info()
}

type FullDerivativeMarket_PerpetualInfo struct {
	// perpetual market info
	PerpetualInfo *PerpetualMarketState `protobuf:"bytes,2,opt,name=perpetual_info,json=perpetualInfo,proto3,oneof"`
}

type FullDerivativeMarket_FuturesInfo struct {
	// expiry futures market info
	FuturesInfo *ExpiryFuturesMarketInfo `protobuf:"bytes,3,opt,name=futures_info,json=futuresInfo,proto3,oneof"`
}

func (*FullDerivativeMarket_PerpetualInfo) isFullDerivativeMarket_Info() {}

func (*FullDerivativeMarket_FuturesInfo) isFullDerivativeMarket_Info() {}

// QueryDerivativeMarketsResponse is the response type for the
// Query/DerivativeMarkets RPC method.
type QueryDerivativeMarketsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Markets       []*FullDerivativeMarket `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeMarketsResponse) Reset() {
	*x = QueryDerivativeMarketsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeMarketsResponse) ProtoMessage() {}

func (x *QueryDerivativeMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeMarketsResponse.ProtoReflect.Descriptor instead.
func (*QueryDerivativeMarketsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{61}
}

func (x *QueryDerivativeMarketsResponse) GetMarkets() []*FullDerivativeMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

// QueryDerivativeMarketRequest is the request type for the
// Query/DerivativeMarket RPC method.
type QueryDerivativeMarketRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId      string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeMarketRequest) Reset() {
	*x = QueryDerivativeMarketRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeMarketRequest) ProtoMessage() {}

func (x *QueryDerivativeMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeMarketRequest.ProtoReflect.Descriptor instead.
func (*QueryDerivativeMarketRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{62}
}

func (x *QueryDerivativeMarketRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QueryDerivativeMarketResponse is the response type for the
// Query/DerivativeMarket RPC method.
type QueryDerivativeMarketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Market        *FullDerivativeMarket  `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeMarketResponse) Reset() {
	*x = QueryDerivativeMarketResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeMarketResponse) ProtoMessage() {}

func (x *QueryDerivativeMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeMarketResponse.ProtoReflect.Descriptor instead.
func (*QueryDerivativeMarketResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{63}
}

func (x *QueryDerivativeMarketResponse) GetMarket() *FullDerivativeMarket {
	if x != nil {
		return x.Market
	}
	return nil
}

// QueryDerivativeMarketAddressRequest is the request type for the
// Query/DerivativeMarketAddress RPC method.
type QueryDerivativeMarketAddressRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Market ID for the market
	MarketId      string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeMarketAddressRequest) Reset() {
	*x = QueryDerivativeMarketAddressRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeMarketAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeMarketAddressRequest) ProtoMessage() {}

func (x *QueryDerivativeMarketAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeMarketAddressRequest.ProtoReflect.Descriptor instead.
func (*QueryDerivativeMarketAddressRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{64}
}

func (x *QueryDerivativeMarketAddressRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QueryDerivativeMarketAddressResponse is the response type for the
// Query/DerivativeMarketAddress RPC method.
type QueryDerivativeMarketAddressResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// address for the market
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// subaccountID for the market
	SubaccountId  string `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDerivativeMarketAddressResponse) Reset() {
	*x = QueryDerivativeMarketAddressResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDerivativeMarketAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDerivativeMarketAddressResponse) ProtoMessage() {}

func (x *QueryDerivativeMarketAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDerivativeMarketAddressResponse.ProtoReflect.Descriptor instead.
func (*QueryDerivativeMarketAddressResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{65}
}

func (x *QueryDerivativeMarketAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryDerivativeMarketAddressResponse) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

// QuerySubaccountTradeNonceRequest is the request type for the
// Query/SubaccountTradeNonce RPC method.
type QuerySubaccountTradeNonceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId  string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountTradeNonceRequest) Reset() {
	*x = QuerySubaccountTradeNonceRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountTradeNonceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountTradeNonceRequest) ProtoMessage() {}

func (x *QuerySubaccountTradeNonceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountTradeNonceRequest.ProtoReflect.Descriptor instead.
func (*QuerySubaccountTradeNonceRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{66}
}

func (x *QuerySubaccountTradeNonceRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

// QueryPositionsInMarketRequest is the request type for the
// Query/PositionsInMarket RPC method.
type QueryPositionsInMarketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPositionsInMarketRequest) Reset() {
	*x = QueryPositionsInMarketRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPositionsInMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPositionsInMarketRequest) ProtoMessage() {}

func (x *QueryPositionsInMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPositionsInMarketRequest.ProtoReflect.Descriptor instead.
func (*QueryPositionsInMarketRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{67}
}

func (x *QueryPositionsInMarketRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QueryPositionsInMarketResponse is the response type for the
// Query/PositionsInMarket RPC method.
type QueryPositionsInMarketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         []*DerivativePosition  `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPositionsInMarketResponse) Reset() {
	*x = QueryPositionsInMarketResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPositionsInMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPositionsInMarketResponse) ProtoMessage() {}

func (x *QueryPositionsInMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPositionsInMarketResponse.ProtoReflect.Descriptor instead.
func (*QueryPositionsInMarketResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{68}
}

func (x *QueryPositionsInMarketResponse) GetState() []*DerivativePosition {
	if x != nil {
		return x.State
	}
	return nil
}

// QuerySubaccountPositionsRequest is the request type for the
// Query/SubaccountPositions RPC method.
type QuerySubaccountPositionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId  string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountPositionsRequest) Reset() {
	*x = QuerySubaccountPositionsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountPositionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountPositionsRequest) ProtoMessage() {}

func (x *QuerySubaccountPositionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountPositionsRequest.ProtoReflect.Descriptor instead.
func (*QuerySubaccountPositionsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{69}
}

func (x *QuerySubaccountPositionsRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

// QuerySubaccountPositionInMarketRequest is the request type for the
// Query/SubaccountPositionInMarket RPC method.
type QuerySubaccountPositionInMarketRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the market ID
	MarketId      string `protobuf:"bytes,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountPositionInMarketRequest) Reset() {
	*x = QuerySubaccountPositionInMarketRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountPositionInMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountPositionInMarketRequest) ProtoMessage() {}

func (x *QuerySubaccountPositionInMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountPositionInMarketRequest.ProtoReflect.Descriptor instead.
func (*QuerySubaccountPositionInMarketRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{70}
}

func (x *QuerySubaccountPositionInMarketRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QuerySubaccountPositionInMarketRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QuerySubaccountEffectivePositionInMarketRequest is the request type for the
// Query/SubaccountEffectivePositionInMarket RPC method.
type QuerySubaccountEffectivePositionInMarketRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the market ID
	MarketId      string `protobuf:"bytes,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountEffectivePositionInMarketRequest) Reset() {
	*x = QuerySubaccountEffectivePositionInMarketRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountEffectivePositionInMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountEffectivePositionInMarketRequest) ProtoMessage() {}

func (x *QuerySubaccountEffectivePositionInMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountEffectivePositionInMarketRequest.ProtoReflect.Descriptor instead.
func (*QuerySubaccountEffectivePositionInMarketRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{71}
}

func (x *QuerySubaccountEffectivePositionInMarketRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QuerySubaccountEffectivePositionInMarketRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QuerySubaccountOrderMetadataRequest is the request type for the
// Query/SubaccountOrderMetadata RPC method.
type QuerySubaccountOrderMetadataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId  string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountOrderMetadataRequest) Reset() {
	*x = QuerySubaccountOrderMetadataRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountOrderMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountOrderMetadataRequest) ProtoMessage() {}

func (x *QuerySubaccountOrderMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountOrderMetadataRequest.ProtoReflect.Descriptor instead.
func (*QuerySubaccountOrderMetadataRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{72}
}

func (x *QuerySubaccountOrderMetadataRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

// QuerySubaccountPositionsResponse is the response type for the
// Query/SubaccountPositions RPC method.
type QuerySubaccountPositionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         []*DerivativePosition  `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountPositionsResponse) Reset() {
	*x = QuerySubaccountPositionsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountPositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountPositionsResponse) ProtoMessage() {}

func (x *QuerySubaccountPositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountPositionsResponse.ProtoReflect.Descriptor instead.
func (*QuerySubaccountPositionsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{73}
}

func (x *QuerySubaccountPositionsResponse) GetState() []*DerivativePosition {
	if x != nil {
		return x.State
	}
	return nil
}

// QuerySubaccountPositionInMarketResponse is the response type for the
// Query/SubaccountPositionInMarket RPC method.
type QuerySubaccountPositionInMarketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *Position              `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountPositionInMarketResponse) Reset() {
	*x = QuerySubaccountPositionInMarketResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountPositionInMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountPositionInMarketResponse) ProtoMessage() {}

func (x *QuerySubaccountPositionInMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountPositionInMarketResponse.ProtoReflect.Descriptor instead.
func (*QuerySubaccountPositionInMarketResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{74}
}

func (x *QuerySubaccountPositionInMarketResponse) GetState() *Position {
	if x != nil {
		return x.State
	}
	return nil
}

type EffectivePosition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// whether the position is long or short
	IsLong bool `protobuf:"varint,1,opt,name=is_long,json=isLong,proto3" json:"is_long,omitempty"`
	// the quantity of the position (in human readable format)
	Quantity string `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// the entry price of the position (in human readable format)
	EntryPrice string `protobuf:"bytes,3,opt,name=entry_price,json=entryPrice,proto3" json:"entry_price,omitempty"`
	// the effective margin of the position (in human readable format)
	EffectiveMargin string `protobuf:"bytes,4,opt,name=effective_margin,json=effectiveMargin,proto3" json:"effective_margin,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EffectivePosition) Reset() {
	*x = EffectivePosition{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EffectivePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EffectivePosition) ProtoMessage() {}

func (x *EffectivePosition) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EffectivePosition.ProtoReflect.Descriptor instead.
func (*EffectivePosition) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{75}
}

func (x *EffectivePosition) GetIsLong() bool {
	if x != nil {
		return x.IsLong
	}
	return false
}

func (x *EffectivePosition) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *EffectivePosition) GetEntryPrice() string {
	if x != nil {
		return x.EntryPrice
	}
	return ""
}

func (x *EffectivePosition) GetEffectiveMargin() string {
	if x != nil {
		return x.EffectiveMargin
	}
	return ""
}

// QuerySubaccountEffectivePositionInMarketResponse is the response type for the
// Query/SubaccountEffectivePositionInMarket RPC method.
type QuerySubaccountEffectivePositionInMarketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *EffectivePosition     `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountEffectivePositionInMarketResponse) Reset() {
	*x = QuerySubaccountEffectivePositionInMarketResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountEffectivePositionInMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountEffectivePositionInMarketResponse) ProtoMessage() {}

func (x *QuerySubaccountEffectivePositionInMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountEffectivePositionInMarketResponse.ProtoReflect.Descriptor instead.
func (*QuerySubaccountEffectivePositionInMarketResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{76}
}

func (x *QuerySubaccountEffectivePositionInMarketResponse) GetState() *EffectivePosition {
	if x != nil {
		return x.State
	}
	return nil
}

// QueryPerpetualMarketInfoRequest is the request type for the
// Query/PerpetualMarketInfo RPC method.
type QueryPerpetualMarketInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPerpetualMarketInfoRequest) Reset() {
	*x = QueryPerpetualMarketInfoRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPerpetualMarketInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPerpetualMarketInfoRequest) ProtoMessage() {}

func (x *QueryPerpetualMarketInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPerpetualMarketInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryPerpetualMarketInfoRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{77}
}

func (x *QueryPerpetualMarketInfoRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QueryPerpetualMarketInfoResponse is the response type for the
// Query/PerpetualMarketInfo RPC method.
type QueryPerpetualMarketInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *PerpetualMarketInfo   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPerpetualMarketInfoResponse) Reset() {
	*x = QueryPerpetualMarketInfoResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPerpetualMarketInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPerpetualMarketInfoResponse) ProtoMessage() {}

func (x *QueryPerpetualMarketInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPerpetualMarketInfoResponse.ProtoReflect.Descriptor instead.
func (*QueryPerpetualMarketInfoResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{78}
}

func (x *QueryPerpetualMarketInfoResponse) GetInfo() *PerpetualMarketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// QueryExpiryFuturesMarketInfoRequest is the request type for the Query/
// ExpiryFuturesMarketInfo RPC method.
type QueryExpiryFuturesMarketInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryExpiryFuturesMarketInfoRequest) Reset() {
	*x = QueryExpiryFuturesMarketInfoRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExpiryFuturesMarketInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExpiryFuturesMarketInfoRequest) ProtoMessage() {}

func (x *QueryExpiryFuturesMarketInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExpiryFuturesMarketInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryExpiryFuturesMarketInfoRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{79}
}

func (x *QueryExpiryFuturesMarketInfoRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QueryExpiryFuturesMarketInfoResponse is the response type for the Query/
// ExpiryFuturesMarketInfo RPC method.
type QueryExpiryFuturesMarketInfoResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Info          *ExpiryFuturesMarketInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryExpiryFuturesMarketInfoResponse) Reset() {
	*x = QueryExpiryFuturesMarketInfoResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExpiryFuturesMarketInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExpiryFuturesMarketInfoResponse) ProtoMessage() {}

func (x *QueryExpiryFuturesMarketInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExpiryFuturesMarketInfoResponse.ProtoReflect.Descriptor instead.
func (*QueryExpiryFuturesMarketInfoResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{80}
}

func (x *QueryExpiryFuturesMarketInfoResponse) GetInfo() *ExpiryFuturesMarketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// QueryPerpetualMarketFundingRequest is the request type for the
// Query/PerpetualMarketFunding RPC method.
type QueryPerpetualMarketFundingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPerpetualMarketFundingRequest) Reset() {
	*x = QueryPerpetualMarketFundingRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPerpetualMarketFundingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPerpetualMarketFundingRequest) ProtoMessage() {}

func (x *QueryPerpetualMarketFundingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPerpetualMarketFundingRequest.ProtoReflect.Descriptor instead.
func (*QueryPerpetualMarketFundingRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{81}
}

func (x *QueryPerpetualMarketFundingRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

// QueryPerpetualMarketFundingResponse is the response type for the
// Query/PerpetualMarketFunding RPC method.
type QueryPerpetualMarketFundingResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	State         *PerpetualMarketFunding `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPerpetualMarketFundingResponse) Reset() {
	*x = QueryPerpetualMarketFundingResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPerpetualMarketFundingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPerpetualMarketFundingResponse) ProtoMessage() {}

func (x *QueryPerpetualMarketFundingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPerpetualMarketFundingResponse.ProtoReflect.Descriptor instead.
func (*QueryPerpetualMarketFundingResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{82}
}

func (x *QueryPerpetualMarketFundingResponse) GetState() *PerpetualMarketFunding {
	if x != nil {
		return x.State
	}
	return nil
}

// QuerySubaccountOrderMetadataResponse is the response type for the
// Query/SubaccountOrderMetadata RPC method.
type QuerySubaccountOrderMetadataResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Metadata      []*SubaccountOrderbookMetadataWithMarket `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountOrderMetadataResponse) Reset() {
	*x = QuerySubaccountOrderMetadataResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountOrderMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountOrderMetadataResponse) ProtoMessage() {}

func (x *QuerySubaccountOrderMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountOrderMetadataResponse.ProtoReflect.Descriptor instead.
func (*QuerySubaccountOrderMetadataResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{83}
}

func (x *QuerySubaccountOrderMetadataResponse) GetMetadata() []*SubaccountOrderbookMetadataWithMarket {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// QuerySubaccountTradeNonceResponse is the response type for the
// Query/SubaccountTradeNonce RPC method.
type QuerySubaccountTradeNonceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         uint32                 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySubaccountTradeNonceResponse) Reset() {
	*x = QuerySubaccountTradeNonceResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySubaccountTradeNonceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubaccountTradeNonceResponse) ProtoMessage() {}

func (x *QuerySubaccountTradeNonceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubaccountTradeNonceResponse.ProtoReflect.Descriptor instead.
func (*QuerySubaccountTradeNonceResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{84}
}

func (x *QuerySubaccountTradeNonceResponse) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// QueryModuleStateRequest is the request type for the Query/ExchangeModuleState
// RPC method.
type QueryModuleStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryModuleStateRequest) Reset() {
	*x = QueryModuleStateRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryModuleStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryModuleStateRequest) ProtoMessage() {}

func (x *QueryModuleStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryModuleStateRequest.ProtoReflect.Descriptor instead.
func (*QueryModuleStateRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{85}
}

// QueryModuleStateResponse is the response type for the
// Query/ExchangeModuleState RPC method.
type QueryModuleStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *GenesisState          `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryModuleStateResponse) Reset() {
	*x = QueryModuleStateResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryModuleStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryModuleStateResponse) ProtoMessage() {}

func (x *QueryModuleStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryModuleStateResponse.ProtoReflect.Descriptor instead.
func (*QueryModuleStateResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{86}
}

func (x *QueryModuleStateResponse) GetState() *GenesisState {
	if x != nil {
		return x.State
	}
	return nil
}

// QueryPositionsRequest is the request type for the Query/Positions RPC method.
type QueryPositionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPositionsRequest) Reset() {
	*x = QueryPositionsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPositionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPositionsRequest) ProtoMessage() {}

func (x *QueryPositionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPositionsRequest.ProtoReflect.Descriptor instead.
func (*QueryPositionsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{87}
}

// QueryPositionsResponse is the response type for the Query/Positions RPC
// method.
type QueryPositionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         []*DerivativePosition  `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPositionsResponse) Reset() {
	*x = QueryPositionsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPositionsResponse) ProtoMessage() {}

func (x *QueryPositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPositionsResponse.ProtoReflect.Descriptor instead.
func (*QueryPositionsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{88}
}

func (x *QueryPositionsResponse) GetState() []*DerivativePosition {
	if x != nil {
		return x.State
	}
	return nil
}

// QueryTradeRewardPointsRequest is the request type for the
// Query/TradeRewardPoints RPC method.
type QueryTradeRewardPointsRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Accounts             []string               `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	PendingPoolTimestamp int64                  `protobuf:"varint,2,opt,name=pending_pool_timestamp,json=pendingPoolTimestamp,proto3" json:"pending_pool_timestamp,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *QueryTradeRewardPointsRequest) Reset() {
	*x = QueryTradeRewardPointsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTradeRewardPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTradeRewardPointsRequest) ProtoMessage() {}

func (x *QueryTradeRewardPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTradeRewardPointsRequest.ProtoReflect.Descriptor instead.
func (*QueryTradeRewardPointsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{89}
}

func (x *QueryTradeRewardPointsRequest) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *QueryTradeRewardPointsRequest) GetPendingPoolTimestamp() int64 {
	if x != nil {
		return x.PendingPoolTimestamp
	}
	return 0
}

// QueryTradeRewardPointsResponse is the response type for the
// Query/TradeRewardPoints RPC method.
type QueryTradeRewardPointsResponse struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	AccountTradeRewardPoints []string               `protobuf:"bytes,1,rep,name=account_trade_reward_points,json=accountTradeRewardPoints,proto3" json:"account_trade_reward_points,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *QueryTradeRewardPointsResponse) Reset() {
	*x = QueryTradeRewardPointsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTradeRewardPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTradeRewardPointsResponse) ProtoMessage() {}

func (x *QueryTradeRewardPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTradeRewardPointsResponse.ProtoReflect.Descriptor instead.
func (*QueryTradeRewardPointsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{90}
}

func (x *QueryTradeRewardPointsResponse) GetAccountTradeRewardPoints() []string {
	if x != nil {
		return x.AccountTradeRewardPoints
	}
	return nil
}

// QueryTradeRewardCampaignRequest is the request type for the
// Query/TradeRewardCampaign RPC method.
type QueryTradeRewardCampaignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTradeRewardCampaignRequest) Reset() {
	*x = QueryTradeRewardCampaignRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTradeRewardCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTradeRewardCampaignRequest) ProtoMessage() {}

func (x *QueryTradeRewardCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTradeRewardCampaignRequest.ProtoReflect.Descriptor instead.
func (*QueryTradeRewardCampaignRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{91}
}

// QueryTradeRewardCampaignResponse is the response type for the
// Query/TradeRewardCampaign RPC method.
type QueryTradeRewardCampaignResponse struct {
	state                                    protoimpl.MessageState     `protogen:"open.v1"`
	TradingRewardCampaignInfo                *TradingRewardCampaignInfo `protobuf:"bytes,1,opt,name=trading_reward_campaign_info,json=tradingRewardCampaignInfo,proto3" json:"trading_reward_campaign_info,omitempty"`
	TradingRewardPoolCampaignSchedule        []*CampaignRewardPool      `protobuf:"bytes,2,rep,name=trading_reward_pool_campaign_schedule,json=tradingRewardPoolCampaignSchedule,proto3" json:"trading_reward_pool_campaign_schedule,omitempty"`
	TotalTradeRewardPoints                   string                     `protobuf:"bytes,3,opt,name=total_trade_reward_points,json=totalTradeRewardPoints,proto3" json:"total_trade_reward_points,omitempty"`
	PendingTradingRewardPoolCampaignSchedule []*CampaignRewardPool      `protobuf:"bytes,4,rep,name=pending_trading_reward_pool_campaign_schedule,json=pendingTradingRewardPoolCampaignSchedule,proto3" json:"pending_trading_reward_pool_campaign_schedule,omitempty"`
	PendingTotalTradeRewardPoints            []string                   `protobuf:"bytes,5,rep,name=pending_total_trade_reward_points,json=pendingTotalTradeRewardPoints,proto3" json:"pending_total_trade_reward_points,omitempty"`
	unknownFields                            protoimpl.UnknownFields
	sizeCache                                protoimpl.SizeCache
}

func (x *QueryTradeRewardCampaignResponse) Reset() {
	*x = QueryTradeRewardCampaignResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTradeRewardCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTradeRewardCampaignResponse) ProtoMessage() {}

func (x *QueryTradeRewardCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTradeRewardCampaignResponse.ProtoReflect.Descriptor instead.
func (*QueryTradeRewardCampaignResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{92}
}

func (x *QueryTradeRewardCampaignResponse) GetTradingRewardCampaignInfo() *TradingRewardCampaignInfo {
	if x != nil {
		return x.TradingRewardCampaignInfo
	}
	return nil
}

func (x *QueryTradeRewardCampaignResponse) GetTradingRewardPoolCampaignSchedule() []*CampaignRewardPool {
	if x != nil {
		return x.TradingRewardPoolCampaignSchedule
	}
	return nil
}

func (x *QueryTradeRewardCampaignResponse) GetTotalTradeRewardPoints() string {
	if x != nil {
		return x.TotalTradeRewardPoints
	}
	return ""
}

func (x *QueryTradeRewardCampaignResponse) GetPendingTradingRewardPoolCampaignSchedule() []*CampaignRewardPool {
	if x != nil {
		return x.PendingTradingRewardPoolCampaignSchedule
	}
	return nil
}

func (x *QueryTradeRewardCampaignResponse) GetPendingTotalTradeRewardPoints() []string {
	if x != nil {
		return x.PendingTotalTradeRewardPoints
	}
	return nil
}

// QueryIsRegisteredDMMRequest is the request type for the Query/IsRegisteredDMM
// RPC method.
type QueryIsOptedOutOfRewardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryIsOptedOutOfRewardsRequest) Reset() {
	*x = QueryIsOptedOutOfRewardsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryIsOptedOutOfRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIsOptedOutOfRewardsRequest) ProtoMessage() {}

func (x *QueryIsOptedOutOfRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIsOptedOutOfRewardsRequest.ProtoReflect.Descriptor instead.
func (*QueryIsOptedOutOfRewardsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{93}
}

func (x *QueryIsOptedOutOfRewardsRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// QueryIsRegisteredDMMResponse is the response type for the
// Query/IsRegisteredDMM RPC method.
type QueryIsOptedOutOfRewardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsOptedOut    bool                   `protobuf:"varint,1,opt,name=is_opted_out,json=isOptedOut,proto3" json:"is_opted_out,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryIsOptedOutOfRewardsResponse) Reset() {
	*x = QueryIsOptedOutOfRewardsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryIsOptedOutOfRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIsOptedOutOfRewardsResponse) ProtoMessage() {}

func (x *QueryIsOptedOutOfRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIsOptedOutOfRewardsResponse.ProtoReflect.Descriptor instead.
func (*QueryIsOptedOutOfRewardsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{94}
}

func (x *QueryIsOptedOutOfRewardsResponse) GetIsOptedOut() bool {
	if x != nil {
		return x.IsOptedOut
	}
	return false
}

// QueryRegisteredDMMsRequest is the request type for the Query/RegisteredDMMs
// RPC method.
type QueryOptedOutOfRewardsAccountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOptedOutOfRewardsAccountsRequest) Reset() {
	*x = QueryOptedOutOfRewardsAccountsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOptedOutOfRewardsAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOptedOutOfRewardsAccountsRequest) ProtoMessage() {}

func (x *QueryOptedOutOfRewardsAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOptedOutOfRewardsAccountsRequest.ProtoReflect.Descriptor instead.
func (*QueryOptedOutOfRewardsAccountsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{95}
}

// QueryRegisteredDMMsResponse is the response type for the Query/RegisteredDMMs
// RPC method.
type QueryOptedOutOfRewardsAccountsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []string               `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOptedOutOfRewardsAccountsResponse) Reset() {
	*x = QueryOptedOutOfRewardsAccountsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOptedOutOfRewardsAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOptedOutOfRewardsAccountsResponse) ProtoMessage() {}

func (x *QueryOptedOutOfRewardsAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOptedOutOfRewardsAccountsResponse.ProtoReflect.Descriptor instead.
func (*QueryOptedOutOfRewardsAccountsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{96}
}

func (x *QueryOptedOutOfRewardsAccountsResponse) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

// QueryFeeDiscountAccountInfoRequest is the request type for the
// Query/FeeDiscountAccountInfo RPC method.
type QueryFeeDiscountAccountInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFeeDiscountAccountInfoRequest) Reset() {
	*x = QueryFeeDiscountAccountInfoRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFeeDiscountAccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFeeDiscountAccountInfoRequest) ProtoMessage() {}

func (x *QueryFeeDiscountAccountInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFeeDiscountAccountInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryFeeDiscountAccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{97}
}

func (x *QueryFeeDiscountAccountInfoRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// QueryFeeDiscountAccountInfoResponse is the response type for the
// Query/FeeDiscountAccountInfo RPC method.
type QueryFeeDiscountAccountInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TierLevel     uint64                 `protobuf:"varint,1,opt,name=tier_level,json=tierLevel,proto3" json:"tier_level,omitempty"`
	AccountInfo   *FeeDiscountTierInfo   `protobuf:"bytes,2,opt,name=account_info,json=accountInfo,proto3" json:"account_info,omitempty"`
	AccountTtl    *FeeDiscountTierTTL    `protobuf:"bytes,3,opt,name=account_ttl,json=accountTtl,proto3" json:"account_ttl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFeeDiscountAccountInfoResponse) Reset() {
	*x = QueryFeeDiscountAccountInfoResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFeeDiscountAccountInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFeeDiscountAccountInfoResponse) ProtoMessage() {}

func (x *QueryFeeDiscountAccountInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFeeDiscountAccountInfoResponse.ProtoReflect.Descriptor instead.
func (*QueryFeeDiscountAccountInfoResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{98}
}

func (x *QueryFeeDiscountAccountInfoResponse) GetTierLevel() uint64 {
	if x != nil {
		return x.TierLevel
	}
	return 0
}

func (x *QueryFeeDiscountAccountInfoResponse) GetAccountInfo() *FeeDiscountTierInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *QueryFeeDiscountAccountInfoResponse) GetAccountTtl() *FeeDiscountTierTTL {
	if x != nil {
		return x.AccountTtl
	}
	return nil
}

// QueryFeeDiscountScheduleRequest is the request type for the
// Query/FeeDiscountSchedule RPC method.
type QueryFeeDiscountScheduleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFeeDiscountScheduleRequest) Reset() {
	*x = QueryFeeDiscountScheduleRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFeeDiscountScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFeeDiscountScheduleRequest) ProtoMessage() {}

func (x *QueryFeeDiscountScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFeeDiscountScheduleRequest.ProtoReflect.Descriptor instead.
func (*QueryFeeDiscountScheduleRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{99}
}

// QueryFeeDiscountScheduleResponse is the response type for the
// Query/FeeDiscountSchedule RPC method.
type QueryFeeDiscountScheduleResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	FeeDiscountSchedule *FeeDiscountSchedule   `protobuf:"bytes,1,opt,name=fee_discount_schedule,json=feeDiscountSchedule,proto3" json:"fee_discount_schedule,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *QueryFeeDiscountScheduleResponse) Reset() {
	*x = QueryFeeDiscountScheduleResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFeeDiscountScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFeeDiscountScheduleResponse) ProtoMessage() {}

func (x *QueryFeeDiscountScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFeeDiscountScheduleResponse.ProtoReflect.Descriptor instead.
func (*QueryFeeDiscountScheduleResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{100}
}

func (x *QueryFeeDiscountScheduleResponse) GetFeeDiscountSchedule() *FeeDiscountSchedule {
	if x != nil {
		return x.FeeDiscountSchedule
	}
	return nil
}

// QueryBalanceMismatchesRequest is the request type for the
// Query/QueryBalanceMismatches RPC method.
type QueryBalanceMismatchesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DustFactor    int64                  `protobuf:"varint,1,opt,name=dust_factor,json=dustFactor,proto3" json:"dust_factor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBalanceMismatchesRequest) Reset() {
	*x = QueryBalanceMismatchesRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBalanceMismatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBalanceMismatchesRequest) ProtoMessage() {}

func (x *QueryBalanceMismatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBalanceMismatchesRequest.ProtoReflect.Descriptor instead.
func (*QueryBalanceMismatchesRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{101}
}

func (x *QueryBalanceMismatchesRequest) GetDustFactor() int64 {
	if x != nil {
		return x.DustFactor
	}
	return 0
}

type BalanceMismatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccountId,proto3" json:"subaccountId,omitempty"`
	// the denom of the balance
	Denom string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	// the available balance
	Available string `protobuf:"bytes,3,opt,name=available,proto3" json:"available,omitempty"`
	// the total balance
	Total string `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	// the balance hold
	BalanceHold string `protobuf:"bytes,5,opt,name=balance_hold,json=balanceHold,proto3" json:"balance_hold,omitempty"`
	// the expected total balance
	ExpectedTotal string `protobuf:"bytes,6,opt,name=expected_total,json=expectedTotal,proto3" json:"expected_total,omitempty"`
	// the difference between the total balance and the expected total balance
	Difference    string `protobuf:"bytes,7,opt,name=difference,proto3" json:"difference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceMismatch) Reset() {
	*x = BalanceMismatch{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceMismatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceMismatch) ProtoMessage() {}

func (x *BalanceMismatch) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceMismatch.ProtoReflect.Descriptor instead.
func (*BalanceMismatch) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{102}
}

func (x *BalanceMismatch) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *BalanceMismatch) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *BalanceMismatch) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *BalanceMismatch) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *BalanceMismatch) GetBalanceHold() string {
	if x != nil {
		return x.BalanceHold
	}
	return ""
}

func (x *BalanceMismatch) GetExpectedTotal() string {
	if x != nil {
		return x.ExpectedTotal
	}
	return ""
}

func (x *BalanceMismatch) GetDifference() string {
	if x != nil {
		return x.Difference
	}
	return ""
}

// QueryBalanceMismatchesResponse is the response type for the
// Query/QueryBalanceMismatches RPC method.
type QueryBalanceMismatchesResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BalanceMismatches []*BalanceMismatch     `protobuf:"bytes,1,rep,name=balance_mismatches,json=balanceMismatches,proto3" json:"balance_mismatches,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QueryBalanceMismatchesResponse) Reset() {
	*x = QueryBalanceMismatchesResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBalanceMismatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBalanceMismatchesResponse) ProtoMessage() {}

func (x *QueryBalanceMismatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBalanceMismatchesResponse.ProtoReflect.Descriptor instead.
func (*QueryBalanceMismatchesResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{103}
}

func (x *QueryBalanceMismatchesResponse) GetBalanceMismatches() []*BalanceMismatch {
	if x != nil {
		return x.BalanceMismatches
	}
	return nil
}

// QueryBalanceWithBalanceHoldsRequest is the request type for the
// Query/QueryBalanceWithBalanceHolds RPC method.
type QueryBalanceWithBalanceHoldsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBalanceWithBalanceHoldsRequest) Reset() {
	*x = QueryBalanceWithBalanceHoldsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBalanceWithBalanceHoldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBalanceWithBalanceHoldsRequest) ProtoMessage() {}

func (x *QueryBalanceWithBalanceHoldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBalanceWithBalanceHoldsRequest.ProtoReflect.Descriptor instead.
func (*QueryBalanceWithBalanceHoldsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{104}
}

type BalanceWithMarginHold struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccountId,proto3" json:"subaccountId,omitempty"`
	// the denom of the balance
	Denom string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	// the available balance
	Available string `protobuf:"bytes,3,opt,name=available,proto3" json:"available,omitempty"`
	// the total balance
	Total string `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	// the balance on hold
	BalanceHold   string `protobuf:"bytes,5,opt,name=balance_hold,json=balanceHold,proto3" json:"balance_hold,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceWithMarginHold) Reset() {
	*x = BalanceWithMarginHold{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceWithMarginHold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceWithMarginHold) ProtoMessage() {}

func (x *BalanceWithMarginHold) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceWithMarginHold.ProtoReflect.Descriptor instead.
func (*BalanceWithMarginHold) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{105}
}

func (x *BalanceWithMarginHold) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *BalanceWithMarginHold) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *BalanceWithMarginHold) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *BalanceWithMarginHold) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *BalanceWithMarginHold) GetBalanceHold() string {
	if x != nil {
		return x.BalanceHold
	}
	return ""
}

// QueryBalanceWithBalanceHoldsResponse is the response type for the
// Query/QueryBalanceWithBalanceHolds RPC method.
type QueryBalanceWithBalanceHoldsResponse struct {
	state                   protoimpl.MessageState   `protogen:"open.v1"`
	BalanceWithBalanceHolds []*BalanceWithMarginHold `protobuf:"bytes,1,rep,name=balance_with_balance_holds,json=balanceWithBalanceHolds,proto3" json:"balance_with_balance_holds,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *QueryBalanceWithBalanceHoldsResponse) Reset() {
	*x = QueryBalanceWithBalanceHoldsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBalanceWithBalanceHoldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBalanceWithBalanceHoldsResponse) ProtoMessage() {}

func (x *QueryBalanceWithBalanceHoldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBalanceWithBalanceHoldsResponse.ProtoReflect.Descriptor instead.
func (*QueryBalanceWithBalanceHoldsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{106}
}

func (x *QueryBalanceWithBalanceHoldsResponse) GetBalanceWithBalanceHolds() []*BalanceWithMarginHold {
	if x != nil {
		return x.BalanceWithBalanceHolds
	}
	return nil
}

// QueryFeeDiscountTierStatisticsRequest is the request type for the
// Query/QueryFeeDiscountTierStatistics RPC method.
type QueryFeeDiscountTierStatisticsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFeeDiscountTierStatisticsRequest) Reset() {
	*x = QueryFeeDiscountTierStatisticsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFeeDiscountTierStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFeeDiscountTierStatisticsRequest) ProtoMessage() {}

func (x *QueryFeeDiscountTierStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFeeDiscountTierStatisticsRequest.ProtoReflect.Descriptor instead.
func (*QueryFeeDiscountTierStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{107}
}

type TierStatistic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tier          uint64                 `protobuf:"varint,1,opt,name=tier,proto3" json:"tier,omitempty"`
	Count         uint64                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TierStatistic) Reset() {
	*x = TierStatistic{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TierStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TierStatistic) ProtoMessage() {}

func (x *TierStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TierStatistic.ProtoReflect.Descriptor instead.
func (*TierStatistic) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{108}
}

func (x *TierStatistic) GetTier() uint64 {
	if x != nil {
		return x.Tier
	}
	return 0
}

func (x *TierStatistic) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// QueryFeeDiscountTierStatisticsResponse is the response type for the
// Query/QueryFeeDiscountTierStatistics RPC method.
type QueryFeeDiscountTierStatisticsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Statistics    []*TierStatistic       `protobuf:"bytes,1,rep,name=statistics,proto3" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFeeDiscountTierStatisticsResponse) Reset() {
	*x = QueryFeeDiscountTierStatisticsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFeeDiscountTierStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFeeDiscountTierStatisticsResponse) ProtoMessage() {}

func (x *QueryFeeDiscountTierStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFeeDiscountTierStatisticsResponse.ProtoReflect.Descriptor instead.
func (*QueryFeeDiscountTierStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{109}
}

func (x *QueryFeeDiscountTierStatisticsResponse) GetStatistics() []*TierStatistic {
	if x != nil {
		return x.Statistics
	}
	return nil
}

// MitoVaultInfosRequest is the request type for the Query/MitoVaultInfos RPC
// method.
type MitoVaultInfosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MitoVaultInfosRequest) Reset() {
	*x = MitoVaultInfosRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MitoVaultInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MitoVaultInfosRequest) ProtoMessage() {}

func (x *MitoVaultInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MitoVaultInfosRequest.ProtoReflect.Descriptor instead.
func (*MitoVaultInfosRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{110}
}

// MitoVaultInfosResponse is the response type for the Query/MitoVaultInfos RPC
// method.
type MitoVaultInfosResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list of master addresses
	MasterAddresses []string `protobuf:"bytes,1,rep,name=master_addresses,json=masterAddresses,proto3" json:"master_addresses,omitempty"`
	// list of derivative addresses
	DerivativeAddresses []string `protobuf:"bytes,2,rep,name=derivative_addresses,json=derivativeAddresses,proto3" json:"derivative_addresses,omitempty"`
	// list of spot addresses
	SpotAddresses []string `protobuf:"bytes,3,rep,name=spot_addresses,json=spotAddresses,proto3" json:"spot_addresses,omitempty"`
	// list of cw20 addresses
	Cw20Addresses []string `protobuf:"bytes,4,rep,name=cw20_addresses,json=cw20Addresses,proto3" json:"cw20_addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MitoVaultInfosResponse) Reset() {
	*x = MitoVaultInfosResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MitoVaultInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MitoVaultInfosResponse) ProtoMessage() {}

func (x *MitoVaultInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MitoVaultInfosResponse.ProtoReflect.Descriptor instead.
func (*MitoVaultInfosResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{111}
}

func (x *MitoVaultInfosResponse) GetMasterAddresses() []string {
	if x != nil {
		return x.MasterAddresses
	}
	return nil
}

func (x *MitoVaultInfosResponse) GetDerivativeAddresses() []string {
	if x != nil {
		return x.DerivativeAddresses
	}
	return nil
}

func (x *MitoVaultInfosResponse) GetSpotAddresses() []string {
	if x != nil {
		return x.SpotAddresses
	}
	return nil
}

func (x *MitoVaultInfosResponse) GetCw20Addresses() []string {
	if x != nil {
		return x.Cw20Addresses
	}
	return nil
}

// QueryMarketIDFromVaultRequest is the request type for the
// Query/QueryMarketIDFromVault RPC method.
type QueryMarketIDFromVaultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VaultAddress  string                 `protobuf:"bytes,1,opt,name=vault_address,json=vaultAddress,proto3" json:"vault_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMarketIDFromVaultRequest) Reset() {
	*x = QueryMarketIDFromVaultRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketIDFromVaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketIDFromVaultRequest) ProtoMessage() {}

func (x *QueryMarketIDFromVaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketIDFromVaultRequest.ProtoReflect.Descriptor instead.
func (*QueryMarketIDFromVaultRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{112}
}

func (x *QueryMarketIDFromVaultRequest) GetVaultAddress() string {
	if x != nil {
		return x.VaultAddress
	}
	return ""
}

// QueryMarketIDFromVaultResponse is the response type for the
// Query/QueryMarketIDFromVault RPC method.
type QueryMarketIDFromVaultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMarketIDFromVaultResponse) Reset() {
	*x = QueryMarketIDFromVaultResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketIDFromVaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketIDFromVaultResponse) ProtoMessage() {}

func (x *QueryMarketIDFromVaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketIDFromVaultResponse.ProtoReflect.Descriptor instead.
func (*QueryMarketIDFromVaultResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{113}
}

func (x *QueryMarketIDFromVaultResponse) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

type QueryHistoricalTradeRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryHistoricalTradeRecordsRequest) Reset() {
	*x = QueryHistoricalTradeRecordsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryHistoricalTradeRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHistoricalTradeRecordsRequest) ProtoMessage() {}

func (x *QueryHistoricalTradeRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHistoricalTradeRecordsRequest.ProtoReflect.Descriptor instead.
func (*QueryHistoricalTradeRecordsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{114}
}

func (x *QueryHistoricalTradeRecordsRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

type QueryHistoricalTradeRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TradeRecords  []*TradeRecords        `protobuf:"bytes,1,rep,name=trade_records,json=tradeRecords,proto3" json:"trade_records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryHistoricalTradeRecordsResponse) Reset() {
	*x = QueryHistoricalTradeRecordsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryHistoricalTradeRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHistoricalTradeRecordsResponse) ProtoMessage() {}

func (x *QueryHistoricalTradeRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHistoricalTradeRecordsResponse.ProtoReflect.Descriptor instead.
func (*QueryHistoricalTradeRecordsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{115}
}

func (x *QueryHistoricalTradeRecordsResponse) GetTradeRecords() []*TradeRecords {
	if x != nil {
		return x.TradeRecords
	}
	return nil
}

// TradeHistoryOptions are the optional params for Query/MarketVolatility RPC
// method.
type TradeHistoryOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TradeGroupingSec of 0 means use the chain's default grouping
	TradeGroupingSec uint64 `protobuf:"varint,1,opt,name=trade_grouping_sec,json=tradeGroupingSec,proto3" json:"trade_grouping_sec,omitempty"`
	// MaxAge restricts the trade records oldest age in seconds from the current
	// block time to consider. A value of 0 means use all the records present on
	// the chain.
	MaxAge uint64 `protobuf:"varint,2,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	// If IncludeRawHistory is true, the raw underlying data used for the
	// computation is included in the response
	IncludeRawHistory bool `protobuf:"varint,4,opt,name=include_raw_history,json=includeRawHistory,proto3" json:"include_raw_history,omitempty"`
	// If IncludeMetadata is true, metadata on the computation is included in the
	// response
	IncludeMetadata bool `protobuf:"varint,5,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TradeHistoryOptions) Reset() {
	*x = TradeHistoryOptions{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeHistoryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeHistoryOptions) ProtoMessage() {}

func (x *TradeHistoryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeHistoryOptions.ProtoReflect.Descriptor instead.
func (*TradeHistoryOptions) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{116}
}

func (x *TradeHistoryOptions) GetTradeGroupingSec() uint64 {
	if x != nil {
		return x.TradeGroupingSec
	}
	return 0
}

func (x *TradeHistoryOptions) GetMaxAge() uint64 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *TradeHistoryOptions) GetIncludeRawHistory() bool {
	if x != nil {
		return x.IncludeRawHistory
	}
	return false
}

func (x *TradeHistoryOptions) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

// QueryMarketVolatilityRequest are the request params for the
// Query/MarketVolatility RPC method.
type QueryMarketVolatilityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the market ID to query volatility for
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// the trade history options
	TradeHistoryOptions *TradeHistoryOptions `protobuf:"bytes,2,opt,name=trade_history_options,json=tradeHistoryOptions,proto3" json:"trade_history_options,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *QueryMarketVolatilityRequest) Reset() {
	*x = QueryMarketVolatilityRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketVolatilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketVolatilityRequest) ProtoMessage() {}

func (x *QueryMarketVolatilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketVolatilityRequest.ProtoReflect.Descriptor instead.
func (*QueryMarketVolatilityRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{117}
}

func (x *QueryMarketVolatilityRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *QueryMarketVolatilityRequest) GetTradeHistoryOptions() *TradeHistoryOptions {
	if x != nil {
		return x.TradeHistoryOptions
	}
	return nil
}

// QueryMarketVolatilityResponse is the response type for the
// Query/MarketVolatility RPC method.
type QueryMarketVolatilityResponse struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	Volatility      string                    `protobuf:"bytes,1,opt,name=volatility,proto3" json:"volatility,omitempty"`
	HistoryMetadata *types.MetadataStatistics `protobuf:"bytes,2,opt,name=history_metadata,json=historyMetadata,proto3" json:"history_metadata,omitempty"`
	RawHistory      []*TradeRecord            `protobuf:"bytes,3,rep,name=raw_history,json=rawHistory,proto3" json:"raw_history,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryMarketVolatilityResponse) Reset() {
	*x = QueryMarketVolatilityResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketVolatilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketVolatilityResponse) ProtoMessage() {}

func (x *QueryMarketVolatilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketVolatilityResponse.ProtoReflect.Descriptor instead.
func (*QueryMarketVolatilityResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{118}
}

func (x *QueryMarketVolatilityResponse) GetVolatility() string {
	if x != nil {
		return x.Volatility
	}
	return ""
}

func (x *QueryMarketVolatilityResponse) GetHistoryMetadata() *types.MetadataStatistics {
	if x != nil {
		return x.HistoryMetadata
	}
	return nil
}

func (x *QueryMarketVolatilityResponse) GetRawHistory() []*TradeRecord {
	if x != nil {
		return x.RawHistory
	}
	return nil
}

// QuerBinaryMarketsRequest is the request type for the Query/BinaryMarkets RPC
// method.
type QueryBinaryMarketsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the market, for convenience it is set to string - not enum
	Status        string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBinaryMarketsRequest) Reset() {
	*x = QueryBinaryMarketsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBinaryMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBinaryMarketsRequest) ProtoMessage() {}

func (x *QueryBinaryMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBinaryMarketsRequest.ProtoReflect.Descriptor instead.
func (*QueryBinaryMarketsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{119}
}

func (x *QueryBinaryMarketsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// QueryBinaryMarketsResponse is the response type for the Query/BinaryMarkets
// RPC method.
type QueryBinaryMarketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Markets       []*BinaryOptionsMarket `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBinaryMarketsResponse) Reset() {
	*x = QueryBinaryMarketsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBinaryMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBinaryMarketsResponse) ProtoMessage() {}

func (x *QueryBinaryMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBinaryMarketsResponse.ProtoReflect.Descriptor instead.
func (*QueryBinaryMarketsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{120}
}

func (x *QueryBinaryMarketsResponse) GetMarkets() []*BinaryOptionsMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

// QueryConditionalOrdersRequest is the request type for the
// Query/ConditionalOrders RPC method.
type QueryTraderDerivativeConditionalOrdersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the market ID
	MarketId      string `protobuf:"bytes,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTraderDerivativeConditionalOrdersRequest) Reset() {
	*x = QueryTraderDerivativeConditionalOrdersRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTraderDerivativeConditionalOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTraderDerivativeConditionalOrdersRequest) ProtoMessage() {}

func (x *QueryTraderDerivativeConditionalOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTraderDerivativeConditionalOrdersRequest.ProtoReflect.Descriptor instead.
func (*QueryTraderDerivativeConditionalOrdersRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{121}
}

func (x *QueryTraderDerivativeConditionalOrdersRequest) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

func (x *QueryTraderDerivativeConditionalOrdersRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

type TrimmedDerivativeConditionalOrder struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// price of the order (in human readable format)
	Price string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	// quantity of the order (in human readable format)
	Quantity string `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// margin of the order (in human readable format)
	Margin string `protobuf:"bytes,3,opt,name=margin,proto3" json:"margin,omitempty"`
	// price to trigger the order (in human readable format)
	TriggerPrice string `protobuf:"bytes,4,opt,name=triggerPrice,proto3" json:"triggerPrice,omitempty"`
	// true if the order is a buy
	IsBuy bool `protobuf:"varint,5,opt,name=isBuy,proto3" json:"isBuy,omitempty"`
	// true if the order is a limit order
	IsLimit bool `protobuf:"varint,6,opt,name=isLimit,proto3" json:"isLimit,omitempty"`
	// the order hash
	OrderHash string `protobuf:"bytes,7,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	// the client ID
	Cid           string `protobuf:"bytes,8,opt,name=cid,proto3" json:"cid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrimmedDerivativeConditionalOrder) Reset() {
	*x = TrimmedDerivativeConditionalOrder{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrimmedDerivativeConditionalOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrimmedDerivativeConditionalOrder) ProtoMessage() {}

func (x *TrimmedDerivativeConditionalOrder) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrimmedDerivativeConditionalOrder.ProtoReflect.Descriptor instead.
func (*TrimmedDerivativeConditionalOrder) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{122}
}

func (x *TrimmedDerivativeConditionalOrder) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *TrimmedDerivativeConditionalOrder) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *TrimmedDerivativeConditionalOrder) GetMargin() string {
	if x != nil {
		return x.Margin
	}
	return ""
}

func (x *TrimmedDerivativeConditionalOrder) GetTriggerPrice() string {
	if x != nil {
		return x.TriggerPrice
	}
	return ""
}

func (x *TrimmedDerivativeConditionalOrder) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *TrimmedDerivativeConditionalOrder) GetIsLimit() bool {
	if x != nil {
		return x.IsLimit
	}
	return false
}

func (x *TrimmedDerivativeConditionalOrder) GetOrderHash() string {
	if x != nil {
		return x.OrderHash
	}
	return ""
}

func (x *TrimmedDerivativeConditionalOrder) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

// QueryTraderDerivativeOrdersResponse is the response type for the
// Query/TraderDerivativeOrders RPC method.
type QueryTraderDerivativeConditionalOrdersResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Orders        []*TrimmedDerivativeConditionalOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTraderDerivativeConditionalOrdersResponse) Reset() {
	*x = QueryTraderDerivativeConditionalOrdersResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTraderDerivativeConditionalOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTraderDerivativeConditionalOrdersResponse) ProtoMessage() {}

func (x *QueryTraderDerivativeConditionalOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTraderDerivativeConditionalOrdersResponse.ProtoReflect.Descriptor instead.
func (*QueryTraderDerivativeConditionalOrdersResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{123}
}

func (x *QueryTraderDerivativeConditionalOrdersResponse) GetOrders() []*TrimmedDerivativeConditionalOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type QueryFullSpotOrderbookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// market id
	MarketId      string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFullSpotOrderbookRequest) Reset() {
	*x = QueryFullSpotOrderbookRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFullSpotOrderbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFullSpotOrderbookRequest) ProtoMessage() {}

func (x *QueryFullSpotOrderbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFullSpotOrderbookRequest.ProtoReflect.Descriptor instead.
func (*QueryFullSpotOrderbookRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{124}
}

func (x *QueryFullSpotOrderbookRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

type QueryFullSpotOrderbookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bids          []*TrimmedLimitOrder   `protobuf:"bytes,1,rep,name=Bids,proto3" json:"Bids,omitempty"`
	Asks          []*TrimmedLimitOrder   `protobuf:"bytes,2,rep,name=Asks,proto3" json:"Asks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFullSpotOrderbookResponse) Reset() {
	*x = QueryFullSpotOrderbookResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFullSpotOrderbookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFullSpotOrderbookResponse) ProtoMessage() {}

func (x *QueryFullSpotOrderbookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFullSpotOrderbookResponse.ProtoReflect.Descriptor instead.
func (*QueryFullSpotOrderbookResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{125}
}

func (x *QueryFullSpotOrderbookResponse) GetBids() []*TrimmedLimitOrder {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *QueryFullSpotOrderbookResponse) GetAsks() []*TrimmedLimitOrder {
	if x != nil {
		return x.Asks
	}
	return nil
}

type QueryFullDerivativeOrderbookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// market id
	MarketId      string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFullDerivativeOrderbookRequest) Reset() {
	*x = QueryFullDerivativeOrderbookRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFullDerivativeOrderbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFullDerivativeOrderbookRequest) ProtoMessage() {}

func (x *QueryFullDerivativeOrderbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFullDerivativeOrderbookRequest.ProtoReflect.Descriptor instead.
func (*QueryFullDerivativeOrderbookRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{126}
}

func (x *QueryFullDerivativeOrderbookRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

type QueryFullDerivativeOrderbookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bids          []*TrimmedLimitOrder   `protobuf:"bytes,1,rep,name=Bids,proto3" json:"Bids,omitempty"`
	Asks          []*TrimmedLimitOrder   `protobuf:"bytes,2,rep,name=Asks,proto3" json:"Asks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFullDerivativeOrderbookResponse) Reset() {
	*x = QueryFullDerivativeOrderbookResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFullDerivativeOrderbookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFullDerivativeOrderbookResponse) ProtoMessage() {}

func (x *QueryFullDerivativeOrderbookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFullDerivativeOrderbookResponse.ProtoReflect.Descriptor instead.
func (*QueryFullDerivativeOrderbookResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{127}
}

func (x *QueryFullDerivativeOrderbookResponse) GetBids() []*TrimmedLimitOrder {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *QueryFullDerivativeOrderbookResponse) GetAsks() []*TrimmedLimitOrder {
	if x != nil {
		return x.Asks
	}
	return nil
}

type TrimmedLimitOrder struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// price of the order (in human readable format)
	Price string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	// quantity of the order (in human readable format)
	Quantity string `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// the order hash
	OrderHash string `protobuf:"bytes,3,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	// the subaccount ID
	SubaccountId  string `protobuf:"bytes,4,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrimmedLimitOrder) Reset() {
	*x = TrimmedLimitOrder{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrimmedLimitOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrimmedLimitOrder) ProtoMessage() {}

func (x *TrimmedLimitOrder) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrimmedLimitOrder.ProtoReflect.Descriptor instead.
func (*TrimmedLimitOrder) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{128}
}

func (x *TrimmedLimitOrder) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *TrimmedLimitOrder) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *TrimmedLimitOrder) GetOrderHash() string {
	if x != nil {
		return x.OrderHash
	}
	return ""
}

func (x *TrimmedLimitOrder) GetSubaccountId() string {
	if x != nil {
		return x.SubaccountId
	}
	return ""
}

type QueryMarketAtomicExecutionFeeMultiplierRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarketId      string                 `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMarketAtomicExecutionFeeMultiplierRequest) Reset() {
	*x = QueryMarketAtomicExecutionFeeMultiplierRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketAtomicExecutionFeeMultiplierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketAtomicExecutionFeeMultiplierRequest) ProtoMessage() {}

func (x *QueryMarketAtomicExecutionFeeMultiplierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketAtomicExecutionFeeMultiplierRequest.ProtoReflect.Descriptor instead.
func (*QueryMarketAtomicExecutionFeeMultiplierRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{129}
}

func (x *QueryMarketAtomicExecutionFeeMultiplierRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

type QueryMarketAtomicExecutionFeeMultiplierResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Multiplier    string                 `protobuf:"bytes,1,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMarketAtomicExecutionFeeMultiplierResponse) Reset() {
	*x = QueryMarketAtomicExecutionFeeMultiplierResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketAtomicExecutionFeeMultiplierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketAtomicExecutionFeeMultiplierResponse) ProtoMessage() {}

func (x *QueryMarketAtomicExecutionFeeMultiplierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketAtomicExecutionFeeMultiplierResponse.ProtoReflect.Descriptor instead.
func (*QueryMarketAtomicExecutionFeeMultiplierResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{130}
}

func (x *QueryMarketAtomicExecutionFeeMultiplierResponse) GetMultiplier() string {
	if x != nil {
		return x.Multiplier
	}
	return ""
}

type QueryActiveStakeGrantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grantee       string                 `protobuf:"bytes,1,opt,name=grantee,proto3" json:"grantee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryActiveStakeGrantRequest) Reset() {
	*x = QueryActiveStakeGrantRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryActiveStakeGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActiveStakeGrantRequest) ProtoMessage() {}

func (x *QueryActiveStakeGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActiveStakeGrantRequest.ProtoReflect.Descriptor instead.
func (*QueryActiveStakeGrantRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{131}
}

func (x *QueryActiveStakeGrantRequest) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

type QueryActiveStakeGrantResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Grant          *ActiveGrant           `protobuf:"bytes,1,opt,name=grant,proto3" json:"grant,omitempty"`
	EffectiveGrant *EffectiveGrant        `protobuf:"bytes,2,opt,name=effective_grant,json=effectiveGrant,proto3" json:"effective_grant,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryActiveStakeGrantResponse) Reset() {
	*x = QueryActiveStakeGrantResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryActiveStakeGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActiveStakeGrantResponse) ProtoMessage() {}

func (x *QueryActiveStakeGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActiveStakeGrantResponse.ProtoReflect.Descriptor instead.
func (*QueryActiveStakeGrantResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{132}
}

func (x *QueryActiveStakeGrantResponse) GetGrant() *ActiveGrant {
	if x != nil {
		return x.Grant
	}
	return nil
}

func (x *QueryActiveStakeGrantResponse) GetEffectiveGrant() *EffectiveGrant {
	if x != nil {
		return x.EffectiveGrant
	}
	return nil
}

type QueryGrantAuthorizationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Granter       string                 `protobuf:"bytes,1,opt,name=granter,proto3" json:"granter,omitempty"`
	Grantee       string                 `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryGrantAuthorizationRequest) Reset() {
	*x = QueryGrantAuthorizationRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryGrantAuthorizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGrantAuthorizationRequest) ProtoMessage() {}

func (x *QueryGrantAuthorizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGrantAuthorizationRequest.ProtoReflect.Descriptor instead.
func (*QueryGrantAuthorizationRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{133}
}

func (x *QueryGrantAuthorizationRequest) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

func (x *QueryGrantAuthorizationRequest) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

type QueryGrantAuthorizationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        string                 `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryGrantAuthorizationResponse) Reset() {
	*x = QueryGrantAuthorizationResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryGrantAuthorizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGrantAuthorizationResponse) ProtoMessage() {}

func (x *QueryGrantAuthorizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGrantAuthorizationResponse.ProtoReflect.Descriptor instead.
func (*QueryGrantAuthorizationResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{134}
}

func (x *QueryGrantAuthorizationResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type QueryGrantAuthorizationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Granter       string                 `protobuf:"bytes,1,opt,name=granter,proto3" json:"granter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryGrantAuthorizationsRequest) Reset() {
	*x = QueryGrantAuthorizationsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryGrantAuthorizationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGrantAuthorizationsRequest) ProtoMessage() {}

func (x *QueryGrantAuthorizationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGrantAuthorizationsRequest.ProtoReflect.Descriptor instead.
func (*QueryGrantAuthorizationsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{135}
}

func (x *QueryGrantAuthorizationsRequest) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

type QueryGrantAuthorizationsResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TotalGrantAmount string                 `protobuf:"bytes,1,opt,name=total_grant_amount,json=totalGrantAmount,proto3" json:"total_grant_amount,omitempty"`
	Grants           []*GrantAuthorization  `protobuf:"bytes,2,rep,name=grants,proto3" json:"grants,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QueryGrantAuthorizationsResponse) Reset() {
	*x = QueryGrantAuthorizationsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryGrantAuthorizationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGrantAuthorizationsResponse) ProtoMessage() {}

func (x *QueryGrantAuthorizationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGrantAuthorizationsResponse.ProtoReflect.Descriptor instead.
func (*QueryGrantAuthorizationsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{136}
}

func (x *QueryGrantAuthorizationsResponse) GetTotalGrantAmount() string {
	if x != nil {
		return x.TotalGrantAmount
	}
	return ""
}

func (x *QueryGrantAuthorizationsResponse) GetGrants() []*GrantAuthorization {
	if x != nil {
		return x.Grants
	}
	return nil
}

type QueryMarketBalanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// market id
	MarketId      string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMarketBalanceRequest) Reset() {
	*x = QueryMarketBalanceRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketBalanceRequest) ProtoMessage() {}

func (x *QueryMarketBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketBalanceRequest.ProtoReflect.Descriptor instead.
func (*QueryMarketBalanceRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{137}
}

func (x *QueryMarketBalanceRequest) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

type QueryMarketBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       *MarketBalance         `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMarketBalanceResponse) Reset() {
	*x = QueryMarketBalanceResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketBalanceResponse) ProtoMessage() {}

func (x *QueryMarketBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketBalanceResponse.ProtoReflect.Descriptor instead.
func (*QueryMarketBalanceResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{138}
}

func (x *QueryMarketBalanceResponse) GetBalance() *MarketBalance {
	if x != nil {
		return x.Balance
	}
	return nil
}

type QueryMarketBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMarketBalancesRequest) Reset() {
	*x = QueryMarketBalancesRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketBalancesRequest) ProtoMessage() {}

func (x *QueryMarketBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketBalancesRequest.ProtoReflect.Descriptor instead.
func (*QueryMarketBalancesRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{139}
}

type QueryMarketBalancesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balances      []*MarketBalance       `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMarketBalancesResponse) Reset() {
	*x = QueryMarketBalancesResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMarketBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMarketBalancesResponse) ProtoMessage() {}

func (x *QueryMarketBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMarketBalancesResponse.ProtoReflect.Descriptor instead.
func (*QueryMarketBalancesResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{140}
}

func (x *QueryMarketBalancesResponse) GetBalances() []*MarketBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type MarketBalance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the market ID
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// the current balance of the market
	Balance       string `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketBalance) Reset() {
	*x = MarketBalance{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketBalance) ProtoMessage() {}

func (x *MarketBalance) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketBalance.ProtoReflect.Descriptor instead.
func (*MarketBalance) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{141}
}

func (x *MarketBalance) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *MarketBalance) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type QueryDenomMinNotionalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Denom         string                 `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDenomMinNotionalRequest) Reset() {
	*x = QueryDenomMinNotionalRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDenomMinNotionalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDenomMinNotionalRequest) ProtoMessage() {}

func (x *QueryDenomMinNotionalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDenomMinNotionalRequest.ProtoReflect.Descriptor instead.
func (*QueryDenomMinNotionalRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{142}
}

func (x *QueryDenomMinNotionalRequest) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

type QueryDenomMinNotionalResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the minimum notional amount for the denom (in human readable format)
	Amount        string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDenomMinNotionalResponse) Reset() {
	*x = QueryDenomMinNotionalResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDenomMinNotionalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDenomMinNotionalResponse) ProtoMessage() {}

func (x *QueryDenomMinNotionalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDenomMinNotionalResponse.ProtoReflect.Descriptor instead.
func (*QueryDenomMinNotionalResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{143}
}

func (x *QueryDenomMinNotionalResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type QueryDenomMinNotionalsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryDenomMinNotionalsRequest) Reset() {
	*x = QueryDenomMinNotionalsRequest{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDenomMinNotionalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDenomMinNotionalsRequest) ProtoMessage() {}

func (x *QueryDenomMinNotionalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDenomMinNotionalsRequest.ProtoReflect.Descriptor instead.
func (*QueryDenomMinNotionalsRequest) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{144}
}

type QueryDenomMinNotionalsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DenomMinNotionals []*DenomMinNotional    `protobuf:"bytes,1,rep,name=denom_min_notionals,json=denomMinNotionals,proto3" json:"denom_min_notionals,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QueryDenomMinNotionalsResponse) Reset() {
	*x = QueryDenomMinNotionalsResponse{}
	mi := &file_injective_exchange_v2_query_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDenomMinNotionalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDenomMinNotionalsResponse) ProtoMessage() {}

func (x *QueryDenomMinNotionalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_exchange_v2_query_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDenomMinNotionalsResponse.ProtoReflect.Descriptor instead.
func (*QueryDenomMinNotionalsResponse) Descriptor() ([]byte, []int) {
	return file_injective_exchange_v2_query_proto_rawDescGZIP(), []int{145}
}

func (x *QueryDenomMinNotionalsResponse) GetDenomMinNotionals() []*DenomMinNotional {
	if x != nil {
		return x.DenomMinNotionals
	}
	return nil
}

var File_injective_exchange_v2_query_proto protoreflect.FileDescriptor

const file_injective_exchange_v2_query_proto_rawDesc = "" +
	"\n" +
	"!injective/exchange/v2/query.proto\x12\x15injective.exchange.v2\x1a\x14gogoproto/gogo.proto\x1a\x1cgoogle/api/annotations.proto\x1a$injective/exchange/v2/exchange.proto\x1a%injective/exchange/v2/orderbook.proto\x1a\"injective/exchange/v2/market.proto\x1a#injective/exchange/v2/genesis.proto\x1a%injective/oracle/v1beta1/oracle.proto\"O\n" +
	"\n" +
	"Subaccount\x12\x16\n" +
	"\x06trader\x18\x01 \x01(\tR\x06trader\x12)\n" +
	"\x10subaccount_nonce\x18\x02 \x01(\rR\x0fsubaccountNonce\"`\n" +
	"\x1cQuerySubaccountOrdersRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\x12\x1b\n" +
	"\tmarket_id\x18\x02 \x01(\tR\bmarketId\"\xb7\x01\n" +
	"\x1dQuerySubaccountOrdersResponse\x12I\n" +
	"\n" +
	"buy_orders\x18\x01 \x03(\v2*.injective.exchange.v2.SubaccountOrderDataR\tbuyOrders\x12K\n" +
	"\vsell_orders\x18\x02 \x03(\v2*.injective.exchange.v2.SubaccountOrderDataR\n" +
	"sellOrders\"\xaa\x01\n" +
	"%SubaccountOrderbookMetadataWithMarket\x12N\n" +
	"\bmetadata\x18\x01 \x01(\v22.injective.exchange.v2.SubaccountOrderbookMetadataR\bmetadata\x12\x1b\n" +
	"\tmarket_id\x18\x02 \x01(\tR\bmarketId\x12\x14\n" +
	"\x05isBuy\x18\x03 \x01(\bR\x05isBuy\"\x1c\n" +
	"\x1aQueryExchangeParamsRequest\"Z\n" +
	"\x1bQueryExchangeParamsResponse\x12;\n" +
	"\x06params\x18\x01 \x01(\v2\x1d.injective.exchange.v2.ParamsB\x04\xc8\xde\x1f\x00R\x06params\"\x8e\x01\n" +
	"\x1eQuerySubaccountDepositsRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\x12G\n" +
	"\n" +
	"subaccount\x18\x02 \x01(\v2!.injective.exchange.v2.SubaccountB\x04\xc8\xde\x1f\x01R\n" +
	"subaccount\"\xe0\x01\n" +
	"\x1fQuerySubaccountDepositsResponse\x12`\n" +
	"\bdeposits\x18\x01 \x03(\v2D.injective.exchange.v2.QuerySubaccountDepositsResponse.DepositsEntryR\bdeposits\x1a[\n" +
	"\rDepositsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.injective.exchange.v2.DepositR\x05value:\x028\x01\"\x1e\n" +
	"\x1cQueryExchangeBalancesRequest\"a\n" +
	"\x1dQueryExchangeBalancesResponse\x12@\n" +
	"\bbalances\x18\x01 \x03(\v2\x1e.injective.exchange.v2.BalanceB\x04\xc8\xde\x1f\x00R\bbalances\"7\n" +
	"\x1bQueryAggregateVolumeRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\"p\n" +
	"\x1cQueryAggregateVolumeResponse\x12P\n" +
	"\x11aggregate_volumes\x18\x01 \x03(\v2#.injective.exchange.v2.MarketVolumeR\x10aggregateVolumes\"Y\n" +
	"\x1cQueryAggregateVolumesRequest\x12\x1a\n" +
	"\baccounts\x18\x01 \x03(\tR\baccounts\x12\x1d\n" +
	"\n" +
	"market_ids\x18\x02 \x03(\tR\tmarketIds\"\xef\x01\n" +
	"\x1dQueryAggregateVolumesResponse\x12o\n" +
	"\x19aggregate_account_volumes\x18\x01 \x03(\v23.injective.exchange.v2.AggregateAccountVolumeRecordR\x17aggregateAccountVolumes\x12]\n" +
	"\x18aggregate_market_volumes\x18\x02 \x03(\v2#.injective.exchange.v2.MarketVolumeR\x16aggregateMarketVolumes\"@\n" +
	"!QueryAggregateMarketVolumeRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"g\n" +
	"\"QueryAggregateMarketVolumeResponse\x12A\n" +
	"\x06volume\x18\x01 \x01(\v2#.injective.exchange.v2.VolumeRecordB\x04\xc8\xde\x1f\x00R\x06volume\"0\n" +
	"\x18QueryDenomDecimalRequest\x12\x14\n" +
	"\x05denom\x18\x01 \x01(\tR\x05denom\"5\n" +
	"\x19QueryDenomDecimalResponse\x12\x18\n" +
	"\adecimal\x18\x01 \x01(\x04R\adecimal\"3\n" +
	"\x19QueryDenomDecimalsRequest\x12\x16\n" +
	"\x06denoms\x18\x01 \x03(\tR\x06denoms\"o\n" +
	"\x1aQueryDenomDecimalsResponse\x12Q\n" +
	"\x0edenom_decimals\x18\x01 \x03(\v2$.injective.exchange.v2.DenomDecimalsB\x04\xc8\xde\x1f\x00R\rdenomDecimals\"C\n" +
	"\"QueryAggregateMarketVolumesRequest\x12\x1d\n" +
	"\n" +
	"market_ids\x18\x01 \x03(\tR\tmarketIds\"d\n" +
	"#QueryAggregateMarketVolumesResponse\x12=\n" +
	"\avolumes\x18\x01 \x03(\v2#.injective.exchange.v2.MarketVolumeR\avolumes\"Z\n" +
	"\x1dQuerySubaccountDepositRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\x12\x14\n" +
	"\x05denom\x18\x02 \x01(\tR\x05denom\"\\\n" +
	"\x1eQuerySubaccountDepositResponse\x12:\n" +
	"\bdeposits\x18\x01 \x01(\v2\x1e.injective.exchange.v2.DepositR\bdeposits\"P\n" +
	"\x17QuerySpotMarketsRequest\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"market_ids\x18\x02 \x03(\tR\tmarketIds\"W\n" +
	"\x18QuerySpotMarketsResponse\x12;\n" +
	"\amarkets\x18\x01 \x03(\v2!.injective.exchange.v2.SpotMarketR\amarkets\"5\n" +
	"\x16QuerySpotMarketRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"T\n" +
	"\x17QuerySpotMarketResponse\x129\n" +
	"\x06market\x18\x01 \x01(\v2!.injective.exchange.v2.SpotMarketR\x06market\"\xd1\x02\n" +
	"\x19QuerySpotOrderbookRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x04R\x05limit\x12?\n" +
	"\n" +
	"order_side\x18\x03 \x01(\x0e2 .injective.exchange.v2.OrderSideR\torderSide\x12_\n" +
	"\x19limit_cumulative_notional\x18\x04 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x17limitCumulativeNotional\x12_\n" +
	"\x19limit_cumulative_quantity\x18\x05 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x17limitCumulativeQuantity\"\xae\x01\n" +
	"\x1aQuerySpotOrderbookResponse\x12F\n" +
	"\x10buys_price_level\x18\x01 \x03(\v2\x1c.injective.exchange.v2.LevelR\x0ebuysPriceLevel\x12H\n" +
	"\x11sells_price_level\x18\x02 \x03(\v2\x1c.injective.exchange.v2.LevelR\x0fsellsPriceLevel\"\xa3\x01\n" +
	"\x0eFullSpotMarket\x129\n" +
	"\x06market\x18\x01 \x01(\v2!.injective.exchange.v2.SpotMarketR\x06market\x12V\n" +
	"\x11mid_price_and_tob\x18\x02 \x01(\v2%.injective.exchange.v2.MidPriceAndTOBB\x04\xc8\xde\x1f\x01R\x0emidPriceAndTob\"\x88\x01\n" +
	"\x1bQueryFullSpotMarketsRequest\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"market_ids\x18\x02 \x03(\tR\tmarketIds\x122\n" +
	"\x16with_mid_price_and_tob\x18\x03 \x01(\bR\x12withMidPriceAndTob\"_\n" +
	"\x1cQueryFullSpotMarketsResponse\x12?\n" +
	"\amarkets\x18\x01 \x03(\v2%.injective.exchange.v2.FullSpotMarketR\amarkets\"m\n" +
	"\x1aQueryFullSpotMarketRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x122\n" +
	"\x16with_mid_price_and_tob\x18\x02 \x01(\bR\x12withMidPriceAndTob\"\\\n" +
	"\x1bQueryFullSpotMarketResponse\x12=\n" +
	"\x06market\x18\x01 \x01(\v2%.injective.exchange.v2.FullSpotMarketR\x06market\"\x85\x01\n" +
	"\x1eQuerySpotOrdersByHashesRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\x12!\n" +
	"\forder_hashes\x18\x03 \x03(\tR\vorderHashes\"g\n" +
	"\x1fQuerySpotOrdersByHashesResponse\x12D\n" +
	"\x06orders\x18\x01 \x03(\v2,.injective.exchange.v2.TrimmedSpotLimitOrderR\x06orders\"`\n" +
	"\x1cQueryTraderSpotOrdersRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\"l\n" +
	"$QueryAccountAddressSpotOrdersRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12'\n" +
	"\x0faccount_address\x18\x02 \x01(\tR\x0eaccountAddress\"\x9b\x02\n" +
	"\x15TrimmedSpotLimitOrder\x129\n" +
	"\x05price\x18\x01 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\x12?\n" +
	"\bquantity\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bquantity\x12?\n" +
	"\bfillable\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bfillable\x12\x14\n" +
	"\x05isBuy\x18\x04 \x01(\bR\x05isBuy\x12\x1d\n" +
	"\n" +
	"order_hash\x18\x05 \x01(\tR\torderHash\x12\x10\n" +
	"\x03cid\x18\x06 \x01(\tR\x03cid\"e\n" +
	"\x1dQueryTraderSpotOrdersResponse\x12D\n" +
	"\x06orders\x18\x01 \x03(\v2,.injective.exchange.v2.TrimmedSpotLimitOrderR\x06orders\"m\n" +
	"%QueryAccountAddressSpotOrdersResponse\x12D\n" +
	"\x06orders\x18\x01 \x03(\v2,.injective.exchange.v2.TrimmedSpotLimitOrderR\x06orders\"=\n" +
	"\x1eQuerySpotMidPriceAndTOBRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"\xfb\x01\n" +
	"\x1fQuerySpotMidPriceAndTOBResponse\x12@\n" +
	"\tmid_price\x18\x01 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bmidPrice\x12I\n" +
	"\x0ebest_buy_price\x18\x02 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\fbestBuyPrice\x12K\n" +
	"\x0fbest_sell_price\x18\x03 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\rbestSellPrice\"C\n" +
	"$QueryDerivativeMidPriceAndTOBRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"\x81\x02\n" +
	"%QueryDerivativeMidPriceAndTOBResponse\x12@\n" +
	"\tmid_price\x18\x01 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bmidPrice\x12I\n" +
	"\x0ebest_buy_price\x18\x02 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\fbestBuyPrice\x12K\n" +
	"\x0fbest_sell_price\x18\x03 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\rbestSellPrice\"\xb5\x01\n" +
	"\x1fQueryDerivativeOrderbookRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x04R\x05limit\x12_\n" +
	"\x19limit_cumulative_notional\x18\x03 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x17limitCumulativeNotional\"\xb4\x01\n" +
	" QueryDerivativeOrderbookResponse\x12F\n" +
	"\x10buys_price_level\x18\x01 \x03(\v2\x1c.injective.exchange.v2.LevelR\x0ebuysPriceLevel\x12H\n" +
	"\x11sells_price_level\x18\x02 \x03(\v2\x1c.injective.exchange.v2.LevelR\x0fsellsPriceLevel\"\x97\x03\n" +
	".QueryTraderSpotOrdersToCancelUpToAmountRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\x12D\n" +
	"\vbase_amount\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\n" +
	"baseAmount\x12F\n" +
	"\fquote_amount\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\vquoteAmount\x12G\n" +
	"\bstrategy\x18\x05 \x01(\x0e2+.injective.exchange.v2.CancellationStrategyR\bstrategy\x12L\n" +
	"\x0freference_price\x18\x06 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x0ereferencePrice\"\xd7\x02\n" +
	"4QueryTraderDerivativeOrdersToCancelUpToAmountRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\x12F\n" +
	"\fquote_amount\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\vquoteAmount\x12G\n" +
	"\bstrategy\x18\x04 \x01(\x0e2+.injective.exchange.v2.CancellationStrategyR\bstrategy\x12L\n" +
	"\x0freference_price\x18\x05 \x01(\tB#\xc8\xde\x1f\x01\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x0ereferencePrice\"f\n" +
	"\"QueryTraderDerivativeOrdersRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\"r\n" +
	"*QueryAccountAddressDerivativeOrdersRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12'\n" +
	"\x0faccount_address\x18\x02 \x01(\tR\x0eaccountAddress\"\xe9\x02\n" +
	"\x1bTrimmedDerivativeLimitOrder\x129\n" +
	"\x05price\x18\x01 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\x12?\n" +
	"\bquantity\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bquantity\x12;\n" +
	"\x06margin\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x06margin\x12?\n" +
	"\bfillable\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bfillable\x12\x1f\n" +
	"\x05isBuy\x18\x05 \x01(\bB\t\xea\xde\x1f\x05isBuyR\x05isBuy\x12\x1d\n" +
	"\n" +
	"order_hash\x18\x06 \x01(\tR\torderHash\x12\x10\n" +
	"\x03cid\x18\a \x01(\tR\x03cid\"q\n" +
	"#QueryTraderDerivativeOrdersResponse\x12J\n" +
	"\x06orders\x18\x01 \x03(\v22.injective.exchange.v2.TrimmedDerivativeLimitOrderR\x06orders\"y\n" +
	"+QueryAccountAddressDerivativeOrdersResponse\x12J\n" +
	"\x06orders\x18\x01 \x03(\v22.injective.exchange.v2.TrimmedDerivativeLimitOrderR\x06orders\"\x8b\x01\n" +
	"$QueryDerivativeOrdersByHashesRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\x12!\n" +
	"\forder_hashes\x18\x03 \x03(\tR\vorderHashes\"s\n" +
	"%QueryDerivativeOrdersByHashesResponse\x12J\n" +
	"\x06orders\x18\x01 \x03(\v22.injective.exchange.v2.TrimmedDerivativeLimitOrderR\x06orders\"\x8a\x01\n" +
	"\x1dQueryDerivativeMarketsRequest\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"market_ids\x18\x02 \x03(\tR\tmarketIds\x122\n" +
	"\x16with_mid_price_and_tob\x18\x03 \x01(\bR\x12withMidPriceAndTob\"\x88\x01\n" +
	"\n" +
	"PriceLevel\x129\n" +
	"\x05price\x18\x01 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\x12?\n" +
	"\bquantity\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bquantity\"\xb5\x01\n" +
	"\x14PerpetualMarketState\x12K\n" +
	"\vmarket_info\x18\x01 \x01(\v2*.injective.exchange.v2.PerpetualMarketInfoR\n" +
	"marketInfo\x12P\n" +
	"\ffunding_info\x18\x02 \x01(\v2-.injective.exchange.v2.PerpetualMarketFundingR\vfundingInfo\"\xa6\x03\n" +
	"\x14FullDerivativeMarket\x12?\n" +
	"\x06market\x18\x01 \x01(\v2'.injective.exchange.v2.DerivativeMarketR\x06market\x12T\n" +
	"\x0eperpetual_info\x18\x02 \x01(\v2+.injective.exchange.v2.PerpetualMarketStateH\x00R\rperpetualInfo\x12S\n" +
	"\ffutures_info\x18\x03 \x01(\v2..injective.exchange.v2.ExpiryFuturesMarketInfoH\x00R\vfuturesInfo\x12B\n" +
	"\n" +
	"mark_price\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\tmarkPrice\x12V\n" +
	"\x11mid_price_and_tob\x18\x05 \x01(\v2%.injective.exchange.v2.MidPriceAndTOBB\x04\xc8\xde\x1f\x01R\x0emidPriceAndTobB\x06\n" +
	"\x04info\"g\n" +
	"\x1eQueryDerivativeMarketsResponse\x12E\n" +
	"\amarkets\x18\x01 \x03(\v2+.injective.exchange.v2.FullDerivativeMarketR\amarkets\";\n" +
	"\x1cQueryDerivativeMarketRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"d\n" +
	"\x1dQueryDerivativeMarketResponse\x12C\n" +
	"\x06market\x18\x01 \x01(\v2+.injective.exchange.v2.FullDerivativeMarketR\x06market\"B\n" +
	"#QueryDerivativeMarketAddressRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"e\n" +
	"$QueryDerivativeMarketAddressResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12#\n" +
	"\rsubaccount_id\x18\x02 \x01(\tR\fsubaccountId\"G\n" +
	" QuerySubaccountTradeNonceRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\"<\n" +
	"\x1dQueryPositionsInMarketRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"g\n" +
	"\x1eQueryPositionsInMarketResponse\x12E\n" +
	"\x05state\x18\x01 \x03(\v2).injective.exchange.v2.DerivativePositionB\x04\xc8\xde\x1f\x01R\x05state\"F\n" +
	"\x1fQuerySubaccountPositionsRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\"j\n" +
	"&QuerySubaccountPositionInMarketRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\x12\x1b\n" +
	"\tmarket_id\x18\x02 \x01(\tR\bmarketId\"s\n" +
	"/QuerySubaccountEffectivePositionInMarketRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\x12\x1b\n" +
	"\tmarket_id\x18\x02 \x01(\tR\bmarketId\"J\n" +
	"#QuerySubaccountOrderMetadataRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\"i\n" +
	" QuerySubaccountPositionsResponse\x12E\n" +
	"\x05state\x18\x01 \x03(\v2).injective.exchange.v2.DerivativePositionB\x04\xc8\xde\x1f\x00R\x05state\"f\n" +
	"'QuerySubaccountPositionInMarketResponse\x12;\n" +
	"\x05state\x18\x01 \x01(\v2\x1f.injective.exchange.v2.PositionB\x04\xc8\xde\x1f\x01R\x05state\"\x83\x02\n" +
	"\x11EffectivePosition\x12\x17\n" +
	"\ais_long\x18\x01 \x01(\bR\x06isLong\x12?\n" +
	"\bquantity\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bquantity\x12D\n" +
	"\ventry_price\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\n" +
	"entryPrice\x12N\n" +
	"\x10effective_margin\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x0feffectiveMargin\"x\n" +
	"0QuerySubaccountEffectivePositionInMarketResponse\x12D\n" +
	"\x05state\x18\x01 \x01(\v2(.injective.exchange.v2.EffectivePositionB\x04\xc8\xde\x1f\x01R\x05state\">\n" +
	"\x1fQueryPerpetualMarketInfoRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"h\n" +
	" QueryPerpetualMarketInfoResponse\x12D\n" +
	"\x04info\x18\x01 \x01(\v2*.injective.exchange.v2.PerpetualMarketInfoB\x04\xc8\xde\x1f\x00R\x04info\"B\n" +
	"#QueryExpiryFuturesMarketInfoRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"p\n" +
	"$QueryExpiryFuturesMarketInfoResponse\x12H\n" +
	"\x04info\x18\x01 \x01(\v2..injective.exchange.v2.ExpiryFuturesMarketInfoB\x04\xc8\xde\x1f\x00R\x04info\"A\n" +
	"\"QueryPerpetualMarketFundingRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"p\n" +
	"#QueryPerpetualMarketFundingResponse\x12I\n" +
	"\x05state\x18\x01 \x01(\v2-.injective.exchange.v2.PerpetualMarketFundingB\x04\xc8\xde\x1f\x00R\x05state\"\x86\x01\n" +
	"$QuerySubaccountOrderMetadataResponse\x12^\n" +
	"\bmetadata\x18\x01 \x03(\v2<.injective.exchange.v2.SubaccountOrderbookMetadataWithMarketB\x04\xc8\xde\x1f\x00R\bmetadata\"9\n" +
	"!QuerySubaccountTradeNonceResponse\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\rR\x05nonce\"\x19\n" +
	"\x17QueryModuleStateRequest\"U\n" +
	"\x18QueryModuleStateResponse\x129\n" +
	"\x05state\x18\x01 \x01(\v2#.injective.exchange.v2.GenesisStateR\x05state\"\x17\n" +
	"\x15QueryPositionsRequest\"_\n" +
	"\x16QueryPositionsResponse\x12E\n" +
	"\x05state\x18\x01 \x03(\v2).injective.exchange.v2.DerivativePositionB\x04\xc8\xde\x1f\x00R\x05state\"q\n" +
	"\x1dQueryTradeRewardPointsRequest\x12\x1a\n" +
	"\baccounts\x18\x01 \x03(\tR\baccounts\x124\n" +
	"\x16pending_pool_timestamp\x18\x02 \x01(\x03R\x14pendingPoolTimestamp\"\x84\x01\n" +
	"\x1eQueryTradeRewardPointsResponse\x12b\n" +
	"\x1baccount_trade_reward_points\x18\x01 \x03(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x18accountTradeRewardPoints\"!\n" +
	"\x1fQueryTradeRewardCampaignRequest\"\xee\x04\n" +
	" QueryTradeRewardCampaignResponse\x12q\n" +
	"\x1ctrading_reward_campaign_info\x18\x01 \x01(\v20.injective.exchange.v2.TradingRewardCampaignInfoR\x19tradingRewardCampaignInfo\x12{\n" +
	"%trading_reward_pool_campaign_schedule\x18\x02 \x03(\v2).injective.exchange.v2.CampaignRewardPoolR!tradingRewardPoolCampaignSchedule\x12^\n" +
	"\x19total_trade_reward_points\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x16totalTradeRewardPoints\x12\x8a\x01\n" +
	"-pending_trading_reward_pool_campaign_schedule\x18\x04 \x03(\v2).injective.exchange.v2.CampaignRewardPoolR(pendingTradingRewardPoolCampaignSchedule\x12m\n" +
	"!pending_total_trade_reward_points\x18\x05 \x03(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x1dpendingTotalTradeRewardPoints\";\n" +
	"\x1fQueryIsOptedOutOfRewardsRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\"D\n" +
	" QueryIsOptedOutOfRewardsResponse\x12 \n" +
	"\fis_opted_out\x18\x01 \x01(\bR\n" +
	"isOptedOut\"'\n" +
	"%QueryOptedOutOfRewardsAccountsRequest\"D\n" +
	"&QueryOptedOutOfRewardsAccountsResponse\x12\x1a\n" +
	"\baccounts\x18\x01 \x03(\tR\baccounts\">\n" +
	"\"QueryFeeDiscountAccountInfoRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\"\xdf\x01\n" +
	"#QueryFeeDiscountAccountInfoResponse\x12\x1d\n" +
	"\n" +
	"tier_level\x18\x01 \x01(\x04R\ttierLevel\x12M\n" +
	"\faccount_info\x18\x02 \x01(\v2*.injective.exchange.v2.FeeDiscountTierInfoR\vaccountInfo\x12J\n" +
	"\vaccount_ttl\x18\x03 \x01(\v2).injective.exchange.v2.FeeDiscountTierTTLR\n" +
	"accountTtl\"!\n" +
	"\x1fQueryFeeDiscountScheduleRequest\"\x82\x01\n" +
	" QueryFeeDiscountScheduleResponse\x12^\n" +
	"\x15fee_discount_schedule\x18\x01 \x01(\v2*.injective.exchange.v2.FeeDiscountScheduleR\x13feeDiscountSchedule\"@\n" +
	"\x1dQueryBalanceMismatchesRequest\x12\x1f\n" +
	"\vdust_factor\x18\x01 \x01(\x03R\n" +
	"dustFactor\"\xa2\x03\n" +
	"\x0fBalanceMismatch\x12\"\n" +
	"\fsubaccountId\x18\x01 \x01(\tR\fsubaccountId\x12\x14\n" +
	"\x05denom\x18\x02 \x01(\tR\x05denom\x12A\n" +
	"\tavailable\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\tavailable\x129\n" +
	"\x05total\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05total\x12F\n" +
	"\fbalance_hold\x18\x05 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\vbalanceHold\x12J\n" +
	"\x0eexpected_total\x18\x06 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\rexpectedTotal\x12C\n" +
	"\n" +
	"difference\x18\a \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\n" +
	"difference\"w\n" +
	"\x1eQueryBalanceMismatchesResponse\x12U\n" +
	"\x12balance_mismatches\x18\x01 \x03(\v2&.injective.exchange.v2.BalanceMismatchR\x11balanceMismatches\"%\n" +
	"#QueryBalanceWithBalanceHoldsRequest\"\x97\x02\n" +
	"\x15BalanceWithMarginHold\x12\"\n" +
	"\fsubaccountId\x18\x01 \x01(\tR\fsubaccountId\x12\x14\n" +
	"\x05denom\x18\x02 \x01(\tR\x05denom\x12A\n" +
	"\tavailable\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\tavailable\x129\n" +
	"\x05total\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05total\x12F\n" +
	"\fbalance_hold\x18\x05 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\vbalanceHold\"\x91\x01\n" +
	"$QueryBalanceWithBalanceHoldsResponse\x12i\n" +
	"\x1abalance_with_balance_holds\x18\x01 \x03(\v2,.injective.exchange.v2.BalanceWithMarginHoldR\x17balanceWithBalanceHolds\"'\n" +
	"%QueryFeeDiscountTierStatisticsRequest\"9\n" +
	"\rTierStatistic\x12\x12\n" +
	"\x04tier\x18\x01 \x01(\x04R\x04tier\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x04R\x05count\"n\n" +
	"&QueryFeeDiscountTierStatisticsResponse\x12D\n" +
	"\n" +
	"statistics\x18\x01 \x03(\v2$.injective.exchange.v2.TierStatisticR\n" +
	"statistics\"\x17\n" +
	"\x15MitoVaultInfosRequest\"\xc4\x01\n" +
	"\x16MitoVaultInfosResponse\x12)\n" +
	"\x10master_addresses\x18\x01 \x03(\tR\x0fmasterAddresses\x121\n" +
	"\x14derivative_addresses\x18\x02 \x03(\tR\x13derivativeAddresses\x12%\n" +
	"\x0espot_addresses\x18\x03 \x03(\tR\rspotAddresses\x12%\n" +
	"\x0ecw20_addresses\x18\x04 \x03(\tR\rcw20Addresses\"D\n" +
	"\x1dQueryMarketIDFromVaultRequest\x12#\n" +
	"\rvault_address\x18\x01 \x01(\tR\fvaultAddress\"=\n" +
	"\x1eQueryMarketIDFromVaultResponse\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"A\n" +
	"\"QueryHistoricalTradeRecordsRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"o\n" +
	"#QueryHistoricalTradeRecordsResponse\x12H\n" +
	"\rtrade_records\x18\x01 \x03(\v2#.injective.exchange.v2.TradeRecordsR\ftradeRecords\"\xb7\x01\n" +
	"\x13TradeHistoryOptions\x12,\n" +
	"\x12trade_grouping_sec\x18\x01 \x01(\x04R\x10tradeGroupingSec\x12\x17\n" +
	"\amax_age\x18\x02 \x01(\x04R\x06maxAge\x12.\n" +
	"\x13include_raw_history\x18\x04 \x01(\bR\x11includeRawHistory\x12)\n" +
	"\x10include_metadata\x18\x05 \x01(\bR\x0fincludeMetadata\"\x9b\x01\n" +
	"\x1cQueryMarketVolatilityRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12^\n" +
	"\x15trade_history_options\x18\x02 \x01(\v2*.injective.exchange.v2.TradeHistoryOptionsR\x13tradeHistoryOptions\"\xfe\x01\n" +
	"\x1dQueryMarketVolatilityResponse\x12?\n" +
	"\n" +
	"volatility\x18\x01 \x01(\tB\x1f\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\n" +
	"volatility\x12W\n" +
	"\x10history_metadata\x18\x02 \x01(\v2,.injective.oracle.v1beta1.MetadataStatisticsR\x0fhistoryMetadata\x12C\n" +
	"\vraw_history\x18\x03 \x03(\v2\".injective.exchange.v2.TradeRecordR\n" +
	"rawHistory\"3\n" +
	"\x19QueryBinaryMarketsRequest\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"b\n" +
	"\x1aQueryBinaryMarketsResponse\x12D\n" +
	"\amarkets\x18\x01 \x03(\v2*.injective.exchange.v2.BinaryOptionsMarketR\amarkets\"q\n" +
	"-QueryTraderDerivativeConditionalOrdersRequest\x12#\n" +
	"\rsubaccount_id\x18\x01 \x01(\tR\fsubaccountId\x12\x1b\n" +
	"\tmarket_id\x18\x02 \x01(\tR\bmarketId\"\x9e\x03\n" +
	"!TrimmedDerivativeConditionalOrder\x129\n" +
	"\x05price\x18\x01 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\x12?\n" +
	"\bquantity\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bquantity\x12;\n" +
	"\x06margin\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x06margin\x12G\n" +
	"\ftriggerPrice\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\ftriggerPrice\x12\x1f\n" +
	"\x05isBuy\x18\x05 \x01(\bB\t\xea\xde\x1f\x05isBuyR\x05isBuy\x12%\n" +
	"\aisLimit\x18\x06 \x01(\bB\v\xea\xde\x1f\aisLimitR\aisLimit\x12\x1d\n" +
	"\n" +
	"order_hash\x18\a \x01(\tR\torderHash\x12\x10\n" +
	"\x03cid\x18\b \x01(\tR\x03cid\"\x82\x01\n" +
	".QueryTraderDerivativeConditionalOrdersResponse\x12P\n" +
	"\x06orders\x18\x01 \x03(\v28.injective.exchange.v2.TrimmedDerivativeConditionalOrderR\x06orders\"<\n" +
	"\x1dQueryFullSpotOrderbookRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"\x9c\x01\n" +
	"\x1eQueryFullSpotOrderbookResponse\x12<\n" +
	"\x04Bids\x18\x01 \x03(\v2(.injective.exchange.v2.TrimmedLimitOrderR\x04Bids\x12<\n" +
	"\x04Asks\x18\x02 \x03(\v2(.injective.exchange.v2.TrimmedLimitOrderR\x04Asks\"B\n" +
	"#QueryFullDerivativeOrderbookRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"\xa2\x01\n" +
	"$QueryFullDerivativeOrderbookResponse\x12<\n" +
	"\x04Bids\x18\x01 \x03(\v2(.injective.exchange.v2.TrimmedLimitOrderR\x04Bids\x12<\n" +
	"\x04Asks\x18\x02 \x03(\v2(.injective.exchange.v2.TrimmedLimitOrderR\x04Asks\"\xd3\x01\n" +
	"\x11TrimmedLimitOrder\x129\n" +
	"\x05price\x18\x01 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\x12?\n" +
	"\bquantity\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\bquantity\x12\x1d\n" +
	"\n" +
	"order_hash\x18\x03 \x01(\tR\torderHash\x12#\n" +
	"\rsubaccount_id\x18\x04 \x01(\tR\fsubaccountId\"M\n" +
	".QueryMarketAtomicExecutionFeeMultiplierRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"v\n" +
	"/QueryMarketAtomicExecutionFeeMultiplierResponse\x12C\n" +
	"\n" +
	"multiplier\x18\x01 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\n" +
	"multiplier\"8\n" +
	"\x1cQueryActiveStakeGrantRequest\x12\x18\n" +
	"\agrantee\x18\x01 \x01(\tR\agrantee\"\xa9\x01\n" +
	"\x1dQueryActiveStakeGrantResponse\x128\n" +
	"\x05grant\x18\x01 \x01(\v2\".injective.exchange.v2.ActiveGrantR\x05grant\x12N\n" +
	"\x0feffective_grant\x18\x02 \x01(\v2%.injective.exchange.v2.EffectiveGrantR\x0eeffectiveGrant\"T\n" +
	"\x1eQueryGrantAuthorizationRequest\x12\x18\n" +
	"\agranter\x18\x01 \x01(\tR\agranter\x12\x18\n" +
	"\agrantee\x18\x02 \x01(\tR\agrantee\"X\n" +
	"\x1fQueryGrantAuthorizationResponse\x125\n" +
	"\x06amount\x18\x01 \x01(\tB\x1d\xc8\xde\x1f\x00\xda\xde\x1f\x15cosmossdk.io/math.IntR\x06amount\";\n" +
	"\x1fQueryGrantAuthorizationsRequest\x12\x18\n" +
	"\agranter\x18\x01 \x01(\tR\agranter\"\xb2\x01\n" +
	" QueryGrantAuthorizationsResponse\x12K\n" +
	"\x12total_grant_amount\x18\x01 \x01(\tB\x1d\xc8\xde\x1f\x00\xda\xde\x1f\x15cosmossdk.io/math.IntR\x10totalGrantAmount\x12A\n" +
	"\x06grants\x18\x02 \x03(\v2).injective.exchange.v2.GrantAuthorizationR\x06grants\"8\n" +
	"\x19QueryMarketBalanceRequest\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\"\\\n" +
	"\x1aQueryMarketBalanceResponse\x12>\n" +
	"\abalance\x18\x01 \x01(\v2$.injective.exchange.v2.MarketBalanceR\abalance\"\x1c\n" +
	"\x1aQueryMarketBalancesRequest\"_\n" +
	"\x1bQueryMarketBalancesResponse\x12@\n" +
	"\bbalances\x18\x01 \x03(\v2$.injective.exchange.v2.MarketBalanceR\bbalances\"k\n" +
	"\rMarketBalance\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\tR\bmarketId\x12=\n" +
	"\abalance\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\abalance\"4\n" +
	"\x1cQueryDenomMinNotionalRequest\x12\x14\n" +
	"\x05denom\x18\x01 \x01(\tR\x05denom\"\\\n" +
	"\x1dQueryDenomMinNotionalResponse\x12;\n" +
	"\x06amount\x18\x01 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x06amount\"\x1f\n" +
	"\x1dQueryDenomMinNotionalsRequest\"y\n" +
	"\x1eQueryDenomMinNotionalsResponse\x12W\n" +
	"\x13denom_min_notionals\x18\x01 \x03(\v2'.injective.exchange.v2.DenomMinNotionalR\x11denomMinNotionals*4\n" +
	"\tOrderSide\x12\x14\n" +
	"\x10Side_Unspecified\x10\x00\x12\a\n" +
	"\x03Buy\x10\x01\x12\b\n" +
	"\x04Sell\x10\x02*V\n" +
	"\x14CancellationStrategy\x12\x14\n" +
	"\x10UnspecifiedOrder\x10\x00\x12\x13\n" +
	"\x0fFromWorstToBest\x10\x01\x12\x13\n" +
	"\x0fFromBestToWorst\x10\x022\xe4h\n" +
	"\x05Query\x12\xd3\x01\n" +
	"\x15L3DerivativeOrderBook\x12:.injective.exchange.v2.QueryFullDerivativeOrderbookRequest\x1a;.injective.exchange.v2.QueryFullDerivativeOrderbookResponse\"A\x82\xd3\xe4\x93\x02;\x129/injective/exchange/v2/derivative/L3OrderBook/{market_id}\x12\xbb\x01\n" +
	"\x0fL3SpotOrderBook\x124.injective.exchange.v2.QueryFullSpotOrderbookRequest\x1a5.injective.exchange.v2.QueryFullSpotOrderbookResponse\";\x82\xd3\xe4\x93\x025\x123/injective/exchange/v2/spot/L3OrderBook/{market_id}\x12\xab\x01\n" +
	"\x13QueryExchangeParams\x121.injective.exchange.v2.QueryExchangeParamsRequest\x1a2.injective.exchange.v2.QueryExchangeParamsResponse\"-\x82\xd3\xe4\x93\x02'\x12%/injective/exchange/v2/exchangeParams\x12\xbf\x01\n" +
	"\x12SubaccountDeposits\x125.injective.exchange.v2.QuerySubaccountDepositsRequest\x1a6.injective.exchange.v2.QuerySubaccountDepositsResponse\":\x82\xd3\xe4\x93\x024\x122/injective/exchange/v2/exchange/subaccountDeposits\x12\xbb\x01\n" +
	"\x11SubaccountDeposit\x124.injective.exchange.v2.QuerySubaccountDepositRequest\x1a5.injective.exchange.v2.QuerySubaccountDepositResponse\"9\x82\xd3\xe4\x93\x023\x121/injective/exchange/v2/exchange/subaccountDeposit\x12\xb7\x01\n" +
	"\x10ExchangeBalances\x123.injective.exchange.v2.QueryExchangeBalancesRequest\x1a4.injective.exchange.v2.QueryExchangeBalancesResponse\"8\x82\xd3\xe4\x93\x022\x120/injective/exchange/v2/exchange/exchangeBalances\x12\xbd\x01\n" +
	"\x0fAggregateVolume\x122.injective.exchange.v2.QueryAggregateVolumeRequest\x1a3.injective.exchange.v2.QueryAggregateVolumeResponse\"A\x82\xd3\xe4\x93\x02;\x129/injective/exchange/v2/exchange/aggregateVolume/{account}\x12\xb7\x01\n" +
	"\x10AggregateVolumes\x123.injective.exchange.v2.QueryAggregateVolumesRequest\x1a4.injective.exchange.v2.QueryAggregateVolumesResponse\"8\x82\xd3\xe4\x93\x022\x120/injective/exchange/v2/exchange/aggregateVolumes\x12\xd7\x01\n" +
	"\x15AggregateMarketVolume\x128.injective.exchange.v2.QueryAggregateMarketVolumeRequest\x1a9.injective.exchange.v2.QueryAggregateMarketVolumeResponse\"I\x82\xd3\xe4\x93\x02C\x12A/injective/exchange/v2/exchange/aggregateMarketVolume/{market_id}\x12\xcf\x01\n" +
	"\x16AggregateMarketVolumes\x129.injective.exchange.v2.QueryAggregateMarketVolumesRequest\x1a:.injective.exchange.v2.QueryAggregateMarketVolumesResponse\">\x82\xd3\xe4\x93\x028\x126/injective/exchange/v2/exchange/aggregateMarketVolumes\x12\xb0\x01\n" +
	"\fDenomDecimal\x12/.injective.exchange.v2.QueryDenomDecimalRequest\x1a0.injective.exchange.v2.QueryDenomDecimalResponse\"=\x82\xd3\xe4\x93\x027\x125/injective/exchange/v2/exchange/denom_decimal/{denom}\x12\xac\x01\n" +
	"\rDenomDecimals\x120.injective.exchange.v2.QueryDenomDecimalsRequest\x1a1.injective.exchange.v2.QueryDenomDecimalsResponse\"6\x82\xd3\xe4\x93\x020\x12./injective/exchange/v2/exchange/denom_decimals\x12\x9b\x01\n" +
	"\vSpotMarkets\x12..injective.exchange.v2.QuerySpotMarketsRequest\x1a/.injective.exchange.v2.QuerySpotMarketsResponse\"+\x82\xd3\xe4\x93\x02%\x12#/injective/exchange/v2/spot/markets\x12\xa4\x01\n" +
	"\n" +
	"SpotMarket\x12-.injective.exchange.v2.QuerySpotMarketRequest\x1a..injective.exchange.v2.QuerySpotMarketResponse\"7\x82\xd3\xe4\x93\x021\x12//injective/exchange/v2/spot/markets/{market_id}\x12\xac\x01\n" +
	"\x0fFullSpotMarkets\x122.injective.exchange.v2.QueryFullSpotMarketsRequest\x1a3.injective.exchange.v2.QueryFullSpotMarketsResponse\"0\x82\xd3\xe4\x93\x02*\x12(/injective/exchange/v2/spot/full_markets\x12\xb4\x01\n" +
	"\x0eFullSpotMarket\x121.injective.exchange.v2.QueryFullSpotMarketRequest\x1a2.injective.exchange.v2.QueryFullSpotMarketResponse\";\x82\xd3\xe4\x93\x025\x123/injective/exchange/v2/spot/full_market/{market_id}\x12\xaf\x01\n" +
	"\rSpotOrderbook\x120.injective.exchange.v2.QuerySpotOrderbookRequest\x1a1.injective.exchange.v2.QuerySpotOrderbookResponse\"9\x82\xd3\xe4\x93\x023\x121/injective/exchange/v2/spot/orderbook/{market_id}\x12\xc5\x01\n" +
	"\x10TraderSpotOrders\x123.injective.exchange.v2.QueryTraderSpotOrdersRequest\x1a4.injective.exchange.v2.QueryTraderSpotOrdersResponse\"F\x82\xd3\xe4\x93\x02@\x12>/injective/exchange/v2/spot/orders/{market_id}/{subaccount_id}\x12\xe7\x01\n" +
	"\x18AccountAddressSpotOrders\x12;.injective.exchange.v2.QueryAccountAddressSpotOrdersRequest\x1a<.injective.exchange.v2.QueryAccountAddressSpotOrdersResponse\"P\x82\xd3\xe4\x93\x02J\x12H/injective/exchange/v2/spot/orders/{market_id}/account/{account_address}\x12\xd5\x01\n" +
	"\x12SpotOrdersByHashes\x125.injective.exchange.v2.QuerySpotOrdersByHashesRequest\x1a6.injective.exchange.v2.QuerySpotOrdersByHashesResponse\"P\x82\xd3\xe4\x93\x02J\x12H/injective/exchange/v2/spot/orders_by_hashes/{market_id}/{subaccount_id}\x12\xb4\x01\n" +
	"\x10SubaccountOrders\x123.injective.exchange.v2.QuerySubaccountOrdersRequest\x1a4.injective.exchange.v2.QuerySubaccountOrdersResponse\"5\x82\xd3\xe4\x93\x02/\x12-/injective/exchange/v2/orders/{subaccount_id}\x12\xd8\x01\n" +
	"\x19TraderSpotTransientOrders\x123.injective.exchange.v2.QueryTraderSpotOrdersRequest\x1a4.injective.exchange.v2.QueryTraderSpotOrdersResponse\"P\x82\xd3\xe4\x93\x02J\x12H/injective/exchange/v2/spot/transient_orders/{market_id}/{subaccount_id}\x12\xc6\x01\n" +
	"\x12SpotMidPriceAndTOB\x125.injective.exchange.v2.QuerySpotMidPriceAndTOBRequest\x1a6.injective.exchange.v2.QuerySpotMidPriceAndTOBResponse\"A\x82\xd3\xe4\x93\x02;\x129/injective/exchange/v2/spot/mid_price_and_tob/{market_id}\x12\xde\x01\n" +
	"\x18DerivativeMidPriceAndTOB\x12;.injective.exchange.v2.QueryDerivativeMidPriceAndTOBRequest\x1a<.injective.exchange.v2.QueryDerivativeMidPriceAndTOBResponse\"G\x82\xd3\xe4\x93\x02A\x12?/injective/exchange/v2/derivative/mid_price_and_tob/{market_id}\x12\xc7\x01\n" +
	"\x13DerivativeOrderbook\x126.injective.exchange.v2.QueryDerivativeOrderbookRequest\x1a7.injective.exchange.v2.QueryDerivativeOrderbookResponse\"?\x82\xd3\xe4\x93\x029\x127/injective/exchange/v2/derivative/orderbook/{market_id}\x12\xdd\x01\n" +
	"\x16TraderDerivativeOrders\x129.injective.exchange.v2.QueryTraderDerivativeOrdersRequest\x1a:.injective.exchange.v2.QueryTraderDerivativeOrdersResponse\"L\x82\xd3\xe4\x93\x02F\x12D/injective/exchange/v2/derivative/orders/{market_id}/{subaccount_id}\x12\xff\x01\n" +
	"\x1eAccountAddressDerivativeOrders\x12A.injective.exchange.v2.QueryAccountAddressDerivativeOrdersRequest\x1aB.injective.exchange.v2.QueryAccountAddressDerivativeOrdersResponse\"V\x82\xd3\xe4\x93\x02P\x12N/injective/exchange/v2/derivative/orders/{market_id}/account/{account_address}\x12\xed\x01\n" +
	"\x18DerivativeOrdersByHashes\x12;.injective.exchange.v2.QueryDerivativeOrdersByHashesRequest\x1a<.injective.exchange.v2.QueryDerivativeOrdersByHashesResponse\"V\x82\xd3\xe4\x93\x02P\x12N/injective/exchange/v2/derivative/orders_by_hashes/{market_id}/{subaccount_id}\x12\xf0\x01\n" +
	"\x1fTraderDerivativeTransientOrders\x129.injective.exchange.v2.QueryTraderDerivativeOrdersRequest\x1a:.injective.exchange.v2.QueryTraderDerivativeOrdersResponse\"V\x82\xd3\xe4\x93\x02P\x12N/injective/exchange/v2/derivative/transient_orders/{market_id}/{subaccount_id}\x12\xb3\x01\n" +
	"\x11DerivativeMarkets\x124.injective.exchange.v2.QueryDerivativeMarketsRequest\x1a5.injective.exchange.v2.QueryDerivativeMarketsResponse\"1\x82\xd3\xe4\x93\x02+\x12)/injective/exchange/v2/derivative/markets\x12\xbc\x01\n" +
	"\x10DerivativeMarket\x123.injective.exchange.v2.QueryDerivativeMarketRequest\x1a4.injective.exchange.v2.QueryDerivativeMarketResponse\"=\x82\xd3\xe4\x93\x027\x125/injective/exchange/v2/derivative/markets/{market_id}\x12\xd8\x01\n" +
	"\x17DerivativeMarketAddress\x12:.injective.exchange.v2.QueryDerivativeMarketAddressRequest\x1a;.injective.exchange.v2.QueryDerivativeMarketAddressResponse\"D\x82\xd3\xe4\x93\x02>\x12</injective/exchange/v2/derivative/market_address/{market_id}\x12\xc2\x01\n" +
	"\x14SubaccountTradeNonce\x127.injective.exchange.v2.QuerySubaccountTradeNonceRequest\x1a8.injective.exchange.v2.QuerySubaccountTradeNonceResponse\"7\x82\xd3\xe4\x93\x021\x12//injective/exchange/v2/exchange/{subaccount_id}\x12\xa3\x01\n" +
	"\x13ExchangeModuleState\x12..injective.exchange.v2.QueryModuleStateRequest\x1a/.injective.exchange.v2.QueryModuleStateResponse\"+\x82\xd3\xe4\x93\x02%\x12#/injective/exchange/v2/module_state\x12\x92\x01\n" +
	"\tPositions\x12,.injective.exchange.v2.QueryPositionsRequest\x1a-.injective.exchange.v2.QueryPositionsResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /injective/exchange/v2/positions\x12\xb6\x01\n" +
	"\x11PositionsInMarket\x124.injective.exchange.v2.QueryPositionsInMarketRequest\x1a5.injective.exchange.v2.QueryPositionsInMarketResponse\"4\x82\xd3\xe4\x93\x02.\x12,/injective/exchange/v2/positions/{market_id}\x12\xc0\x01\n" +
	"\x13SubaccountPositions\x126.injective.exchange.v2.QuerySubaccountPositionsRequest\x1a7.injective.exchange.v2.QuerySubaccountPositionsResponse\"8\x82\xd3\xe4\x93\x022\x120/injective/exchange/v2/positions/{subaccount_id}\x12\xe1\x01\n" +
	"\x1aSubaccountPositionInMarket\x12=.injective.exchange.v2.QuerySubaccountPositionInMarketRequest\x1a>.injective.exchange.v2.QuerySubaccountPositionInMarketResponse\"D\x82\xd3\xe4\x93\x02>\x12</injective/exchange/v2/positions/{subaccount_id}/{market_id}\x12\x86\x02\n" +
	"#SubaccountEffectivePositionInMarket\x12F.injective.exchange.v2.QuerySubaccountEffectivePositionInMarketRequest\x1aG.injective.exchange.v2.QuerySubaccountEffectivePositionInMarketResponse\"N\x82\xd3\xe4\x93\x02H\x12F/injective/exchange/v2/effective_positions/{subaccount_id}/{market_id}\x12\xc8\x01\n" +
	"\x13PerpetualMarketInfo\x126.injective.exchange.v2.QueryPerpetualMarketInfoRequest\x1a7.injective.exchange.v2.QueryPerpetualMarketInfoResponse\"@\x82\xd3\xe4\x93\x02:\x128/injective/exchange/v2/perpetual_market_info/{market_id}\x12\xd1\x01\n" +
	"\x17ExpiryFuturesMarketInfo\x12:.injective.exchange.v2.QueryExpiryFuturesMarketInfoRequest\x1a;.injective.exchange.v2.QueryExpiryFuturesMarketInfoResponse\"=\x82\xd3\xe4\x93\x027\x125/injective/exchange/v2/expiry_market_info/{market_id}\x12\xd4\x01\n" +
	"\x16PerpetualMarketFunding\x129.injective.exchange.v2.QueryPerpetualMarketFundingRequest\x1a:.injective.exchange.v2.QueryPerpetualMarketFundingResponse\"C\x82\xd3\xe4\x93\x02=\x12;/injective/exchange/v2/perpetual_market_funding/{market_id}\x12\xd1\x01\n" +
	"\x17SubaccountOrderMetadata\x12:.injective.exchange.v2.QuerySubaccountOrderMetadataRequest\x1a;.injective.exchange.v2.QuerySubaccountOrderMetadataResponse\"=\x82\xd3\xe4\x93\x027\x125/injective/exchange/v2/order_metadata/{subaccount_id}\x12\xb4\x01\n" +
	"\x11TradeRewardPoints\x124.injective.exchange.v2.QueryTradeRewardPointsRequest\x1a5.injective.exchange.v2.QueryTradeRewardPointsResponse\"2\x82\xd3\xe4\x93\x02,\x12*/injective/exchange/v2/trade_reward_points\x12\xc3\x01\n" +
	"\x18PendingTradeRewardPoints\x124.injective.exchange.v2.QueryTradeRewardPointsRequest\x1a5.injective.exchange.v2.QueryTradeRewardPointsResponse\":\x82\xd3\xe4\x93\x024\x122/injective/exchange/v2/pending_trade_reward_points\x12\xbc\x01\n" +
	"\x13TradeRewardCampaign\x126.injective.exchange.v2.QueryTradeRewardCampaignRequest\x1a7.injective.exchange.v2.QueryTradeRewardCampaignResponse\"4\x82\xd3\xe4\x93\x02.\x12,/injective/exchange/v2/trade_reward_campaign\x12\xd3\x01\n" +
	"\x16FeeDiscountAccountInfo\x129.injective.exchange.v2.QueryFeeDiscountAccountInfoRequest\x1a:.injective.exchange.v2.QueryFeeDiscountAccountInfoResponse\"B\x82\xd3\xe4\x93\x02<\x12:/injective/exchange/v2/fee_discount_account_info/{account}\x12\xbc\x01\n" +
	"\x13FeeDiscountSchedule\x126.injective.exchange.v2.QueryFeeDiscountScheduleRequest\x1a7.injective.exchange.v2.QueryFeeDiscountScheduleResponse\"4\x82\xd3\xe4\x93\x02.\x12,/injective/exchange/v2/fee_discount_schedule\x12\xc1\x01\n" +
	"\x11BalanceMismatches\x124.injective.exchange.v2.QueryBalanceMismatchesRequest\x1a5.injective.exchange.v2.QueryBalanceMismatchesResponse\"?\x82\xd3\xe4\x93\x029\x127/injective/exchange/v2/balance_mismatches/{dust_factor}\x12\xce\x01\n" +
	"\x17BalanceWithBalanceHolds\x12:.injective.exchange.v2.QueryBalanceWithBalanceHoldsRequest\x1a;.injective.exchange.v2.QueryBalanceWithBalanceHoldsResponse\":\x82\xd3\xe4\x93\x024\x122/injective/exchange/v2/balances_with_balance_holds\x12\xd0\x01\n" +
	"\x19FeeDiscountTierStatistics\x12<.injective.exchange.v2.QueryFeeDiscountTierStatisticsRequest\x1a=.injective.exchange.v2.QueryFeeDiscountTierStatisticsResponse\"6\x82\xd3\xe4\x93\x020\x12./injective/exchange/v2/fee_discount_tier_stats\x12\x9e\x01\n" +
	"\x0eMitoVaultInfos\x12,.injective.exchange.v2.MitoVaultInfosRequest\x1a-.injective.exchange.v2.MitoVaultInfosResponse\"/\x82\xd3\xe4\x93\x02)\x12'/injective/exchange/v2/mito_vault_infos\x12\xc5\x01\n" +
	"\x16QueryMarketIDFromVault\x124.injective.exchange.v2.QueryMarketIDFromVaultRequest\x1a5.injective.exchange.v2.QueryMarketIDFromVaultResponse\">\x82\xd3\xe4\x93\x028\x126/injective/exchange/v2/vault_market_id/{vault_address}\x12\xc8\x01\n" +
	"\x16HistoricalTradeRecords\x129.injective.exchange.v2.QueryHistoricalTradeRecordsRequest\x1a:.injective.exchange.v2.QueryHistoricalTradeRecordsResponse\"7\x82\xd3\xe4\x93\x021\x12//injective/exchange/v2/historical_trade_records\x12\xc8\x01\n" +
	"\x13IsOptedOutOfRewards\x126.injective.exchange.v2.QueryIsOptedOutOfRewardsRequest\x1a7.injective.exchange.v2.QueryIsOptedOutOfRewardsResponse\"@\x82\xd3\xe4\x93\x02:\x128/injective/exchange/v2/is_opted_out_of_rewards/{account}\x12\xd6\x01\n" +
	"\x19OptedOutOfRewardsAccounts\x12<.injective.exchange.v2.QueryOptedOutOfRewardsAccountsRequest\x1a=.injective.exchange.v2.QueryOptedOutOfRewardsAccountsResponse\"<\x82\xd3\xe4\x93\x026\x124/injective/exchange/v2/opted_out_of_rewards_accounts\x12\xbb\x01\n" +
	"\x10MarketVolatility\x123.injective.exchange.v2.QueryMarketVolatilityRequest\x1a4.injective.exchange.v2.QueryMarketVolatilityResponse\"<\x82\xd3\xe4\x93\x026\x124/injective/exchange/v2/market_volatility/{market_id}\x12\xb2\x01\n" +
	"\x14BinaryOptionsMarkets\x120.injective.exchange.v2.QueryBinaryMarketsRequest\x1a1.injective.exchange.v2.QueryBinaryMarketsResponse\"5\x82\xd3\xe4\x93\x02/\x12-/injective/exchange/v2/binary_options/markets\x12\x8a\x02\n" +
	"!TraderDerivativeConditionalOrders\x12D.injective.exchange.v2.QueryTraderDerivativeConditionalOrdersRequest\x1aE.injective.exchange.v2.QueryTraderDerivativeConditionalOrdersResponse\"X\x82\xd3\xe4\x93\x02R\x12P/injective/exchange/v2/derivative/orders/conditional/{market_id}/{subaccount_id}\x12\xef\x01\n" +
	"\"MarketAtomicExecutionFeeMultiplier\x12E.injective.exchange.v2.QueryMarketAtomicExecutionFeeMultiplierRequest\x1aF.injective.exchange.v2.QueryMarketAtomicExecutionFeeMultiplierResponse\":\x82\xd3\xe4\x93\x024\x122/injective/exchange/v2/atomic_order_fee_multiplier\x12\xba\x01\n" +
	"\x10ActiveStakeGrant\x123.injective.exchange.v2.QueryActiveStakeGrantRequest\x1a4.injective.exchange.v2.QueryActiveStakeGrantResponse\";\x82\xd3\xe4\x93\x025\x123/injective/exchange/v2/active_stake_grant/{grantee}\x12\xcb\x01\n" +
	"\x12GrantAuthorization\x125.injective.exchange.v2.QueryGrantAuthorizationRequest\x1a6.injective.exchange.v2.QueryGrantAuthorizationResponse\"F\x82\xd3\xe4\x93\x02@\x12>/injective/exchange/v2/grant_authorization/{granter}/{grantee}\x12\xc5\x01\n" +
	"\x13GrantAuthorizations\x126.injective.exchange.v2.QueryGrantAuthorizationsRequest\x1a7.injective.exchange.v2.QueryGrantAuthorizationsResponse\"=\x82\xd3\xe4\x93\x027\x125/injective/exchange/v2/grant_authorizations/{granter}\x12\xaf\x01\n" +
	"\rMarketBalance\x120.injective.exchange.v2.QueryMarketBalanceRequest\x1a1.injective.exchange.v2.QueryMarketBalanceResponse\"9\x82\xd3\xe4\x93\x023\x121/injective/exchange/v2/market_balance/{market_id}\x12\xa7\x01\n" +
	"\x0eMarketBalances\x121.injective.exchange.v2.QueryMarketBalancesRequest\x1a2.injective.exchange.v2.QueryMarketBalancesResponse\".\x82\xd3\xe4\x93\x02(\x12&/injective/exchange/v2/market_balances\x12\xb8\x01\n" +
	"\x10DenomMinNotional\x123.injective.exchange.v2.QueryDenomMinNotionalRequest\x1a4.injective.exchange.v2.QueryDenomMinNotionalResponse\"9\x82\xd3\xe4\x93\x023\x121/injective/exchange/v2/denom_min_notional/{denom}\x12\xb4\x01\n" +
	"\x11DenomMinNotionals\x124.injective.exchange.v2.QueryDenomMinNotionalsRequest\x1a5.injective.exchange.v2.QueryDenomMinNotionalsResponse\"2\x82\xd3\xe4\x93\x02,\x12*/injective/exchange/v2/denom_min_notionalsBSZQgithub.com/InjectiveLabs/injective-core/injective-chain/modules/exchange/types/v2b\x06proto3"

var (
	file_injective_exchange_v2_query_proto_rawDescOnce sync.Once
	file_injective_exchange_v2_query_proto_rawDescData []byte
)

func file_injective_exchange_v2_query_proto_rawDescGZIP() []byte {
	file_injective_exchange_v2_query_proto_rawDescOnce.Do(func() {
		file_injective_exchange_v2_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_injective_exchange_v2_query_proto_rawDesc), len(file_injective_exchange_v2_query_proto_rawDesc)))
	})
	return file_injective_exchange_v2_query_proto_rawDescData
}

var file_injective_exchange_v2_query_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_injective_exchange_v2_query_proto_msgTypes = make([]protoimpl.MessageInfo, 147)
var file_injective_exchange_v2_query_proto_goTypes = []any{
	(OrderSide)(0),                                               // 0: injective.exchange.v2.OrderSide
	(CancellationStrategy)(0),                                    // 1: injective.exchange.v2.CancellationStrategy
	(*Subaccount)(nil),                                           // 2: injective.exchange.v2.Subaccount
	(*QuerySubaccountOrdersRequest)(nil),                         // 3: injective.exchange.v2.QuerySubaccountOrdersRequest
	(*QuerySubaccountOrdersResponse)(nil),                        // 4: injective.exchange.v2.QuerySubaccountOrdersResponse
	(*SubaccountOrderbookMetadataWithMarket)(nil),                // 5: injective.exchange.v2.SubaccountOrderbookMetadataWithMarket
	(*QueryExchangeParamsRequest)(nil),                           // 6: injective.exchange.v2.QueryExchangeParamsRequest
	(*QueryExchangeParamsResponse)(nil),                          // 7: injective.exchange.v2.QueryExchangeParamsResponse
	(*QuerySubaccountDepositsRequest)(nil),                       // 8: injective.exchange.v2.QuerySubaccountDepositsRequest
	(*QuerySubaccountDepositsResponse)(nil),                      // 9: injective.exchange.v2.QuerySubaccountDepositsResponse
	(*QueryExchangeBalancesRequest)(nil),                         // 10: injective.exchange.v2.QueryExchangeBalancesRequest
	(*QueryExchangeBalancesResponse)(nil),                        // 11: injective.exchange.v2.QueryExchangeBalancesResponse
	(*QueryAggregateVolumeRequest)(nil),                          // 12: injective.exchange.v2.QueryAggregateVolumeRequest
	(*QueryAggregateVolumeResponse)(nil),                         // 13: injective.exchange.v2.QueryAggregateVolumeResponse
	(*QueryAggregateVolumesRequest)(nil),                         // 14: injective.exchange.v2.QueryAggregateVolumesRequest
	(*QueryAggregateVolumesResponse)(nil),                        // 15: injective.exchange.v2.QueryAggregateVolumesResponse
	(*QueryAggregateMarketVolumeRequest)(nil),                    // 16: injective.exchange.v2.QueryAggregateMarketVolumeRequest
	(*QueryAggregateMarketVolumeResponse)(nil),                   // 17: injective.exchange.v2.QueryAggregateMarketVolumeResponse
	(*QueryDenomDecimalRequest)(nil),                             // 18: injective.exchange.v2.QueryDenomDecimalRequest
	(*QueryDenomDecimalResponse)(nil),                            // 19: injective.exchange.v2.QueryDenomDecimalResponse
	(*QueryDenomDecimalsRequest)(nil),                            // 20: injective.exchange.v2.QueryDenomDecimalsRequest
	(*QueryDenomDecimalsResponse)(nil),                           // 21: injective.exchange.v2.QueryDenomDecimalsResponse
	(*QueryAggregateMarketVolumesRequest)(nil),                   // 22: injective.exchange.v2.QueryAggregateMarketVolumesRequest
	(*QueryAggregateMarketVolumesResponse)(nil),                  // 23: injective.exchange.v2.QueryAggregateMarketVolumesResponse
	(*QuerySubaccountDepositRequest)(nil),                        // 24: injective.exchange.v2.QuerySubaccountDepositRequest
	(*QuerySubaccountDepositResponse)(nil),                       // 25: injective.exchange.v2.QuerySubaccountDepositResponse
	(*QuerySpotMarketsRequest)(nil),                              // 26: injective.exchange.v2.QuerySpotMarketsRequest
	(*QuerySpotMarketsResponse)(nil),                             // 27: injective.exchange.v2.QuerySpotMarketsResponse
	(*QuerySpotMarketRequest)(nil),                               // 28: injective.exchange.v2.QuerySpotMarketRequest
	(*QuerySpotMarketResponse)(nil),                              // 29: injective.exchange.v2.QuerySpotMarketResponse
	(*QuerySpotOrderbookRequest)(nil),                            // 30: injective.exchange.v2.QuerySpotOrderbookRequest
	(*QuerySpotOrderbookResponse)(nil),                           // 31: injective.exchange.v2.QuerySpotOrderbookResponse
	(*FullSpotMarket)(nil),                                       // 32: injective.exchange.v2.FullSpotMarket
	(*QueryFullSpotMarketsRequest)(nil),                          // 33: injective.exchange.v2.QueryFullSpotMarketsRequest
	(*QueryFullSpotMarketsResponse)(nil),                         // 34: injective.exchange.v2.QueryFullSpotMarketsResponse
	(*QueryFullSpotMarketRequest)(nil),                           // 35: injective.exchange.v2.QueryFullSpotMarketRequest
	(*QueryFullSpotMarketResponse)(nil),                          // 36: injective.exchange.v2.QueryFullSpotMarketResponse
	(*QuerySpotOrdersByHashesRequest)(nil),                       // 37: injective.exchange.v2.QuerySpotOrdersByHashesRequest
	(*QuerySpotOrdersByHashesResponse)(nil),                      // 38: injective.exchange.v2.QuerySpotOrdersByHashesResponse
	(*QueryTraderSpotOrdersRequest)(nil),                         // 39: injective.exchange.v2.QueryTraderSpotOrdersRequest
	(*QueryAccountAddressSpotOrdersRequest)(nil),                 // 40: injective.exchange.v2.QueryAccountAddressSpotOrdersRequest
	(*TrimmedSpotLimitOrder)(nil),                                // 41: injective.exchange.v2.TrimmedSpotLimitOrder
	(*QueryTraderSpotOrdersResponse)(nil),                        // 42: injective.exchange.v2.QueryTraderSpotOrdersResponse
	(*QueryAccountAddressSpotOrdersResponse)(nil),                // 43: injective.exchange.v2.QueryAccountAddressSpotOrdersResponse
	(*QuerySpotMidPriceAndTOBRequest)(nil),                       // 44: injective.exchange.v2.QuerySpotMidPriceAndTOBRequest
	(*QuerySpotMidPriceAndTOBResponse)(nil),                      // 45: injective.exchange.v2.QuerySpotMidPriceAndTOBResponse
	(*QueryDerivativeMidPriceAndTOBRequest)(nil),                 // 46: injective.exchange.v2.QueryDerivativeMidPriceAndTOBRequest
	(*QueryDerivativeMidPriceAndTOBResponse)(nil),                // 47: injective.exchange.v2.QueryDerivativeMidPriceAndTOBResponse
	(*QueryDerivativeOrderbookRequest)(nil),                      // 48: injective.exchange.v2.QueryDerivativeOrderbookRequest
	(*QueryDerivativeOrderbookResponse)(nil),                     // 49: injective.exchange.v2.QueryDerivativeOrderbookResponse
	(*QueryTraderSpotOrdersToCancelUpToAmountRequest)(nil),       // 50: injective.exchange.v2.QueryTraderSpotOrdersToCancelUpToAmountRequest
	(*QueryTraderDerivativeOrdersToCancelUpToAmountRequest)(nil), // 51: injective.exchange.v2.QueryTraderDerivativeOrdersToCancelUpToAmountRequest
	(*QueryTraderDerivativeOrdersRequest)(nil),                   // 52: injective.exchange.v2.QueryTraderDerivativeOrdersRequest
	(*QueryAccountAddressDerivativeOrdersRequest)(nil),           // 53: injective.exchange.v2.QueryAccountAddressDerivativeOrdersRequest
	(*TrimmedDerivativeLimitOrder)(nil),                          // 54: injective.exchange.v2.TrimmedDerivativeLimitOrder
	(*QueryTraderDerivativeOrdersResponse)(nil),                  // 55: injective.exchange.v2.QueryTraderDerivativeOrdersResponse
	(*QueryAccountAddressDerivativeOrdersResponse)(nil),          // 56: injective.exchange.v2.QueryAccountAddressDerivativeOrdersResponse
	(*QueryDerivativeOrdersByHashesRequest)(nil),                 // 57: injective.exchange.v2.QueryDerivativeOrdersByHashesRequest
	(*QueryDerivativeOrdersByHashesResponse)(nil),                // 58: injective.exchange.v2.QueryDerivativeOrdersByHashesResponse
	(*QueryDerivativeMarketsRequest)(nil),                        // 59: injective.exchange.v2.QueryDerivativeMarketsRequest
	(*PriceLevel)(nil),                                           // 60: injective.exchange.v2.PriceLevel
	(*PerpetualMarketState)(nil),                                 // 61: injective.exchange.v2.PerpetualMarketState
	(*FullDerivativeMarket)(nil),                                 // 62: injective.exchange.v2.FullDerivativeMarket
	(*QueryDerivativeMarketsResponse)(nil),                       // 63: injective.exchange.v2.QueryDerivativeMarketsResponse
	(*QueryDerivativeMarketRequest)(nil),                         // 64: injective.exchange.v2.QueryDerivativeMarketRequest
	(*QueryDerivativeMarketResponse)(nil),                        // 65: injective.exchange.v2.QueryDerivativeMarketResponse
	(*QueryDerivativeMarketAddressRequest)(nil),                  // 66: injective.exchange.v2.QueryDerivativeMarketAddressRequest
	(*QueryDerivativeMarketAddressResponse)(nil),                 // 67: injective.exchange.v2.QueryDerivativeMarketAddressResponse
	(*QuerySubaccountTradeNonceRequest)(nil),                     // 68: injective.exchange.v2.QuerySubaccountTradeNonceRequest
	(*QueryPositionsInMarketRequest)(nil),                        // 69: injective.exchange.v2.QueryPositionsInMarketRequest
	(*QueryPositionsInMarketResponse)(nil),                       // 70: injective.exchange.v2.QueryPositionsInMarketResponse
	(*QuerySubaccountPositionsRequest)(nil),                      // 71: injective.exchange.v2.QuerySubaccountPositionsRequest
	(*QuerySubaccountPositionInMarketRequest)(nil),               // 72: injective.exchange.v2.QuerySubaccountPositionInMarketRequest
	(*QuerySubaccountEffectivePositionInMarketRequest)(nil),      // 73: injective.exchange.v2.QuerySubaccountEffectivePositionInMarketRequest
	(*QuerySubaccountOrderMetadataRequest)(nil),                  // 74: injective.exchange.v2.QuerySubaccountOrderMetadataRequest
	(*QuerySubaccountPositionsResponse)(nil),                     // 75: injective.exchange.v2.QuerySubaccountPositionsResponse
	(*QuerySubaccountPositionInMarketResponse)(nil),              // 76: injective.exchange.v2.QuerySubaccountPositionInMarketResponse
	(*EffectivePosition)(nil),                                    // 77: injective.exchange.v2.EffectivePosition
	(*QuerySubaccountEffectivePositionInMarketResponse)(nil),     // 78: injective.exchange.v2.QuerySubaccountEffectivePositionInMarketResponse
	(*QueryPerpetualMarketInfoRequest)(nil),                      // 79: injective.exchange.v2.QueryPerpetualMarketInfoRequest
	(*QueryPerpetualMarketInfoResponse)(nil),                     // 80: injective.exchange.v2.QueryPerpetualMarketInfoResponse
	(*QueryExpiryFuturesMarketInfoRequest)(nil),                  // 81: injective.exchange.v2.QueryExpiryFuturesMarketInfoRequest
	(*QueryExpiryFuturesMarketInfoResponse)(nil),                 // 82: injective.exchange.v2.QueryExpiryFuturesMarketInfoResponse
	(*QueryPerpetualMarketFundingRequest)(nil),                   // 83: injective.exchange.v2.QueryPerpetualMarketFundingRequest
	(*QueryPerpetualMarketFundingResponse)(nil),                  // 84: injective.exchange.v2.QueryPerpetualMarketFundingResponse
	(*QuerySubaccountOrderMetadataResponse)(nil),                 // 85: injective.exchange.v2.QuerySubaccountOrderMetadataResponse
	(*QuerySubaccountTradeNonceResponse)(nil),                    // 86: injective.exchange.v2.QuerySubaccountTradeNonceResponse
	(*QueryModuleStateRequest)(nil),                              // 87: injective.exchange.v2.QueryModuleStateRequest
	(*QueryModuleStateResponse)(nil),                             // 88: injective.exchange.v2.QueryModuleStateResponse
	(*QueryPositionsRequest)(nil),                                // 89: injective.exchange.v2.QueryPositionsRequest
	(*QueryPositionsResponse)(nil),                               // 90: injective.exchange.v2.QueryPositionsResponse
	(*QueryTradeRewardPointsRequest)(nil),                        // 91: injective.exchange.v2.QueryTradeRewardPointsRequest
	(*QueryTradeRewardPointsResponse)(nil),                       // 92: injective.exchange.v2.QueryTradeRewardPointsResponse
	(*QueryTradeRewardCampaignRequest)(nil),                      // 93: injective.exchange.v2.QueryTradeRewardCampaignRequest
	(*QueryTradeRewardCampaignResponse)(nil),                     // 94: injective.exchange.v2.QueryTradeRewardCampaignResponse
	(*QueryIsOptedOutOfRewardsRequest)(nil),                      // 95: injective.exchange.v2.QueryIsOptedOutOfRewardsRequest
	(*QueryIsOptedOutOfRewardsResponse)(nil),                     // 96: injective.exchange.v2.QueryIsOptedOutOfRewardsResponse
	(*QueryOptedOutOfRewardsAccountsRequest)(nil),                // 97: injective.exchange.v2.QueryOptedOutOfRewardsAccountsRequest
	(*QueryOptedOutOfRewardsAccountsResponse)(nil),               // 98: injective.exchange.v2.QueryOptedOutOfRewardsAccountsResponse
	(*QueryFeeDiscountAccountInfoRequest)(nil),                   // 99: injective.exchange.v2.QueryFeeDiscountAccountInfoRequest
	(*QueryFeeDiscountAccountInfoResponse)(nil),                  // 100: injective.exchange.v2.QueryFeeDiscountAccountInfoResponse
	(*QueryFeeDiscountScheduleRequest)(nil),                      // 101: injective.exchange.v2.QueryFeeDiscountScheduleRequest
	(*QueryFeeDiscountScheduleResponse)(nil),                     // 102: injective.exchange.v2.QueryFeeDiscountScheduleResponse
	(*QueryBalanceMismatchesRequest)(nil),                        // 103: injective.exchange.v2.QueryBalanceMismatchesRequest
	(*BalanceMismatch)(nil),                                      // 104: injective.exchange.v2.BalanceMismatch
	(*QueryBalanceMismatchesResponse)(nil),                       // 105: injective.exchange.v2.QueryBalanceMismatchesResponse
	(*QueryBalanceWithBalanceHoldsRequest)(nil),                  // 106: injective.exchange.v2.QueryBalanceWithBalanceHoldsRequest
	(*BalanceWithMarginHold)(nil),                                // 107: injective.exchange.v2.BalanceWithMarginHold
	(*QueryBalanceWithBalanceHoldsResponse)(nil),                 // 108: injective.exchange.v2.QueryBalanceWithBalanceHoldsResponse
	(*QueryFeeDiscountTierStatisticsRequest)(nil),                // 109: injective.exchange.v2.QueryFeeDiscountTierStatisticsRequest
	(*TierStatistic)(nil),                                        // 110: injective.exchange.v2.TierStatistic
	(*QueryFeeDiscountTierStatisticsResponse)(nil),               // 111: injective.exchange.v2.QueryFeeDiscountTierStatisticsResponse
	(*MitoVaultInfosRequest)(nil),                                // 112: injective.exchange.v2.MitoVaultInfosRequest
	(*MitoVaultInfosResponse)(nil),                               // 113: injective.exchange.v2.MitoVaultInfosResponse
	(*QueryMarketIDFromVaultRequest)(nil),                        // 114: injective.exchange.v2.QueryMarketIDFromVaultRequest
	(*QueryMarketIDFromVaultResponse)(nil),                       // 115: injective.exchange.v2.QueryMarketIDFromVaultResponse
	(*QueryHistoricalTradeRecordsRequest)(nil),                   // 116: injective.exchange.v2.QueryHistoricalTradeRecordsRequest
	(*QueryHistoricalTradeRecordsResponse)(nil),                  // 117: injective.exchange.v2.QueryHistoricalTradeRecordsResponse
	(*TradeHistoryOptions)(nil),                                  // 118: injective.exchange.v2.TradeHistoryOptions
	(*QueryMarketVolatilityRequest)(nil),                         // 119: injective.exchange.v2.QueryMarketVolatilityRequest
	(*QueryMarketVolatilityResponse)(nil),                        // 120: injective.exchange.v2.QueryMarketVolatilityResponse
	(*QueryBinaryMarketsRequest)(nil),                            // 121: injective.exchange.v2.QueryBinaryMarketsRequest
	(*QueryBinaryMarketsResponse)(nil),                           // 122: injective.exchange.v2.QueryBinaryMarketsResponse
	(*QueryTraderDerivativeConditionalOrdersRequest)(nil),        // 123: injective.exchange.v2.QueryTraderDerivativeConditionalOrdersRequest
	(*TrimmedDerivativeConditionalOrder)(nil),                    // 124: injective.exchange.v2.TrimmedDerivativeConditionalOrder
	(*QueryTraderDerivativeConditionalOrdersResponse)(nil),       // 125: injective.exchange.v2.QueryTraderDerivativeConditionalOrdersResponse
	(*QueryFullSpotOrderbookRequest)(nil),                        // 126: injective.exchange.v2.QueryFullSpotOrderbookRequest
	(*QueryFullSpotOrderbookResponse)(nil),                       // 127: injective.exchange.v2.QueryFullSpotOrderbookResponse
	(*QueryFullDerivativeOrderbookRequest)(nil),                  // 128: injective.exchange.v2.QueryFullDerivativeOrderbookRequest
	(*QueryFullDerivativeOrderbookResponse)(nil),                 // 129: injective.exchange.v2.QueryFullDerivativeOrderbookResponse
	(*TrimmedLimitOrder)(nil),                                    // 130: injective.exchange.v2.TrimmedLimitOrder
	(*QueryMarketAtomicExecutionFeeMultiplierRequest)(nil),       // 131: injective.exchange.v2.QueryMarketAtomicExecutionFeeMultiplierRequest
	(*QueryMarketAtomicExecutionFeeMultiplierResponse)(nil),      // 132: injective.exchange.v2.QueryMarketAtomicExecutionFeeMultiplierResponse
	(*QueryActiveStakeGrantRequest)(nil),                         // 133: injective.exchange.v2.QueryActiveStakeGrantRequest
	(*QueryActiveStakeGrantResponse)(nil),                        // 134: injective.exchange.v2.QueryActiveStakeGrantResponse
	(*QueryGrantAuthorizationRequest)(nil),                       // 135: injective.exchange.v2.QueryGrantAuthorizationRequest
	(*QueryGrantAuthorizationResponse)(nil),                      // 136: injective.exchange.v2.QueryGrantAuthorizationResponse
	(*QueryGrantAuthorizationsRequest)(nil),                      // 137: injective.exchange.v2.QueryGrantAuthorizationsRequest
	(*QueryGrantAuthorizationsResponse)(nil),                     // 138: injective.exchange.v2.QueryGrantAuthorizationsResponse
	(*QueryMarketBalanceRequest)(nil),                            // 139: injective.exchange.v2.QueryMarketBalanceRequest
	(*QueryMarketBalanceResponse)(nil),                           // 140: injective.exchange.v2.QueryMarketBalanceResponse
	(*QueryMarketBalancesRequest)(nil),                           // 141: injective.exchange.v2.QueryMarketBalancesRequest
	(*QueryMarketBalancesResponse)(nil),                          // 142: injective.exchange.v2.QueryMarketBalancesResponse
	(*MarketBalance)(nil),                                        // 143: injective.exchange.v2.MarketBalance
	(*QueryDenomMinNotionalRequest)(nil),                         // 144: injective.exchange.v2.QueryDenomMinNotionalRequest
	(*QueryDenomMinNotionalResponse)(nil),                        // 145: injective.exchange.v2.QueryDenomMinNotionalResponse
	(*QueryDenomMinNotionalsRequest)(nil),                        // 146: injective.exchange.v2.QueryDenomMinNotionalsRequest
	(*QueryDenomMinNotionalsResponse)(nil),                       // 147: injective.exchange.v2.QueryDenomMinNotionalsResponse
	nil,                                                          // 148: injective.exchange.v2.QuerySubaccountDepositsResponse.DepositsEntry
	(*SubaccountOrderData)(nil),                                  // 149: injective.exchange.v2.SubaccountOrderData
	(*SubaccountOrderbookMetadata)(nil),                          // 150: injective.exchange.v2.SubaccountOrderbookMetadata
	(*Params)(nil),                                               // 151: injective.exchange.v2.Params
	(*Balance)(nil),                                              // 152: injective.exchange.v2.Balance
	(*MarketVolume)(nil),                                         // 153: injective.exchange.v2.MarketVolume
	(*AggregateAccountVolumeRecord)(nil),                         // 154: injective.exchange.v2.AggregateAccountVolumeRecord
	(*VolumeRecord)(nil),                                         // 155: injective.exchange.v2.VolumeRecord
	(*DenomDecimals)(nil),                                        // 156: injective.exchange.v2.DenomDecimals
	(*Deposit)(nil),                                              // 157: injective.exchange.v2.Deposit
	(*SpotMarket)(nil),                                           // 158: injective.exchange.v2.SpotMarket
	(*Level)(nil),                                                // 159: injective.exchange.v2.Level
	(*MidPriceAndTOB)(nil),                                       // 160: injective.exchange.v2.MidPriceAndTOB
	(*PerpetualMarketInfo)(nil),                                  // 161: injective.exchange.v2.PerpetualMarketInfo
	(*PerpetualMarketFunding)(nil),                               // 162: injective.exchange.v2.PerpetualMarketFunding
	(*DerivativeMarket)(nil),                                     // 163: injective.exchange.v2.DerivativeMarket
	(*ExpiryFuturesMarketInfo)(nil),                              // 164: injective.exchange.v2.ExpiryFuturesMarketInfo
	(*DerivativePosition)(nil),                                   // 165: injective.exchange.v2.DerivativePosition
	(*Position)(nil),                                             // 166: injective.exchange.v2.Position
	(*GenesisState)(nil),                                         // 167: injective.exchange.v2.GenesisState
	(*TradingRewardCampaignInfo)(nil),                            // 168: injective.exchange.v2.TradingRewardCampaignInfo
	(*CampaignRewardPool)(nil),                                   // 169: injective.exchange.v2.CampaignRewardPool
	(*FeeDiscountTierInfo)(nil),                                  // 170: injective.exchange.v2.FeeDiscountTierInfo
	(*FeeDiscountTierTTL)(nil),                                   // 171: injective.exchange.v2.FeeDiscountTierTTL
	(*FeeDiscountSchedule)(nil),                                  // 172: injective.exchange.v2.FeeDiscountSchedule
	(*TradeRecords)(nil),                                         // 173: injective.exchange.v2.TradeRecords
	(*types.MetadataStatistics)(nil),                             // 174: injective.oracle.v1beta1.MetadataStatistics
	(*TradeRecord)(nil),                                          // 175: injective.exchange.v2.TradeRecord
	(*BinaryOptionsMarket)(nil),                                  // 176: injective.exchange.v2.BinaryOptionsMarket
	(*ActiveGrant)(nil),                                          // 177: injective.exchange.v2.ActiveGrant
	(*EffectiveGrant)(nil),                                       // 178: injective.exchange.v2.EffectiveGrant
	(*GrantAuthorization)(nil),                                   // 179: injective.exchange.v2.GrantAuthorization
	(*DenomMinNotional)(nil),                                     // 180: injective.exchange.v2.DenomMinNotional
}
var file_injective_exchange_v2_query_proto_depIdxs = []int32{
	149, // 0: injective.exchange.v2.QuerySubaccountOrdersResponse.buy_orders:type_name -> injective.exchange.v2.SubaccountOrderData
	149, // 1: injective.exchange.v2.QuerySubaccountOrdersResponse.sell_orders:type_name -> injective.exchange.v2.SubaccountOrderData
	150, // 2: injective.exchange.v2.SubaccountOrderbookMetadataWithMarket.metadata:type_name -> injective.exchange.v2.SubaccountOrderbookMetadata
	151, // 3: injective.exchange.v2.QueryExchangeParamsResponse.params:type_name -> injective.exchange.v2.Params
	2,   // 4: injective.exchange.v2.QuerySubaccountDepositsRequest.subaccount:type_name -> injective.exchange.v2.Subaccount
	148, // 5: injective.exchange.v2.QuerySubaccountDepositsResponse.deposits:type_name -> injective.exchange.v2.QuerySubaccountDepositsResponse.DepositsEntry
	152, // 6: injective.exchange.v2.QueryExchangeBalancesResponse.balances:type_name -> injective.exchange.v2.Balance
	153, // 7: injective.exchange.v2.QueryAggregateVolumeResponse.aggregate_volumes:type_name -> injective.exchange.v2.MarketVolume
	154, // 8: injective.exchange.v2.QueryAggregateVolumesResponse.aggregate_account_volumes:type_name -> injective.exchange.v2.AggregateAccountVolumeRecord
	153, // 9: injective.exchange.v2.QueryAggregateVolumesResponse.aggregate_market_volumes:type_name -> injective.exchange.v2.MarketVolume
	155, // 10: injective.exchange.v2.QueryAggregateMarketVolumeResponse.volume:type_name -> injective.exchange.v2.VolumeRecord
	156, // 11: injective.exchange.v2.QueryDenomDecimalsResponse.denom_decimals:type_name -> injective.exchange.v2.DenomDecimals
	153, // 12: injective.exchange.v2.QueryAggregateMarketVolumesResponse.volumes:type_name -> injective.exchange.v2.MarketVolume
	157, // 13: injective.exchange.v2.QuerySubaccountDepositResponse.deposits:type_name -> injective.exchange.v2.Deposit
	158, // 14: injective.exchange.v2.QuerySpotMarketsResponse.markets:type_name -> injective.exchange.v2.SpotMarket
	158, // 15: injective.exchange.v2.QuerySpotMarketResponse.market:type_name -> injective.exchange.v2.SpotMarket
	0,   // 16: injective.exchange.v2.QuerySpotOrderbookRequest.order_side:type_name -> injective.exchange.v2.OrderSide
	159, // 17: injective.exchange.v2.QuerySpotOrderbookResponse.buys_price_level:type_name -> injective.exchange.v2.Level
	159, // 18: injective.exchange.v2.QuerySpotOrderbookResponse.sells_price_level:type_name -> injective.exchange.v2.Level
	158, // 19: injective.exchange.v2.FullSpotMarket.market:type_name -> injective.exchange.v2.SpotMarket
	160, // 20: injective.exchange.v2.FullSpotMarket.mid_price_and_tob:type_name -> injective.exchange.v2.MidPriceAndTOB
	32,  // 21: injective.exchange.v2.QueryFullSpotMarketsResponse.markets:type_name -> injective.exchange.v2.FullSpotMarket
	32,  // 22: injective.exchange.v2.QueryFullSpotMarketResponse.market:type_name -> injective.exchange.v2.FullSpotMarket
	41,  // 23: injective.exchange.v2.QuerySpotOrdersByHashesResponse.orders:type_name -> injective.exchange.v2.TrimmedSpotLimitOrder
	41,  // 24: injective.exchange.v2.QueryTraderSpotOrdersResponse.orders:type_name -> injective.exchange.v2.TrimmedSpotLimitOrder
	41,  // 25: injective.exchange.v2.QueryAccountAddressSpotOrdersResponse.orders:type_name -> injective.exchange.v2.TrimmedSpotLimitOrder
	159, // 26: injective.exchange.v2.QueryDerivativeOrderbookResponse.buys_price_level:type_name -> injective.exchange.v2.Level
	159, // 27: injective.exchange.v2.QueryDerivativeOrderbookResponse.sells_price_level:type_name -> injective.exchange.v2.Level
	1,   // 28: injective.exchange.v2.QueryTraderSpotOrdersToCancelUpToAmountRequest.strategy:type_name -> injective.exchange.v2.CancellationStrategy
	1,   // 29: injective.exchange.v2.QueryTraderDerivativeOrdersToCancelUpToAmountRequest.strategy:type_name -> injective.exchange.v2.CancellationStrategy
	54,  // 30: injective.exchange.v2.QueryTraderDerivativeOrdersResponse.orders:type_name -> injective.exchange.v2.TrimmedDerivativeLimitOrder
	54,  // 31: injective.exchange.v2.QueryAccountAddressDerivativeOrdersResponse.orders:type_name -> injective.exchange.v2.TrimmedDerivativeLimitOrder
	54,  // 32: injective.exchange.v2.QueryDerivativeOrdersByHashesResponse.orders:type_name -> injective.exchange.v2.TrimmedDerivativeLimitOrder
	161, // 33: injective.exchange.v2.PerpetualMarketState.market_info:type_name -> injective.exchange.v2.PerpetualMarketInfo
	162, // 34: injective.exchange.v2.PerpetualMarketState.funding_info:type_name -> injective.exchange.v2.PerpetualMarketFunding
	163, // 35: injective.exchange.v2.FullDerivativeMarket.market:type_name -> injective.exchange.v2.DerivativeMarket
	61,  // 36: injective.exchange.v2.FullDerivativeMarket.perpetual_info:type_name -> injective.exchange.v2.PerpetualMarketState
	164, // 37: injective.exchange.v2.FullDerivativeMarket.futures_info:type_name -> injective.exchange.v2.ExpiryFuturesMarketInfo
	160, // 38: injective.exchange.v2.FullDerivativeMarket.mid_price_and_tob:type_name -> injective.exchange.v2.MidPriceAndTOB
	62,  // 39: injective.exchange.v2.QueryDerivativeMarketsResponse.markets:type_name -> injective.exchange.v2.FullDerivativeMarket
	62,  // 40: injective.exchange.v2.QueryDerivativeMarketResponse.market:type_name -> injective.exchange.v2.FullDerivativeMarket
	165, // 41: injective.exchange.v2.QueryPositionsInMarketResponse.state:type_name -> injective.exchange.v2.DerivativePosition
	165, // 42: injective.exchange.v2.QuerySubaccountPositionsResponse.state:type_name -> injective.exchange.v2.DerivativePosition
	166, // 43: injective.exchange.v2.QuerySubaccountPositionInMarketResponse.state:type_name -> injective.exchange.v2.Position
	77,  // 44: injective.exchange.v2.QuerySubaccountEffectivePositionInMarketResponse.state:type_name -> injective.exchange.v2.EffectivePosition
	161, // 45: injective.exchange.v2.QueryPerpetualMarketInfoResponse.info:type_name -> injective.exchange.v2.PerpetualMarketInfo
	164, // 46: injective.exchange.v2.QueryExpiryFuturesMarketInfoResponse.info:type_name -> injective.exchange.v2.ExpiryFuturesMarketInfo
	162, // 47: injective.exchange.v2.QueryPerpetualMarketFundingResponse.state:type_name -> injective.exchange.v2.PerpetualMarketFunding
	5,   // 48: injective.exchange.v2.QuerySubaccountOrderMetadataResponse.metadata:type_name -> injective.exchange.v2.SubaccountOrderbookMetadataWithMarket
	167, // 49: injective.exchange.v2.QueryModuleStateResponse.state:type_name -> injective.exchange.v2.GenesisState
	165, // 50: injective.exchange.v2.QueryPositionsResponse.state:type_name -> injective.exchange.v2.DerivativePosition
	168, // 51: injective.exchange.v2.QueryTradeRewardCampaignResponse.trading_reward_campaign_info:type_name -> injective.exchange.v2.TradingRewardCampaignInfo
	169, // 52: injective.exchange.v2.QueryTradeRewardCampaignResponse.trading_reward_pool_campaign_schedule:type_name -> injective.exchange.v2.CampaignRewardPool
	169, // 53: injective.exchange.v2.QueryTradeRewardCampaignResponse.pending_trading_reward_pool_campaign_schedule:type_name -> injective.exchange.v2.CampaignRewardPool
	170, // 54: injective.exchange.v2.QueryFeeDiscountAccountInfoResponse.account_info:type_name -> injective.exchange.v2.FeeDiscountTierInfo
	171, // 55: injective.exchange.v2.QueryFeeDiscountAccountInfoResponse.account_ttl:type_name -> injective.exchange.v2.FeeDiscountTierTTL
	172, // 56: injective.exchange.v2.QueryFeeDiscountScheduleResponse.fee_discount_schedule:type_name -> injective.exchange.v2.FeeDiscountSchedule
	104, // 57: injective.exchange.v2.QueryBalanceMismatchesResponse.balance_mismatches:type_name -> injective.exchange.v2.BalanceMismatch
	107, // 58: injective.exchange.v2.QueryBalanceWithBalanceHoldsResponse.balance_with_balance_holds:type_name -> injective.exchange.v2.BalanceWithMarginHold
	110, // 59: injective.exchange.v2.QueryFeeDiscountTierStatisticsResponse.statistics:type_name -> injective.exchange.v2.TierStatistic
	173, // 60: injective.exchange.v2.QueryHistoricalTradeRecordsResponse.trade_records:type_name -> injective.exchange.v2.TradeRecords
	118, // 61: injective.exchange.v2.QueryMarketVolatilityRequest.trade_history_options:type_name -> injective.exchange.v2.TradeHistoryOptions
	174, // 62: injective.exchange.v2.QueryMarketVolatilityResponse.history_metadata:type_name -> injective.oracle.v1beta1.MetadataStatistics
	175, // 63: injective.exchange.v2.QueryMarketVolatilityResponse.raw_history:type_name -> injective.exchange.v2.TradeRecord
	176, // 64: injective.exchange.v2.QueryBinaryMarketsResponse.markets:type_name -> injective.exchange.v2.BinaryOptionsMarket
	124, // 65: injective.exchange.v2.QueryTraderDerivativeConditionalOrdersResponse.orders:type_name -> injective.exchange.v2.TrimmedDerivativeConditionalOrder
	130, // 66: injective.exchange.v2.QueryFullSpotOrderbookResponse.Bids:type_name -> injective.exchange.v2.TrimmedLimitOrder
	130, // 67: injective.exchange.v2.QueryFullSpotOrderbookResponse.Asks:type_name -> injective.exchange.v2.TrimmedLimitOrder
	130, // 68: injective.exchange.v2.QueryFullDerivativeOrderbookResponse.Bids:type_name -> injective.exchange.v2.TrimmedLimitOrder
	130, // 69: injective.exchange.v2.QueryFullDerivativeOrderbookResponse.Asks:type_name -> injective.exchange.v2.TrimmedLimitOrder
	177, // 70: injective.exchange.v2.QueryActiveStakeGrantResponse.grant:type_name -> injective.exchange.v2.ActiveGrant
	178, // 71: injective.exchange.v2.QueryActiveStakeGrantResponse.effective_grant:type_name -> injective.exchange.v2.EffectiveGrant
	179, // 72: injective.exchange.v2.QueryGrantAuthorizationsResponse.grants:type_name -> injective.exchange.v2.GrantAuthorization
	143, // 73: injective.exchange.v2.QueryMarketBalanceResponse.balance:type_name -> injective.exchange.v2.MarketBalance
	143, // 74: injective.exchange.v2.QueryMarketBalancesResponse.balances:type_name -> injective.exchange.v2.MarketBalance
	180, // 75: injective.exchange.v2.QueryDenomMinNotionalsResponse.denom_min_notionals:type_name -> injective.exchange.v2.DenomMinNotional
	157, // 76: injective.exchange.v2.QuerySubaccountDepositsResponse.DepositsEntry.value:type_name -> injective.exchange.v2.Deposit
	128, // 77: injective.exchange.v2.Query.L3DerivativeOrderBook:input_type -> injective.exchange.v2.QueryFullDerivativeOrderbookRequest
	126, // 78: injective.exchange.v2.Query.L3SpotOrderBook:input_type -> injective.exchange.v2.QueryFullSpotOrderbookRequest
	6,   // 79: injective.exchange.v2.Query.QueryExchangeParams:input_type -> injective.exchange.v2.QueryExchangeParamsRequest
	8,   // 80: injective.exchange.v2.Query.SubaccountDeposits:input_type -> injective.exchange.v2.QuerySubaccountDepositsRequest
	24,  // 81: injective.exchange.v2.Query.SubaccountDeposit:input_type -> injective.exchange.v2.QuerySubaccountDepositRequest
	10,  // 82: injective.exchange.v2.Query.ExchangeBalances:input_type -> injective.exchange.v2.QueryExchangeBalancesRequest
	12,  // 83: injective.exchange.v2.Query.AggregateVolume:input_type -> injective.exchange.v2.QueryAggregateVolumeRequest
	14,  // 84: injective.exchange.v2.Query.AggregateVolumes:input_type -> injective.exchange.v2.QueryAggregateVolumesRequest
	16,  // 85: injective.exchange.v2.Query.AggregateMarketVolume:input_type -> injective.exchange.v2.QueryAggregateMarketVolumeRequest
	22,  // 86: injective.exchange.v2.Query.AggregateMarketVolumes:input_type -> injective.exchange.v2.QueryAggregateMarketVolumesRequest
	18,  // 87: injective.exchange.v2.Query.DenomDecimal:input_type -> injective.exchange.v2.QueryDenomDecimalRequest
	20,  // 88: injective.exchange.v2.Query.DenomDecimals:input_type -> injective.exchange.v2.QueryDenomDecimalsRequest
	26,  // 89: injective.exchange.v2.Query.SpotMarkets:input_type -> injective.exchange.v2.QuerySpotMarketsRequest
	28,  // 90: injective.exchange.v2.Query.SpotMarket:input_type -> injective.exchange.v2.QuerySpotMarketRequest
	33,  // 91: injective.exchange.v2.Query.FullSpotMarkets:input_type -> injective.exchange.v2.QueryFullSpotMarketsRequest
	35,  // 92: injective.exchange.v2.Query.FullSpotMarket:input_type -> injective.exchange.v2.QueryFullSpotMarketRequest
	30,  // 93: injective.exchange.v2.Query.SpotOrderbook:input_type -> injective.exchange.v2.QuerySpotOrderbookRequest
	39,  // 94: injective.exchange.v2.Query.TraderSpotOrders:input_type -> injective.exchange.v2.QueryTraderSpotOrdersRequest
	40,  // 95: injective.exchange.v2.Query.AccountAddressSpotOrders:input_type -> injective.exchange.v2.QueryAccountAddressSpotOrdersRequest
	37,  // 96: injective.exchange.v2.Query.SpotOrdersByHashes:input_type -> injective.exchange.v2.QuerySpotOrdersByHashesRequest
	3,   // 97: injective.exchange.v2.Query.SubaccountOrders:input_type -> injective.exchange.v2.QuerySubaccountOrdersRequest
	39,  // 98: injective.exchange.v2.Query.TraderSpotTransientOrders:input_type -> injective.exchange.v2.QueryTraderSpotOrdersRequest
	44,  // 99: injective.exchange.v2.Query.SpotMidPriceAndTOB:input_type -> injective.exchange.v2.QuerySpotMidPriceAndTOBRequest
	46,  // 100: injective.exchange.v2.Query.DerivativeMidPriceAndTOB:input_type -> injective.exchange.v2.QueryDerivativeMidPriceAndTOBRequest
	48,  // 101: injective.exchange.v2.Query.DerivativeOrderbook:input_type -> injective.exchange.v2.QueryDerivativeOrderbookRequest
	52,  // 102: injective.exchange.v2.Query.TraderDerivativeOrders:input_type -> injective.exchange.v2.QueryTraderDerivativeOrdersRequest
	53,  // 103: injective.exchange.v2.Query.AccountAddressDerivativeOrders:input_type -> injective.exchange.v2.QueryAccountAddressDerivativeOrdersRequest
	57,  // 104: injective.exchange.v2.Query.DerivativeOrdersByHashes:input_type -> injective.exchange.v2.QueryDerivativeOrdersByHashesRequest
	52,  // 105: injective.exchange.v2.Query.TraderDerivativeTransientOrders:input_type -> injective.exchange.v2.QueryTraderDerivativeOrdersRequest
	59,  // 106: injective.exchange.v2.Query.DerivativeMarkets:input_type -> injective.exchange.v2.QueryDerivativeMarketsRequest
	64,  // 107: injective.exchange.v2.Query.DerivativeMarket:input_type -> injective.exchange.v2.QueryDerivativeMarketRequest
	66,  // 108: injective.exchange.v2.Query.DerivativeMarketAddress:input_type -> injective.exchange.v2.QueryDerivativeMarketAddressRequest
	68,  // 109: injective.exchange.v2.Query.SubaccountTradeNonce:input_type -> injective.exchange.v2.QuerySubaccountTradeNonceRequest
	87,  // 110: injective.exchange.v2.Query.ExchangeModuleState:input_type -> injective.exchange.v2.QueryModuleStateRequest
	89,  // 111: injective.exchange.v2.Query.Positions:input_type -> injective.exchange.v2.QueryPositionsRequest
	69,  // 112: injective.exchange.v2.Query.PositionsInMarket:input_type -> injective.exchange.v2.QueryPositionsInMarketRequest
	71,  // 113: injective.exchange.v2.Query.SubaccountPositions:input_type -> injective.exchange.v2.QuerySubaccountPositionsRequest
	72,  // 114: injective.exchange.v2.Query.SubaccountPositionInMarket:input_type -> injective.exchange.v2.QuerySubaccountPositionInMarketRequest
	73,  // 115: injective.exchange.v2.Query.SubaccountEffectivePositionInMarket:input_type -> injective.exchange.v2.QuerySubaccountEffectivePositionInMarketRequest
	79,  // 116: injective.exchange.v2.Query.PerpetualMarketInfo:input_type -> injective.exchange.v2.QueryPerpetualMarketInfoRequest
	81,  // 117: injective.exchange.v2.Query.ExpiryFuturesMarketInfo:input_type -> injective.exchange.v2.QueryExpiryFuturesMarketInfoRequest
	83,  // 118: injective.exchange.v2.Query.PerpetualMarketFunding:input_type -> injective.exchange.v2.QueryPerpetualMarketFundingRequest
	74,  // 119: injective.exchange.v2.Query.SubaccountOrderMetadata:input_type -> injective.exchange.v2.QuerySubaccountOrderMetadataRequest
	91,  // 120: injective.exchange.v2.Query.TradeRewardPoints:input_type -> injective.exchange.v2.QueryTradeRewardPointsRequest
	91,  // 121: injective.exchange.v2.Query.PendingTradeRewardPoints:input_type -> injective.exchange.v2.QueryTradeRewardPointsRequest
	93,  // 122: injective.exchange.v2.Query.TradeRewardCampaign:input_type -> injective.exchange.v2.QueryTradeRewardCampaignRequest
	99,  // 123: injective.exchange.v2.Query.FeeDiscountAccountInfo:input_type -> injective.exchange.v2.QueryFeeDiscountAccountInfoRequest
	101, // 124: injective.exchange.v2.Query.FeeDiscountSchedule:input_type -> injective.exchange.v2.QueryFeeDiscountScheduleRequest
	103, // 125: injective.exchange.v2.Query.BalanceMismatches:input_type -> injective.exchange.v2.QueryBalanceMismatchesRequest
	106, // 126: injective.exchange.v2.Query.BalanceWithBalanceHolds:input_type -> injective.exchange.v2.QueryBalanceWithBalanceHoldsRequest
	109, // 127: injective.exchange.v2.Query.FeeDiscountTierStatistics:input_type -> injective.exchange.v2.QueryFeeDiscountTierStatisticsRequest
	112, // 128: injective.exchange.v2.Query.MitoVaultInfos:input_type -> injective.exchange.v2.MitoVaultInfosRequest
	114, // 129: injective.exchange.v2.Query.QueryMarketIDFromVault:input_type -> injective.exchange.v2.QueryMarketIDFromVaultRequest
	116, // 130: injective.exchange.v2.Query.HistoricalTradeRecords:input_type -> injective.exchange.v2.QueryHistoricalTradeRecordsRequest
	95,  // 131: injective.exchange.v2.Query.IsOptedOutOfRewards:input_type -> injective.exchange.v2.QueryIsOptedOutOfRewardsRequest
	97,  // 132: injective.exchange.v2.Query.OptedOutOfRewardsAccounts:input_type -> injective.exchange.v2.QueryOptedOutOfRewardsAccountsRequest
	119, // 133: injective.exchange.v2.Query.MarketVolatility:input_type -> injective.exchange.v2.QueryMarketVolatilityRequest
	121, // 134: injective.exchange.v2.Query.BinaryOptionsMarkets:input_type -> injective.exchange.v2.QueryBinaryMarketsRequest
	123, // 135: injective.exchange.v2.Query.TraderDerivativeConditionalOrders:input_type -> injective.exchange.v2.QueryTraderDerivativeConditionalOrdersRequest
	131, // 136: injective.exchange.v2.Query.MarketAtomicExecutionFeeMultiplier:input_type -> injective.exchange.v2.QueryMarketAtomicExecutionFeeMultiplierRequest
	133, // 137: injective.exchange.v2.Query.ActiveStakeGrant:input_type -> injective.exchange.v2.QueryActiveStakeGrantRequest
	135, // 138: injective.exchange.v2.Query.GrantAuthorization:input_type -> injective.exchange.v2.QueryGrantAuthorizationRequest
	137, // 139: injective.exchange.v2.Query.GrantAuthorizations:input_type -> injective.exchange.v2.QueryGrantAuthorizationsRequest
	139, // 140: injective.exchange.v2.Query.MarketBalance:input_type -> injective.exchange.v2.QueryMarketBalanceRequest
	141, // 141: injective.exchange.v2.Query.MarketBalances:input_type -> injective.exchange.v2.QueryMarketBalancesRequest
	144, // 142: injective.exchange.v2.Query.DenomMinNotional:input_type -> injective.exchange.v2.QueryDenomMinNotionalRequest
	146, // 143: injective.exchange.v2.Query.DenomMinNotionals:input_type -> injective.exchange.v2.QueryDenomMinNotionalsRequest
	129, // 144: injective.exchange.v2.Query.L3DerivativeOrderBook:output_type -> injective.exchange.v2.QueryFullDerivativeOrderbookResponse
	127, // 145: injective.exchange.v2.Query.L3SpotOrderBook:output_type -> injective.exchange.v2.QueryFullSpotOrderbookResponse
	7,   // 146: injective.exchange.v2.Query.QueryExchangeParams:output_type -> injective.exchange.v2.QueryExchangeParamsResponse
	9,   // 147: injective.exchange.v2.Query.SubaccountDeposits:output_type -> injective.exchange.v2.QuerySubaccountDepositsResponse
	25,  // 148: injective.exchange.v2.Query.SubaccountDeposit:output_type -> injective.exchange.v2.QuerySubaccountDepositResponse
	11,  // 149: injective.exchange.v2.Query.ExchangeBalances:output_type -> injective.exchange.v2.QueryExchangeBalancesResponse
	13,  // 150: injective.exchange.v2.Query.AggregateVolume:output_type -> injective.exchange.v2.QueryAggregateVolumeResponse
	15,  // 151: injective.exchange.v2.Query.AggregateVolumes:output_type -> injective.exchange.v2.QueryAggregateVolumesResponse
	17,  // 152: injective.exchange.v2.Query.AggregateMarketVolume:output_type -> injective.exchange.v2.QueryAggregateMarketVolumeResponse
	23,  // 153: injective.exchange.v2.Query.AggregateMarketVolumes:output_type -> injective.exchange.v2.QueryAggregateMarketVolumesResponse
	19,  // 154: injective.exchange.v2.Query.DenomDecimal:output_type -> injective.exchange.v2.QueryDenomDecimalResponse
	21,  // 155: injective.exchange.v2.Query.DenomDecimals:output_type -> injective.exchange.v2.QueryDenomDecimalsResponse
	27,  // 156: injective.exchange.v2.Query.SpotMarkets:output_type -> injective.exchange.v2.QuerySpotMarketsResponse
	29,  // 157: injective.exchange.v2.Query.SpotMarket:output_type -> injective.exchange.v2.QuerySpotMarketResponse
	34,  // 158: injective.exchange.v2.Query.FullSpotMarkets:output_type -> injective.exchange.v2.QueryFullSpotMarketsResponse
	36,  // 159: injective.exchange.v2.Query.FullSpotMarket:output_type -> injective.exchange.v2.QueryFullSpotMarketResponse
	31,  // 160: injective.exchange.v2.Query.SpotOrderbook:output_type -> injective.exchange.v2.QuerySpotOrderbookResponse
	42,  // 161: injective.exchange.v2.Query.TraderSpotOrders:output_type -> injective.exchange.v2.QueryTraderSpotOrdersResponse
	43,  // 162: injective.exchange.v2.Query.AccountAddressSpotOrders:output_type -> injective.exchange.v2.QueryAccountAddressSpotOrdersResponse
	38,  // 163: injective.exchange.v2.Query.SpotOrdersByHashes:output_type -> injective.exchange.v2.QuerySpotOrdersByHashesResponse
	4,   // 164: injective.exchange.v2.Query.SubaccountOrders:output_type -> injective.exchange.v2.QuerySubaccountOrdersResponse
	42,  // 165: injective.exchange.v2.Query.TraderSpotTransientOrders:output_type -> injective.exchange.v2.QueryTraderSpotOrdersResponse
	45,  // 166: injective.exchange.v2.Query.SpotMidPriceAndTOB:output_type -> injective.exchange.v2.QuerySpotMidPriceAndTOBResponse
	47,  // 167: injective.exchange.v2.Query.DerivativeMidPriceAndTOB:output_type -> injective.exchange.v2.QueryDerivativeMidPriceAndTOBResponse
	49,  // 168: injective.exchange.v2.Query.DerivativeOrderbook:output_type -> injective.exchange.v2.QueryDerivativeOrderbookResponse
	55,  // 169: injective.exchange.v2.Query.TraderDerivativeOrders:output_type -> injective.exchange.v2.QueryTraderDerivativeOrdersResponse
	56,  // 170: injective.exchange.v2.Query.AccountAddressDerivativeOrders:output_type -> injective.exchange.v2.QueryAccountAddressDerivativeOrdersResponse
	58,  // 171: injective.exchange.v2.Query.DerivativeOrdersByHashes:output_type -> injective.exchange.v2.QueryDerivativeOrdersByHashesResponse
	55,  // 172: injective.exchange.v2.Query.TraderDerivativeTransientOrders:output_type -> injective.exchange.v2.QueryTraderDerivativeOrdersResponse
	63,  // 173: injective.exchange.v2.Query.DerivativeMarkets:output_type -> injective.exchange.v2.QueryDerivativeMarketsResponse
	65,  // 174: injective.exchange.v2.Query.DerivativeMarket:output_type -> injective.exchange.v2.QueryDerivativeMarketResponse
	67,  // 175: injective.exchange.v2.Query.DerivativeMarketAddress:output_type -> injective.exchange.v2.QueryDerivativeMarketAddressResponse
	86,  // 176: injective.exchange.v2.Query.SubaccountTradeNonce:output_type -> injective.exchange.v2.QuerySubaccountTradeNonceResponse
	88,  // 177: injective.exchange.v2.Query.ExchangeModuleState:output_type -> injective.exchange.v2.QueryModuleStateResponse
	90,  // 178: injective.exchange.v2.Query.Positions:output_type -> injective.exchange.v2.QueryPositionsResponse
	70,  // 179: injective.exchange.v2.Query.PositionsInMarket:output_type -> injective.exchange.v2.QueryPositionsInMarketResponse
	75,  // 180: injective.exchange.v2.Query.SubaccountPositions:output_type -> injective.exchange.v2.QuerySubaccountPositionsResponse
	76,  // 181: injective.exchange.v2.Query.SubaccountPositionInMarket:output_type -> injective.exchange.v2.QuerySubaccountPositionInMarketResponse
	78,  // 182: injective.exchange.v2.Query.SubaccountEffectivePositionInMarket:output_type -> injective.exchange.v2.QuerySubaccountEffectivePositionInMarketResponse
	80,  // 183: injective.exchange.v2.Query.PerpetualMarketInfo:output_type -> injective.exchange.v2.QueryPerpetualMarketInfoResponse
	82,  // 184: injective.exchange.v2.Query.ExpiryFuturesMarketInfo:output_type -> injective.exchange.v2.QueryExpiryFuturesMarketInfoResponse
	84,  // 185: injective.exchange.v2.Query.PerpetualMarketFunding:output_type -> injective.exchange.v2.QueryPerpetualMarketFundingResponse
	85,  // 186: injective.exchange.v2.Query.SubaccountOrderMetadata:output_type -> injective.exchange.v2.QuerySubaccountOrderMetadataResponse
	92,  // 187: injective.exchange.v2.Query.TradeRewardPoints:output_type -> injective.exchange.v2.QueryTradeRewardPointsResponse
	92,  // 188: injective.exchange.v2.Query.PendingTradeRewardPoints:output_type -> injective.exchange.v2.QueryTradeRewardPointsResponse
	94,  // 189: injective.exchange.v2.Query.TradeRewardCampaign:output_type -> injective.exchange.v2.QueryTradeRewardCampaignResponse
	100, // 190: injective.exchange.v2.Query.FeeDiscountAccountInfo:output_type -> injective.exchange.v2.QueryFeeDiscountAccountInfoResponse
	102, // 191: injective.exchange.v2.Query.FeeDiscountSchedule:output_type -> injective.exchange.v2.QueryFeeDiscountScheduleResponse
	105, // 192: injective.exchange.v2.Query.BalanceMismatches:output_type -> injective.exchange.v2.QueryBalanceMismatchesResponse
	108, // 193: injective.exchange.v2.Query.BalanceWithBalanceHolds:output_type -> injective.exchange.v2.QueryBalanceWithBalanceHoldsResponse
	111, // 194: injective.exchange.v2.Query.FeeDiscountTierStatistics:output_type -> injective.exchange.v2.QueryFeeDiscountTierStatisticsResponse
	113, // 195: injective.exchange.v2.Query.MitoVaultInfos:output_type -> injective.exchange.v2.MitoVaultInfosResponse
	115, // 196: injective.exchange.v2.Query.QueryMarketIDFromVault:output_type -> injective.exchange.v2.QueryMarketIDFromVaultResponse
	117, // 197: injective.exchange.v2.Query.HistoricalTradeRecords:output_type -> injective.exchange.v2.QueryHistoricalTradeRecordsResponse
	96,  // 198: injective.exchange.v2.Query.IsOptedOutOfRewards:output_type -> injective.exchange.v2.QueryIsOptedOutOfRewardsResponse
	98,  // 199: injective.exchange.v2.Query.OptedOutOfRewardsAccounts:output_type -> injective.exchange.v2.QueryOptedOutOfRewardsAccountsResponse
	120, // 200: injective.exchange.v2.Query.MarketVolatility:output_type -> injective.exchange.v2.QueryMarketVolatilityResponse
	122, // 201: injective.exchange.v2.Query.BinaryOptionsMarkets:output_type -> injective.exchange.v2.QueryBinaryMarketsResponse
	125, // 202: injective.exchange.v2.Query.TraderDerivativeConditionalOrders:output_type -> injective.exchange.v2.QueryTraderDerivativeConditionalOrdersResponse
	132, // 203: injective.exchange.v2.Query.MarketAtomicExecutionFeeMultiplier:output_type -> injective.exchange.v2.QueryMarketAtomicExecutionFeeMultiplierResponse
	134, // 204: injective.exchange.v2.Query.ActiveStakeGrant:output_type -> injective.exchange.v2.QueryActiveStakeGrantResponse
	136, // 205: injective.exchange.v2.Query.GrantAuthorization:output_type -> injective.exchange.v2.QueryGrantAuthorizationResponse
	138, // 206: injective.exchange.v2.Query.GrantAuthorizations:output_type -> injective.exchange.v2.QueryGrantAuthorizationsResponse
	140, // 207: injective.exchange.v2.Query.MarketBalance:output_type -> injective.exchange.v2.QueryMarketBalanceResponse
	142, // 208: injective.exchange.v2.Query.MarketBalances:output_type -> injective.exchange.v2.QueryMarketBalancesResponse
	145, // 209: injective.exchange.v2.Query.DenomMinNotional:output_type -> injective.exchange.v2.QueryDenomMinNotionalResponse
	147, // 210: injective.exchange.v2.Query.DenomMinNotionals:output_type -> injective.exchange.v2.QueryDenomMinNotionalsResponse
	144, // [144:211] is the sub-list for method output_type
	77,  // [77:144] is the sub-list for method input_type
	77,  // [77:77] is the sub-list for extension type_name
	77,  // [77:77] is the sub-list for extension extendee
	0,   // [0:77] is the sub-list for field type_name
}

func init() { file_injective_exchange_v2_query_proto_init() }
func file_injective_exchange_v2_query_proto_init() {
	if File_injective_exchange_v2_query_proto != nil {
		return
	}
	file_injective_exchange_v2_exchange_proto_init()
	file_injective_exchange_v2_orderbook_proto_init()
	file_injective_exchange_v2_market_proto_init()
	file_injective_exchange_v2_genesis_proto_init()
	file_injective_exchange_v2_query_proto_msgTypes[60].OneofWrappers = []any{
		(*FullDerivativeMarket_PerpetualInfo)(nil),
		(*FullDerivativeMarket_FuturesInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_injective_exchange_v2_query_proto_rawDesc), len(file_injective_exchange_v2_query_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   147,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_injective_exchange_v2_query_proto_goTypes,
		DependencyIndexes: file_injective_exchange_v2_query_proto_depIdxs,
		EnumInfos:         file_injective_exchange_v2_query_proto_enumTypes,
		MessageInfos:      file_injective_exchange_v2_query_proto_msgTypes,
	}.Build()
	File_injective_exchange_v2_query_proto = out.File
	file_injective_exchange_v2_query_proto_goTypes = nil
	file_injective_exchange_v2_query_proto_depIdxs = nil
}
