// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: injective/stream/v2/query.proto

package v2

import (
	fmt "fmt"
	math "math"

	cosmossdk_io_math "cosmossdk.io/math"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	v2 "github.com/wutdahack1337/flux-sdk-go/chain/modules/injective/chain/exchange/types/v2"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type OrderUpdateStatus int32

const (
	OrderUpdateStatus_Unspecified OrderUpdateStatus = 0
	OrderUpdateStatus_Booked      OrderUpdateStatus = 1
	OrderUpdateStatus_Matched     OrderUpdateStatus = 2
	OrderUpdateStatus_Cancelled   OrderUpdateStatus = 3
)

var OrderUpdateStatus_name = map[int32]string{
	0: "Unspecified",
	1: "Booked",
	2: "Matched",
	3: "Cancelled",
}

var OrderUpdateStatus_value = map[string]int32{
	"Unspecified": 0,
	"Booked":      1,
	"Matched":     2,
	"Cancelled":   3,
}

func (x OrderUpdateStatus) String() string {
	return proto.EnumName(OrderUpdateStatus_name, int32(x))
}

func (OrderUpdateStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{0}
}

type StreamRequest struct {
	// filter for bank balances events
	BankBalancesFilter *BankBalancesFilter `protobuf:"bytes,1,opt,name=bank_balances_filter,json=bankBalancesFilter,proto3" json:"bank_balances_filter,omitempty"`
	// filter for subaccount deposits events
	SubaccountDepositsFilter *SubaccountDepositsFilter `protobuf:"bytes,2,opt,name=subaccount_deposits_filter,json=subaccountDepositsFilter,proto3" json:"subaccount_deposits_filter,omitempty"`
	// filter for spot trades events
	SpotTradesFilter *TradesFilter `protobuf:"bytes,3,opt,name=spot_trades_filter,json=spotTradesFilter,proto3" json:"spot_trades_filter,omitempty"`
	// filter for derivative trades events
	DerivativeTradesFilter *TradesFilter `protobuf:"bytes,4,opt,name=derivative_trades_filter,json=derivativeTradesFilter,proto3" json:"derivative_trades_filter,omitempty"`
	// filter for spot orders events
	SpotOrdersFilter *OrdersFilter `protobuf:"bytes,5,opt,name=spot_orders_filter,json=spotOrdersFilter,proto3" json:"spot_orders_filter,omitempty"`
	// filter for derivative orders events
	DerivativeOrdersFilter *OrdersFilter `protobuf:"bytes,6,opt,name=derivative_orders_filter,json=derivativeOrdersFilter,proto3" json:"derivative_orders_filter,omitempty"`
	// filter for spot orderbooks events
	SpotOrderbooksFilter *OrderbookFilter `protobuf:"bytes,7,opt,name=spot_orderbooks_filter,json=spotOrderbooksFilter,proto3" json:"spot_orderbooks_filter,omitempty"`
	// filter for derivative orderbooks events
	DerivativeOrderbooksFilter *OrderbookFilter `protobuf:"bytes,8,opt,name=derivative_orderbooks_filter,json=derivativeOrderbooksFilter,proto3" json:"derivative_orderbooks_filter,omitempty"`
	// filter for positions events
	PositionsFilter *PositionsFilter `protobuf:"bytes,9,opt,name=positions_filter,json=positionsFilter,proto3" json:"positions_filter,omitempty"`
	// filter for oracle prices events
	OraclePriceFilter    *OraclePriceFilter `protobuf:"bytes,10,opt,name=oracle_price_filter,json=oraclePriceFilter,proto3" json:"oracle_price_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{0}
}
func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetBankBalancesFilter() *BankBalancesFilter {
	if m != nil {
		return m.BankBalancesFilter
	}
	return nil
}

func (m *StreamRequest) GetSubaccountDepositsFilter() *SubaccountDepositsFilter {
	if m != nil {
		return m.SubaccountDepositsFilter
	}
	return nil
}

func (m *StreamRequest) GetSpotTradesFilter() *TradesFilter {
	if m != nil {
		return m.SpotTradesFilter
	}
	return nil
}

func (m *StreamRequest) GetDerivativeTradesFilter() *TradesFilter {
	if m != nil {
		return m.DerivativeTradesFilter
	}
	return nil
}

func (m *StreamRequest) GetSpotOrdersFilter() *OrdersFilter {
	if m != nil {
		return m.SpotOrdersFilter
	}
	return nil
}

func (m *StreamRequest) GetDerivativeOrdersFilter() *OrdersFilter {
	if m != nil {
		return m.DerivativeOrdersFilter
	}
	return nil
}

func (m *StreamRequest) GetSpotOrderbooksFilter() *OrderbookFilter {
	if m != nil {
		return m.SpotOrderbooksFilter
	}
	return nil
}

func (m *StreamRequest) GetDerivativeOrderbooksFilter() *OrderbookFilter {
	if m != nil {
		return m.DerivativeOrderbooksFilter
	}
	return nil
}

func (m *StreamRequest) GetPositionsFilter() *PositionsFilter {
	if m != nil {
		return m.PositionsFilter
	}
	return nil
}

func (m *StreamRequest) GetOraclePriceFilter() *OraclePriceFilter {
	if m != nil {
		return m.OraclePriceFilter
	}
	return nil
}

type StreamResponse struct {
	// the block height
	BlockHeight uint64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// the block time
	BlockTime int64 `protobuf:"varint,2,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	// list of bank balances updates
	BankBalances []*BankBalance `protobuf:"bytes,3,rep,name=bank_balances,json=bankBalances,proto3" json:"bank_balances,omitempty"`
	// list of subaccount deposits updates
	SubaccountDeposits []*SubaccountDeposits `protobuf:"bytes,4,rep,name=subaccount_deposits,json=subaccountDeposits,proto3" json:"subaccount_deposits,omitempty"`
	// list of spot trades updates
	SpotTrades []*SpotTrade `protobuf:"bytes,5,rep,name=spot_trades,json=spotTrades,proto3" json:"spot_trades,omitempty"`
	// list of derivative trades updates
	DerivativeTrades []*DerivativeTrade `protobuf:"bytes,6,rep,name=derivative_trades,json=derivativeTrades,proto3" json:"derivative_trades,omitempty"`
	// list of spot orders updates
	SpotOrders []*SpotOrderUpdate `protobuf:"bytes,7,rep,name=spot_orders,json=spotOrders,proto3" json:"spot_orders,omitempty"`
	// list of derivative orders updates
	DerivativeOrders []*DerivativeOrderUpdate `protobuf:"bytes,8,rep,name=derivative_orders,json=derivativeOrders,proto3" json:"derivative_orders,omitempty"`
	// list of spot orderbook updates
	SpotOrderbookUpdates []*OrderbookUpdate `protobuf:"bytes,9,rep,name=spot_orderbook_updates,json=spotOrderbookUpdates,proto3" json:"spot_orderbook_updates,omitempty"`
	// list of derivative orderbook updates
	DerivativeOrderbookUpdates []*OrderbookUpdate `protobuf:"bytes,10,rep,name=derivative_orderbook_updates,json=derivativeOrderbookUpdates,proto3" json:"derivative_orderbook_updates,omitempty"`
	// list of positions updates
	Positions []*Position `protobuf:"bytes,11,rep,name=positions,proto3" json:"positions,omitempty"`
	// list of oracle prices updates
	OraclePrices []*OraclePrice `protobuf:"bytes,12,rep,name=oracle_prices,json=oraclePrices,proto3" json:"oracle_prices,omitempty"`
	// the current gas price when the block was processed (in chain format)
	GasPrice             string   `protobuf:"bytes,13,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{1}
}
func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

func (m *StreamResponse) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *StreamResponse) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *StreamResponse) GetBankBalances() []*BankBalance {
	if m != nil {
		return m.BankBalances
	}
	return nil
}

func (m *StreamResponse) GetSubaccountDeposits() []*SubaccountDeposits {
	if m != nil {
		return m.SubaccountDeposits
	}
	return nil
}

func (m *StreamResponse) GetSpotTrades() []*SpotTrade {
	if m != nil {
		return m.SpotTrades
	}
	return nil
}

func (m *StreamResponse) GetDerivativeTrades() []*DerivativeTrade {
	if m != nil {
		return m.DerivativeTrades
	}
	return nil
}

func (m *StreamResponse) GetSpotOrders() []*SpotOrderUpdate {
	if m != nil {
		return m.SpotOrders
	}
	return nil
}

func (m *StreamResponse) GetDerivativeOrders() []*DerivativeOrderUpdate {
	if m != nil {
		return m.DerivativeOrders
	}
	return nil
}

func (m *StreamResponse) GetSpotOrderbookUpdates() []*OrderbookUpdate {
	if m != nil {
		return m.SpotOrderbookUpdates
	}
	return nil
}

func (m *StreamResponse) GetDerivativeOrderbookUpdates() []*OrderbookUpdate {
	if m != nil {
		return m.DerivativeOrderbookUpdates
	}
	return nil
}

func (m *StreamResponse) GetPositions() []*Position {
	if m != nil {
		return m.Positions
	}
	return nil
}

func (m *StreamResponse) GetOraclePrices() []*OraclePrice {
	if m != nil {
		return m.OraclePrices
	}
	return nil
}

func (m *StreamResponse) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

type OrderbookUpdate struct {
	// the sequence number of the orderbook update
	Seq uint64 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	// the orderbook details
	Orderbook            *Orderbook `protobuf:"bytes,2,opt,name=orderbook,proto3" json:"orderbook,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OrderbookUpdate) Reset()         { *m = OrderbookUpdate{} }
func (m *OrderbookUpdate) String() string { return proto.CompactTextString(m) }
func (*OrderbookUpdate) ProtoMessage()    {}
func (*OrderbookUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{2}
}
func (m *OrderbookUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderbookUpdate.Unmarshal(m, b)
}
func (m *OrderbookUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderbookUpdate.Marshal(b, m, deterministic)
}
func (m *OrderbookUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderbookUpdate.Merge(m, src)
}
func (m *OrderbookUpdate) XXX_Size() int {
	return xxx_messageInfo_OrderbookUpdate.Size(m)
}
func (m *OrderbookUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderbookUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_OrderbookUpdate proto.InternalMessageInfo

func (m *OrderbookUpdate) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *OrderbookUpdate) GetOrderbook() *Orderbook {
	if m != nil {
		return m.Orderbook
	}
	return nil
}

type Orderbook struct {
	// the market ID
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// list of buy levels
	BuyLevels []*v2.Level `protobuf:"bytes,2,rep,name=buy_levels,json=buyLevels,proto3" json:"buy_levels,omitempty"`
	// list of sell levels
	SellLevels           []*v2.Level `protobuf:"bytes,3,rep,name=sell_levels,json=sellLevels,proto3" json:"sell_levels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Orderbook) Reset()         { *m = Orderbook{} }
func (m *Orderbook) String() string { return proto.CompactTextString(m) }
func (*Orderbook) ProtoMessage()    {}
func (*Orderbook) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{3}
}
func (m *Orderbook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orderbook.Unmarshal(m, b)
}
func (m *Orderbook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orderbook.Marshal(b, m, deterministic)
}
func (m *Orderbook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orderbook.Merge(m, src)
}
func (m *Orderbook) XXX_Size() int {
	return xxx_messageInfo_Orderbook.Size(m)
}
func (m *Orderbook) XXX_DiscardUnknown() {
	xxx_messageInfo_Orderbook.DiscardUnknown(m)
}

var xxx_messageInfo_Orderbook proto.InternalMessageInfo

func (m *Orderbook) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *Orderbook) GetBuyLevels() []*v2.Level {
	if m != nil {
		return m.BuyLevels
	}
	return nil
}

func (m *Orderbook) GetSellLevels() []*v2.Level {
	if m != nil {
		return m.SellLevels
	}
	return nil
}

type BankBalance struct {
	// the account address
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// list of account balances
	Balances             github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=balances,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"balances"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *BankBalance) Reset()         { *m = BankBalance{} }
func (m *BankBalance) String() string { return proto.CompactTextString(m) }
func (*BankBalance) ProtoMessage()    {}
func (*BankBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{4}
}
func (m *BankBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankBalance.Unmarshal(m, b)
}
func (m *BankBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankBalance.Marshal(b, m, deterministic)
}
func (m *BankBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankBalance.Merge(m, src)
}
func (m *BankBalance) XXX_Size() int {
	return xxx_messageInfo_BankBalance.Size(m)
}
func (m *BankBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_BankBalance.DiscardUnknown(m)
}

var xxx_messageInfo_BankBalance proto.InternalMessageInfo

func (m *BankBalance) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *BankBalance) GetBalances() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Balances
	}
	return nil
}

type SubaccountDeposits struct {
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,1,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the deposits details
	Deposits             []SubaccountDeposit `protobuf:"bytes,2,rep,name=deposits,proto3" json:"deposits"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubaccountDeposits) Reset()         { *m = SubaccountDeposits{} }
func (m *SubaccountDeposits) String() string { return proto.CompactTextString(m) }
func (*SubaccountDeposits) ProtoMessage()    {}
func (*SubaccountDeposits) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{5}
}
func (m *SubaccountDeposits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubaccountDeposits.Unmarshal(m, b)
}
func (m *SubaccountDeposits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubaccountDeposits.Marshal(b, m, deterministic)
}
func (m *SubaccountDeposits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubaccountDeposits.Merge(m, src)
}
func (m *SubaccountDeposits) XXX_Size() int {
	return xxx_messageInfo_SubaccountDeposits.Size(m)
}
func (m *SubaccountDeposits) XXX_DiscardUnknown() {
	xxx_messageInfo_SubaccountDeposits.DiscardUnknown(m)
}

var xxx_messageInfo_SubaccountDeposits proto.InternalMessageInfo

func (m *SubaccountDeposits) GetSubaccountId() string {
	if m != nil {
		return m.SubaccountId
	}
	return ""
}

func (m *SubaccountDeposits) GetDeposits() []SubaccountDeposit {
	if m != nil {
		return m.Deposits
	}
	return nil
}

type SubaccountDeposit struct {
	Denom                string     `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Deposit              v2.Deposit `protobuf:"bytes,2,opt,name=deposit,proto3" json:"deposit"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SubaccountDeposit) Reset()         { *m = SubaccountDeposit{} }
func (m *SubaccountDeposit) String() string { return proto.CompactTextString(m) }
func (*SubaccountDeposit) ProtoMessage()    {}
func (*SubaccountDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{6}
}
func (m *SubaccountDeposit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubaccountDeposit.Unmarshal(m, b)
}
func (m *SubaccountDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubaccountDeposit.Marshal(b, m, deterministic)
}
func (m *SubaccountDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubaccountDeposit.Merge(m, src)
}
func (m *SubaccountDeposit) XXX_Size() int {
	return xxx_messageInfo_SubaccountDeposit.Size(m)
}
func (m *SubaccountDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_SubaccountDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_SubaccountDeposit proto.InternalMessageInfo

func (m *SubaccountDeposit) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *SubaccountDeposit) GetDeposit() v2.Deposit {
	if m != nil {
		return m.Deposit
	}
	return v2.Deposit{}
}

type SpotOrderUpdate struct {
	// the status of the order
	Status OrderUpdateStatus `protobuf:"varint,1,opt,name=status,proto3,enum=injective.stream.v2.OrderUpdateStatus" json:"status,omitempty"`
	// the order hash
	OrderHash string `protobuf:"bytes,2,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	// the client order ID
	Cid string `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	// the order details
	Order                *SpotOrder `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SpotOrderUpdate) Reset()         { *m = SpotOrderUpdate{} }
func (m *SpotOrderUpdate) String() string { return proto.CompactTextString(m) }
func (*SpotOrderUpdate) ProtoMessage()    {}
func (*SpotOrderUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{7}
}
func (m *SpotOrderUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpotOrderUpdate.Unmarshal(m, b)
}
func (m *SpotOrderUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpotOrderUpdate.Marshal(b, m, deterministic)
}
func (m *SpotOrderUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpotOrderUpdate.Merge(m, src)
}
func (m *SpotOrderUpdate) XXX_Size() int {
	return xxx_messageInfo_SpotOrderUpdate.Size(m)
}
func (m *SpotOrderUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SpotOrderUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SpotOrderUpdate proto.InternalMessageInfo

func (m *SpotOrderUpdate) GetStatus() OrderUpdateStatus {
	if m != nil {
		return m.Status
	}
	return OrderUpdateStatus_Unspecified
}

func (m *SpotOrderUpdate) GetOrderHash() string {
	if m != nil {
		return m.OrderHash
	}
	return ""
}

func (m *SpotOrderUpdate) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *SpotOrderUpdate) GetOrder() *SpotOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

type SpotOrder struct {
	// the market ID
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// the order details
	Order                v2.SpotLimitOrder `protobuf:"bytes,2,opt,name=order,proto3" json:"order"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SpotOrder) Reset()         { *m = SpotOrder{} }
func (m *SpotOrder) String() string { return proto.CompactTextString(m) }
func (*SpotOrder) ProtoMessage()    {}
func (*SpotOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{8}
}
func (m *SpotOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpotOrder.Unmarshal(m, b)
}
func (m *SpotOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpotOrder.Marshal(b, m, deterministic)
}
func (m *SpotOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpotOrder.Merge(m, src)
}
func (m *SpotOrder) XXX_Size() int {
	return xxx_messageInfo_SpotOrder.Size(m)
}
func (m *SpotOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_SpotOrder.DiscardUnknown(m)
}

var xxx_messageInfo_SpotOrder proto.InternalMessageInfo

func (m *SpotOrder) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *SpotOrder) GetOrder() v2.SpotLimitOrder {
	if m != nil {
		return m.Order
	}
	return v2.SpotLimitOrder{}
}

type DerivativeOrderUpdate struct {
	// the status of the order
	Status OrderUpdateStatus `protobuf:"varint,1,opt,name=status,proto3,enum=injective.stream.v2.OrderUpdateStatus" json:"status,omitempty"`
	// the order hash
	OrderHash string `protobuf:"bytes,2,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	// the client order ID
	Cid string `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	// the order details
	Order                *DerivativeOrder `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DerivativeOrderUpdate) Reset()         { *m = DerivativeOrderUpdate{} }
func (m *DerivativeOrderUpdate) String() string { return proto.CompactTextString(m) }
func (*DerivativeOrderUpdate) ProtoMessage()    {}
func (*DerivativeOrderUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{9}
}
func (m *DerivativeOrderUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DerivativeOrderUpdate.Unmarshal(m, b)
}
func (m *DerivativeOrderUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DerivativeOrderUpdate.Marshal(b, m, deterministic)
}
func (m *DerivativeOrderUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DerivativeOrderUpdate.Merge(m, src)
}
func (m *DerivativeOrderUpdate) XXX_Size() int {
	return xxx_messageInfo_DerivativeOrderUpdate.Size(m)
}
func (m *DerivativeOrderUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_DerivativeOrderUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_DerivativeOrderUpdate proto.InternalMessageInfo

func (m *DerivativeOrderUpdate) GetStatus() OrderUpdateStatus {
	if m != nil {
		return m.Status
	}
	return OrderUpdateStatus_Unspecified
}

func (m *DerivativeOrderUpdate) GetOrderHash() string {
	if m != nil {
		return m.OrderHash
	}
	return ""
}

func (m *DerivativeOrderUpdate) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *DerivativeOrderUpdate) GetOrder() *DerivativeOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

type DerivativeOrder struct {
	// the market ID
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// the order details
	Order v2.DerivativeLimitOrder `protobuf:"bytes,2,opt,name=order,proto3" json:"order"`
	// whether the order is a market order
	IsMarket             bool     `protobuf:"varint,3,opt,name=is_market,json=isMarket,proto3" json:"is_market,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DerivativeOrder) Reset()         { *m = DerivativeOrder{} }
func (m *DerivativeOrder) String() string { return proto.CompactTextString(m) }
func (*DerivativeOrder) ProtoMessage()    {}
func (*DerivativeOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{10}
}
func (m *DerivativeOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DerivativeOrder.Unmarshal(m, b)
}
func (m *DerivativeOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DerivativeOrder.Marshal(b, m, deterministic)
}
func (m *DerivativeOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DerivativeOrder.Merge(m, src)
}
func (m *DerivativeOrder) XXX_Size() int {
	return xxx_messageInfo_DerivativeOrder.Size(m)
}
func (m *DerivativeOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_DerivativeOrder.DiscardUnknown(m)
}

var xxx_messageInfo_DerivativeOrder proto.InternalMessageInfo

func (m *DerivativeOrder) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *DerivativeOrder) GetOrder() v2.DerivativeLimitOrder {
	if m != nil {
		return m.Order
	}
	return v2.DerivativeLimitOrder{}
}

func (m *DerivativeOrder) GetIsMarket() bool {
	if m != nil {
		return m.IsMarket
	}
	return false
}

type Position struct {
	// the market ID
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,2,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// whether the position is long or short
	IsLong bool `protobuf:"varint,3,opt,name=isLong,proto3" json:"isLong,omitempty"`
	// the quantity of the position (in human readable format)
	Quantity cosmossdk_io_math.LegacyDec `protobuf:"bytes,4,opt,name=quantity,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"quantity"`
	// the entry price of the position (in human readable format)
	EntryPrice cosmossdk_io_math.LegacyDec `protobuf:"bytes,5,opt,name=entry_price,json=entryPrice,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"entry_price"`
	// the margin of the position (in human readable format)
	Margin cosmossdk_io_math.LegacyDec `protobuf:"bytes,6,opt,name=margin,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"margin"`
	// the cumulative funding entry of the position (in human readable format)
	CumulativeFundingEntry cosmossdk_io_math.LegacyDec `protobuf:"bytes,7,opt,name=cumulative_funding_entry,json=cumulativeFundingEntry,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"cumulative_funding_entry"`
	XXX_NoUnkeyedLiteral   struct{}                    `json:"-"`
	XXX_unrecognized       []byte                      `json:"-"`
	XXX_sizecache          int32                       `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{11}
}
func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *Position) GetSubaccountId() string {
	if m != nil {
		return m.SubaccountId
	}
	return ""
}

func (m *Position) GetIsLong() bool {
	if m != nil {
		return m.IsLong
	}
	return false
}

type OraclePrice struct {
	// the symbol of the oracle price
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// the updated price
	Price cosmossdk_io_math.LegacyDec `protobuf:"bytes,2,opt,name=price,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"price"`
	// the oracle type
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OraclePrice) Reset()         { *m = OraclePrice{} }
func (m *OraclePrice) String() string { return proto.CompactTextString(m) }
func (*OraclePrice) ProtoMessage()    {}
func (*OraclePrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{12}
}
func (m *OraclePrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OraclePrice.Unmarshal(m, b)
}
func (m *OraclePrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OraclePrice.Marshal(b, m, deterministic)
}
func (m *OraclePrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OraclePrice.Merge(m, src)
}
func (m *OraclePrice) XXX_Size() int {
	return xxx_messageInfo_OraclePrice.Size(m)
}
func (m *OraclePrice) XXX_DiscardUnknown() {
	xxx_messageInfo_OraclePrice.DiscardUnknown(m)
}

var xxx_messageInfo_OraclePrice proto.InternalMessageInfo

func (m *OraclePrice) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OraclePrice) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type SpotTrade struct {
	// the market ID
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// whether the trade is a buy or sell
	IsBuy bool `protobuf:"varint,2,opt,name=is_buy,json=isBuy,proto3" json:"is_buy,omitempty"`
	// the execution type
	ExecutionType string `protobuf:"bytes,3,opt,name=executionType,proto3" json:"executionType,omitempty"`
	// the quantity of the trade (in human readable format)
	Quantity cosmossdk_io_math.LegacyDec `protobuf:"bytes,4,opt,name=quantity,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"quantity"`
	// the price of the trade (in human readable format)
	Price cosmossdk_io_math.LegacyDec `protobuf:"bytes,5,opt,name=price,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"price"`
	// the subaccount ID that executed the trade
	SubaccountId string `protobuf:"bytes,6,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the fee of the trade (in human readable format)
	Fee cosmossdk_io_math.LegacyDec `protobuf:"bytes,7,opt,name=fee,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"fee"`
	// the order hash
	OrderHash string `protobuf:"bytes,8,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	// the fee recipient address
	FeeRecipientAddress string `protobuf:"bytes,9,opt,name=fee_recipient_address,json=feeRecipientAddress,proto3" json:"fee_recipient_address,omitempty"`
	// the client order ID
	Cid string `protobuf:"bytes,10,opt,name=cid,proto3" json:"cid,omitempty"`
	// the trade ID
	TradeId              string   `protobuf:"bytes,11,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpotTrade) Reset()         { *m = SpotTrade{} }
func (m *SpotTrade) String() string { return proto.CompactTextString(m) }
func (*SpotTrade) ProtoMessage()    {}
func (*SpotTrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{13}
}
func (m *SpotTrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpotTrade.Unmarshal(m, b)
}
func (m *SpotTrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpotTrade.Marshal(b, m, deterministic)
}
func (m *SpotTrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpotTrade.Merge(m, src)
}
func (m *SpotTrade) XXX_Size() int {
	return xxx_messageInfo_SpotTrade.Size(m)
}
func (m *SpotTrade) XXX_DiscardUnknown() {
	xxx_messageInfo_SpotTrade.DiscardUnknown(m)
}

var xxx_messageInfo_SpotTrade proto.InternalMessageInfo

func (m *SpotTrade) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *SpotTrade) GetIsBuy() bool {
	if m != nil {
		return m.IsBuy
	}
	return false
}

func (m *SpotTrade) GetExecutionType() string {
	if m != nil {
		return m.ExecutionType
	}
	return ""
}

func (m *SpotTrade) GetSubaccountId() string {
	if m != nil {
		return m.SubaccountId
	}
	return ""
}

func (m *SpotTrade) GetOrderHash() string {
	if m != nil {
		return m.OrderHash
	}
	return ""
}

func (m *SpotTrade) GetFeeRecipientAddress() string {
	if m != nil {
		return m.FeeRecipientAddress
	}
	return ""
}

func (m *SpotTrade) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *SpotTrade) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

type DerivativeTrade struct {
	// the market ID
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// whether the trade is a buy or sell
	IsBuy bool `protobuf:"varint,2,opt,name=is_buy,json=isBuy,proto3" json:"is_buy,omitempty"`
	// the execution type
	ExecutionType string `protobuf:"bytes,3,opt,name=executionType,proto3" json:"executionType,omitempty"`
	// the subaccount ID
	SubaccountId string `protobuf:"bytes,4,opt,name=subaccount_id,json=subaccountId,proto3" json:"subaccount_id,omitempty"`
	// the position delta of the trade (in human readable format)
	PositionDelta *v2.PositionDelta `protobuf:"bytes,5,opt,name=position_delta,json=positionDelta,proto3" json:"position_delta,omitempty"`
	// the payout of the trade (in human readable format)
	Payout cosmossdk_io_math.LegacyDec `protobuf:"bytes,6,opt,name=payout,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"payout"`
	// the fee of the trade (in human readable format)
	Fee cosmossdk_io_math.LegacyDec `protobuf:"bytes,7,opt,name=fee,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"fee"`
	// the order hash
	OrderHash string `protobuf:"bytes,8,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	// the fee recipient address
	FeeRecipientAddress string `protobuf:"bytes,9,opt,name=fee_recipient_address,json=feeRecipientAddress,proto3" json:"fee_recipient_address,omitempty"`
	// the client order ID
	Cid string `protobuf:"bytes,10,opt,name=cid,proto3" json:"cid,omitempty"`
	// the trade ID
	TradeId              string   `protobuf:"bytes,11,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DerivativeTrade) Reset()         { *m = DerivativeTrade{} }
func (m *DerivativeTrade) String() string { return proto.CompactTextString(m) }
func (*DerivativeTrade) ProtoMessage()    {}
func (*DerivativeTrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{14}
}
func (m *DerivativeTrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DerivativeTrade.Unmarshal(m, b)
}
func (m *DerivativeTrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DerivativeTrade.Marshal(b, m, deterministic)
}
func (m *DerivativeTrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DerivativeTrade.Merge(m, src)
}
func (m *DerivativeTrade) XXX_Size() int {
	return xxx_messageInfo_DerivativeTrade.Size(m)
}
func (m *DerivativeTrade) XXX_DiscardUnknown() {
	xxx_messageInfo_DerivativeTrade.DiscardUnknown(m)
}

var xxx_messageInfo_DerivativeTrade proto.InternalMessageInfo

func (m *DerivativeTrade) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *DerivativeTrade) GetIsBuy() bool {
	if m != nil {
		return m.IsBuy
	}
	return false
}

func (m *DerivativeTrade) GetExecutionType() string {
	if m != nil {
		return m.ExecutionType
	}
	return ""
}

func (m *DerivativeTrade) GetSubaccountId() string {
	if m != nil {
		return m.SubaccountId
	}
	return ""
}

func (m *DerivativeTrade) GetPositionDelta() *v2.PositionDelta {
	if m != nil {
		return m.PositionDelta
	}
	return nil
}

func (m *DerivativeTrade) GetOrderHash() string {
	if m != nil {
		return m.OrderHash
	}
	return ""
}

func (m *DerivativeTrade) GetFeeRecipientAddress() string {
	if m != nil {
		return m.FeeRecipientAddress
	}
	return ""
}

func (m *DerivativeTrade) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *DerivativeTrade) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

type TradesFilter struct {
	// list of subaccount IDs to filter by
	SubaccountIds []string `protobuf:"bytes,1,rep,name=subaccount_ids,json=subaccountIds,proto3" json:"subaccount_ids,omitempty"`
	// list of market IDs to filter by
	MarketIds            []string `protobuf:"bytes,2,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradesFilter) Reset()         { *m = TradesFilter{} }
func (m *TradesFilter) String() string { return proto.CompactTextString(m) }
func (*TradesFilter) ProtoMessage()    {}
func (*TradesFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{15}
}
func (m *TradesFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradesFilter.Unmarshal(m, b)
}
func (m *TradesFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradesFilter.Marshal(b, m, deterministic)
}
func (m *TradesFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradesFilter.Merge(m, src)
}
func (m *TradesFilter) XXX_Size() int {
	return xxx_messageInfo_TradesFilter.Size(m)
}
func (m *TradesFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TradesFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TradesFilter proto.InternalMessageInfo

func (m *TradesFilter) GetSubaccountIds() []string {
	if m != nil {
		return m.SubaccountIds
	}
	return nil
}

func (m *TradesFilter) GetMarketIds() []string {
	if m != nil {
		return m.MarketIds
	}
	return nil
}

type PositionsFilter struct {
	// list of subaccount IDs to filter by
	SubaccountIds []string `protobuf:"bytes,1,rep,name=subaccount_ids,json=subaccountIds,proto3" json:"subaccount_ids,omitempty"`
	// list of market IDs to filter by
	MarketIds            []string `protobuf:"bytes,2,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionsFilter) Reset()         { *m = PositionsFilter{} }
func (m *PositionsFilter) String() string { return proto.CompactTextString(m) }
func (*PositionsFilter) ProtoMessage()    {}
func (*PositionsFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{16}
}
func (m *PositionsFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionsFilter.Unmarshal(m, b)
}
func (m *PositionsFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionsFilter.Marshal(b, m, deterministic)
}
func (m *PositionsFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionsFilter.Merge(m, src)
}
func (m *PositionsFilter) XXX_Size() int {
	return xxx_messageInfo_PositionsFilter.Size(m)
}
func (m *PositionsFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionsFilter.DiscardUnknown(m)
}

var xxx_messageInfo_PositionsFilter proto.InternalMessageInfo

func (m *PositionsFilter) GetSubaccountIds() []string {
	if m != nil {
		return m.SubaccountIds
	}
	return nil
}

func (m *PositionsFilter) GetMarketIds() []string {
	if m != nil {
		return m.MarketIds
	}
	return nil
}

type OrdersFilter struct {
	// list of subaccount IDs to filter by
	SubaccountIds []string `protobuf:"bytes,1,rep,name=subaccount_ids,json=subaccountIds,proto3" json:"subaccount_ids,omitempty"`
	// list of market IDs to filter by
	MarketIds            []string `protobuf:"bytes,2,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersFilter) Reset()         { *m = OrdersFilter{} }
func (m *OrdersFilter) String() string { return proto.CompactTextString(m) }
func (*OrdersFilter) ProtoMessage()    {}
func (*OrdersFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{17}
}
func (m *OrdersFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersFilter.Unmarshal(m, b)
}
func (m *OrdersFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersFilter.Marshal(b, m, deterministic)
}
func (m *OrdersFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersFilter.Merge(m, src)
}
func (m *OrdersFilter) XXX_Size() int {
	return xxx_messageInfo_OrdersFilter.Size(m)
}
func (m *OrdersFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersFilter.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersFilter proto.InternalMessageInfo

func (m *OrdersFilter) GetSubaccountIds() []string {
	if m != nil {
		return m.SubaccountIds
	}
	return nil
}

func (m *OrdersFilter) GetMarketIds() []string {
	if m != nil {
		return m.MarketIds
	}
	return nil
}

type OrderbookFilter struct {
	// list of market IDs to filter by
	MarketIds            []string `protobuf:"bytes,1,rep,name=market_ids,json=marketIds,proto3" json:"market_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderbookFilter) Reset()         { *m = OrderbookFilter{} }
func (m *OrderbookFilter) String() string { return proto.CompactTextString(m) }
func (*OrderbookFilter) ProtoMessage()    {}
func (*OrderbookFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{18}
}
func (m *OrderbookFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderbookFilter.Unmarshal(m, b)
}
func (m *OrderbookFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderbookFilter.Marshal(b, m, deterministic)
}
func (m *OrderbookFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderbookFilter.Merge(m, src)
}
func (m *OrderbookFilter) XXX_Size() int {
	return xxx_messageInfo_OrderbookFilter.Size(m)
}
func (m *OrderbookFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderbookFilter.DiscardUnknown(m)
}

var xxx_messageInfo_OrderbookFilter proto.InternalMessageInfo

func (m *OrderbookFilter) GetMarketIds() []string {
	if m != nil {
		return m.MarketIds
	}
	return nil
}

type BankBalancesFilter struct {
	// list of account addresses to filter by
	Accounts             []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankBalancesFilter) Reset()         { *m = BankBalancesFilter{} }
func (m *BankBalancesFilter) String() string { return proto.CompactTextString(m) }
func (*BankBalancesFilter) ProtoMessage()    {}
func (*BankBalancesFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{19}
}
func (m *BankBalancesFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankBalancesFilter.Unmarshal(m, b)
}
func (m *BankBalancesFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankBalancesFilter.Marshal(b, m, deterministic)
}
func (m *BankBalancesFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankBalancesFilter.Merge(m, src)
}
func (m *BankBalancesFilter) XXX_Size() int {
	return xxx_messageInfo_BankBalancesFilter.Size(m)
}
func (m *BankBalancesFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_BankBalancesFilter.DiscardUnknown(m)
}

var xxx_messageInfo_BankBalancesFilter proto.InternalMessageInfo

func (m *BankBalancesFilter) GetAccounts() []string {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type SubaccountDepositsFilter struct {
	// list of subaccount IDs to filter by
	SubaccountIds        []string `protobuf:"bytes,1,rep,name=subaccount_ids,json=subaccountIds,proto3" json:"subaccount_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubaccountDepositsFilter) Reset()         { *m = SubaccountDepositsFilter{} }
func (m *SubaccountDepositsFilter) String() string { return proto.CompactTextString(m) }
func (*SubaccountDepositsFilter) ProtoMessage()    {}
func (*SubaccountDepositsFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{20}
}
func (m *SubaccountDepositsFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubaccountDepositsFilter.Unmarshal(m, b)
}
func (m *SubaccountDepositsFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubaccountDepositsFilter.Marshal(b, m, deterministic)
}
func (m *SubaccountDepositsFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubaccountDepositsFilter.Merge(m, src)
}
func (m *SubaccountDepositsFilter) XXX_Size() int {
	return xxx_messageInfo_SubaccountDepositsFilter.Size(m)
}
func (m *SubaccountDepositsFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_SubaccountDepositsFilter.DiscardUnknown(m)
}

var xxx_messageInfo_SubaccountDepositsFilter proto.InternalMessageInfo

func (m *SubaccountDepositsFilter) GetSubaccountIds() []string {
	if m != nil {
		return m.SubaccountIds
	}
	return nil
}

type OraclePriceFilter struct {
	// list of symbol to filter by
	Symbol               []string `protobuf:"bytes,1,rep,name=symbol,proto3" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OraclePriceFilter) Reset()         { *m = OraclePriceFilter{} }
func (m *OraclePriceFilter) String() string { return proto.CompactTextString(m) }
func (*OraclePriceFilter) ProtoMessage()    {}
func (*OraclePriceFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_63d15adfde4eb6f9, []int{21}
}
func (m *OraclePriceFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OraclePriceFilter.Unmarshal(m, b)
}
func (m *OraclePriceFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OraclePriceFilter.Marshal(b, m, deterministic)
}
func (m *OraclePriceFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OraclePriceFilter.Merge(m, src)
}
func (m *OraclePriceFilter) XXX_Size() int {
	return xxx_messageInfo_OraclePriceFilter.Size(m)
}
func (m *OraclePriceFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_OraclePriceFilter.DiscardUnknown(m)
}

var xxx_messageInfo_OraclePriceFilter proto.InternalMessageInfo

func (m *OraclePriceFilter) GetSymbol() []string {
	if m != nil {
		return m.Symbol
	}
	return nil
}

func init() {
	proto.RegisterEnum("injective.stream.v2.OrderUpdateStatus", OrderUpdateStatus_name, OrderUpdateStatus_value)
	proto.RegisterType((*StreamRequest)(nil), "injective.stream.v2.StreamRequest")
	proto.RegisterType((*StreamResponse)(nil), "injective.stream.v2.StreamResponse")
	proto.RegisterType((*OrderbookUpdate)(nil), "injective.stream.v2.OrderbookUpdate")
	proto.RegisterType((*Orderbook)(nil), "injective.stream.v2.Orderbook")
	proto.RegisterType((*BankBalance)(nil), "injective.stream.v2.BankBalance")
	proto.RegisterType((*SubaccountDeposits)(nil), "injective.stream.v2.SubaccountDeposits")
	proto.RegisterType((*SubaccountDeposit)(nil), "injective.stream.v2.SubaccountDeposit")
	proto.RegisterType((*SpotOrderUpdate)(nil), "injective.stream.v2.SpotOrderUpdate")
	proto.RegisterType((*SpotOrder)(nil), "injective.stream.v2.SpotOrder")
	proto.RegisterType((*DerivativeOrderUpdate)(nil), "injective.stream.v2.DerivativeOrderUpdate")
	proto.RegisterType((*DerivativeOrder)(nil), "injective.stream.v2.DerivativeOrder")
	proto.RegisterType((*Position)(nil), "injective.stream.v2.Position")
	proto.RegisterType((*OraclePrice)(nil), "injective.stream.v2.OraclePrice")
	proto.RegisterType((*SpotTrade)(nil), "injective.stream.v2.SpotTrade")
	proto.RegisterType((*DerivativeTrade)(nil), "injective.stream.v2.DerivativeTrade")
	proto.RegisterType((*TradesFilter)(nil), "injective.stream.v2.TradesFilter")
	proto.RegisterType((*PositionsFilter)(nil), "injective.stream.v2.PositionsFilter")
	proto.RegisterType((*OrdersFilter)(nil), "injective.stream.v2.OrdersFilter")
	proto.RegisterType((*OrderbookFilter)(nil), "injective.stream.v2.OrderbookFilter")
	proto.RegisterType((*BankBalancesFilter)(nil), "injective.stream.v2.BankBalancesFilter")
	proto.RegisterType((*SubaccountDepositsFilter)(nil), "injective.stream.v2.SubaccountDepositsFilter")
	proto.RegisterType((*OraclePriceFilter)(nil), "injective.stream.v2.OraclePriceFilter")
}

func init() { proto.RegisterFile("injective/stream/v2/query.proto", fileDescriptor_63d15adfde4eb6f9) }

var fileDescriptor_63d15adfde4eb6f9 = []byte{
	// 1722 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4b, 0x6f, 0xdb, 0xca,
	0x15, 0x8e, 0x24, 0x4b, 0x16, 0x8f, 0xfc, 0x90, 0xc7, 0x8f, 0xf2, 0xfa, 0xde, 0x6b, 0x3b, 0x8c,
	0xef, 0xbd, 0xc6, 0xbd, 0x88, 0x94, 0xa8, 0x2d, 0xd0, 0x3a, 0x6d, 0x82, 0x28, 0xce, 0xc3, 0xa8,
	0x83, 0x3a, 0xf4, 0x23, 0x41, 0xe0, 0x82, 0x1d, 0x91, 0x63, 0x89, 0x95, 0x44, 0xca, 0x1c, 0x52,
	0x88, 0xd6, 0x5d, 0x74, 0xd3, 0x45, 0x17, 0xfd, 0x05, 0x45, 0x57, 0xf9, 0x05, 0xdd, 0xb7, 0x8b,
	0xa0, 0x7f, 0xa0, 0x40, 0x11, 0xa4, 0x40, 0x97, 0xfd, 0x15, 0xc5, 0x3c, 0x48, 0x91, 0x12, 0xa5,
	0xc8, 0x68, 0x5a, 0xa0, 0x2b, 0xcd, 0x0c, 0xcf, 0xf9, 0xbe, 0x33, 0x67, 0xce, 0x39, 0x73, 0x34,
	0xb0, 0x6d, 0x3b, 0xbf, 0x22, 0xa6, 0x6f, 0xf7, 0x49, 0x95, 0xfa, 0x1e, 0xc1, 0xdd, 0x6a, 0xbf,
	0x56, 0xbd, 0x0a, 0x88, 0x37, 0xa8, 0xf4, 0x3c, 0xd7, 0x77, 0xd1, 0x6a, 0x24, 0x50, 0x11, 0x02,
	0x95, 0x7e, 0x6d, 0x73, 0xcb, 0x74, 0x69, 0xd7, 0xa5, 0xd5, 0x06, 0xa6, 0xa4, 0xda, 0xbf, 0xdb,
	0x20, 0x3e, 0xbe, 0x5b, 0x35, 0x5d, 0xdb, 0x11, 0x4a, 0x9b, 0x6b, 0x4d, 0xb7, 0xe9, 0xf2, 0x61,
	0x95, 0x8d, 0xe4, 0xaa, 0x36, 0xe4, 0x22, 0x6f, 0xcc, 0x16, 0x76, 0x9a, 0x84, 0xb1, 0x91, 0x3e,
	0x71, 0x7c, 0x2a, 0x65, 0x76, 0x27, 0xc8, 0xc8, 0xb1, 0x94, 0xba, 0x99, 0x2e, 0xe5, 0x7a, 0x16,
	0xf1, 0x84, 0x88, 0xf6, 0x7e, 0x1e, 0x16, 0x4f, 0xb8, 0xc1, 0x3a, 0xb9, 0x0a, 0x08, 0xf5, 0x91,
	0x01, 0x6b, 0x0d, 0xec, 0xb4, 0x8d, 0x06, 0xee, 0x60, 0xc7, 0x24, 0xd4, 0xb8, 0xb4, 0x3b, 0x3e,
	0xf1, 0xd4, 0xcc, 0x4e, 0x66, 0xaf, 0x54, 0xfb, 0xa6, 0x92, 0xb2, 0xd1, 0x4a, 0x1d, 0x3b, 0xed,
	0xba, 0x94, 0x7f, 0xc2, 0xc5, 0xeb, 0x73, 0xef, 0x3e, 0x6c, 0x67, 0x74, 0xd4, 0x18, 0xfb, 0x82,
	0xae, 0x60, 0x93, 0x06, 0x0d, 0x6c, 0x9a, 0x6e, 0xe0, 0xf8, 0x86, 0x45, 0x7a, 0x2e, 0xb5, 0xfd,
	0x88, 0x26, 0xcb, 0x69, 0x6e, 0xa7, 0xd2, 0x9c, 0x44, 0x6a, 0x07, 0x52, 0x2b, 0x41, 0xa6, 0xd2,
	0x09, 0xdf, 0xd1, 0x19, 0x20, 0xda, 0x73, 0x7d, 0xc3, 0xf7, 0xb0, 0x35, 0xdc, 0x51, 0x8e, 0x53,
	0xdd, 0x4c, 0xa5, 0x3a, 0xe5, 0x92, 0x09, 0xf8, 0x32, 0x83, 0x88, 0xaf, 0x23, 0x0c, 0xaa, 0x45,
	0x3c, 0xbb, 0x8f, 0x99, 0xf2, 0x08, 0xf8, 0xdc, 0xf5, 0xc0, 0x37, 0x86, 0x40, 0x09, 0x8a, 0xd0,
	0x72, 0x7e, 0x66, 0x11, 0x78, 0x7e, 0x0a, 0xf8, 0xcf, 0xb9, 0xe4, 0xb8, 0xe5, 0xf1, 0xf5, 0x11,
	0xcb, 0x93, 0xe0, 0x85, 0xeb, 0x81, 0xc7, 0x2c, 0x4f, 0x50, 0xfc, 0x12, 0x36, 0x86, 0x96, 0x37,
	0x5c, 0xb7, 0x1d, 0x11, 0xcc, 0x73, 0x82, 0xdd, 0xc9, 0x04, 0x4c, 0x3a, 0xc1, 0xb1, 0x16, 0x6d,
	0x80, 0x03, 0x49, 0x86, 0x0e, 0x7c, 0x31, 0xba, 0x89, 0x04, 0x4f, 0xf1, 0xda, 0x3c, 0x9b, 0x23,
	0x7b, 0x89, 0xb3, 0x9d, 0x41, 0x99, 0xc7, 0x94, 0xed, 0x3a, 0x11, 0x83, 0x32, 0x85, 0xe1, 0x38,
	0x14, 0x4e, 0x30, 0x2c, 0xf7, 0x92, 0xcb, 0xe8, 0x02, 0x56, 0x5d, 0x0f, 0x9b, 0x1d, 0x62, 0xf4,
	0x3c, 0xdb, 0x24, 0x21, 0x32, 0x70, 0xe4, 0xaf, 0x27, 0xd8, 0xce, 0xe4, 0x8f, 0x99, 0x78, 0x02,
	0x7b, 0xc5, 0x1d, 0xfd, 0xa0, 0xfd, 0x76, 0x1e, 0x96, 0xc2, 0xf4, 0xa6, 0x3d, 0xd7, 0xa1, 0x04,
	0xdd, 0x84, 0x85, 0x46, 0xc7, 0x35, 0xdb, 0x46, 0x8b, 0xd8, 0xcd, 0x96, 0xcf, 0xf3, 0x7a, 0x4e,
	0x2f, 0xf1, 0xb5, 0x67, 0x7c, 0x09, 0x7d, 0x09, 0x20, 0x44, 0x7c, 0xbb, 0x4b, 0x78, 0x46, 0xe6,
	0x74, 0x85, 0xaf, 0x9c, 0xda, 0x5d, 0x82, 0x1e, 0xc3, 0x62, 0xa2, 0x42, 0xa8, 0xb9, 0x9d, 0xdc,
	0x5e, 0xa9, 0xb6, 0xf3, 0xb1, 0xd2, 0xa0, 0x2f, 0xc4, 0xab, 0x01, 0x7a, 0x05, 0xab, 0x29, 0x75,
	0x40, 0x9d, 0xe3, 0x60, 0xdf, 0xcc, 0x58, 0x00, 0x74, 0x34, 0x9e, 0xf4, 0xe8, 0x01, 0x94, 0x62,
	0xe9, 0xae, 0xe6, 0x39, 0xe2, 0x56, 0x3a, 0x62, 0x98, 0xd3, 0x3a, 0x0c, 0xd3, 0x1b, 0xbd, 0x80,
	0x95, 0xb1, 0xc4, 0x56, 0x0b, 0x1c, 0x26, 0xfd, 0xb0, 0x0f, 0x92, 0xd9, 0xab, 0x97, 0x47, 0xd3,
	0x19, 0x3d, 0x96, 0x36, 0x89, 0x5c, 0x53, 0xe7, 0xa7, 0x80, 0x9d, 0x84, 0xc1, 0x7e, 0xd6, 0xb3,
	0xb0, 0x2f, 0x2d, 0x13, 0xb9, 0x85, 0x5e, 0x26, 0x2c, 0x93, 0x60, 0x45, 0x0e, 0xf6, 0xed, 0x47,
	0x2c, 0x8b, 0x43, 0x96, 0x47, 0x93, 0x16, 0xbd, 0x1e, 0x4d, 0x57, 0x23, 0xe0, 0xa2, 0x54, 0x55,
	0xa6, 0x98, 0x1a, 0x65, 0x89, 0xc4, 0x4d, 0x26, 0xaa, 0x58, 0xa4, 0xe8, 0x32, 0x3d, 0x51, 0x23,
	0x06, 0xb8, 0x06, 0x43, 0x5a, 0x8a, 0x86, 0x3c, 0xf7, 0x40, 0x89, 0xd2, 0x4b, 0x2d, 0x71, 0xd0,
	0x2f, 0xa7, 0xe6, 0xa6, 0x3e, 0x94, 0x67, 0x51, 0x1d, 0x4f, 0x44, 0xaa, 0x2e, 0x4c, 0x89, 0xea,
	0x58, 0x0a, 0xea, 0x0b, 0xb1, 0xb4, 0xa3, 0xe8, 0x73, 0x50, 0x9a, 0x98, 0x0a, 0x0c, 0x75, 0x71,
	0x27, 0xb3, 0xa7, 0xe8, 0xc5, 0x26, 0xa6, 0xfc, 0xab, 0x86, 0x61, 0x79, 0xc4, 0x68, 0x54, 0x86,
	0x1c, 0x25, 0x57, 0x32, 0x0b, 0xd9, 0x10, 0xfd, 0x04, 0x94, 0xc8, 0x45, 0xf2, 0x3a, 0xdc, 0x9a,
	0xee, 0x1a, 0x7d, 0xa8, 0xa0, 0xfd, 0x31, 0x03, 0x4a, 0xf4, 0x81, 0x59, 0xd3, 0xc5, 0x5e, 0x9b,
	0xf8, 0x86, 0x6d, 0x71, 0x0e, 0x45, 0x2f, 0x8a, 0x85, 0x43, 0x0b, 0xdd, 0x03, 0x68, 0x04, 0x03,
	0xa3, 0x43, 0xfa, 0xa4, 0x43, 0xd5, 0x2c, 0xdf, 0xee, 0x17, 0x31, 0xa6, 0xa8, 0x9b, 0xe8, 0xd7,
	0x2a, 0x47, 0x4c, 0x48, 0x57, 0x1a, 0xc1, 0x80, 0x8f, 0x28, 0xfa, 0x29, 0x94, 0x28, 0xe9, 0x74,
	0x42, 0xed, 0xdc, 0x0c, 0xda, 0xc0, 0x14, 0x84, 0xba, 0xf6, 0xbb, 0x0c, 0x94, 0x62, 0xa5, 0x01,
	0xa9, 0x30, 0x2f, 0xb3, 0x58, 0x9a, 0x19, 0x4e, 0x51, 0x13, 0x8a, 0x51, 0xa1, 0x11, 0x36, 0x7e,
	0x56, 0x11, 0x7d, 0x55, 0x85, 0xf5, 0x55, 0x15, 0xd9, 0x57, 0x55, 0x1e, 0xb9, 0xb6, 0x53, 0xbf,
	0xf3, 0xee, 0xc3, 0xf6, 0x8d, 0xb7, 0xff, 0xd8, 0xde, 0x6b, 0xda, 0x7e, 0x2b, 0x68, 0x54, 0x4c,
	0xb7, 0x5b, 0x95, 0x4d, 0x98, 0xf8, 0xb9, 0x4d, 0xad, 0x76, 0xd5, 0x1f, 0xf4, 0x08, 0xe5, 0x0a,
	0x54, 0x8f, 0xc0, 0xb5, 0x5f, 0x67, 0x00, 0x8d, 0x17, 0x18, 0x74, 0x0b, 0x16, 0x63, 0x65, 0x2a,
	0x72, 0xe3, 0xc2, 0x70, 0xf1, 0xd0, 0x42, 0xcf, 0xa0, 0x18, 0x15, 0x30, 0x61, 0xe4, 0xd7, 0xb3,
	0x15, 0x30, 0x5e, 0xba, 0x6f, 0xe8, 0x91, 0xb6, 0x66, 0xc3, 0xca, 0x98, 0x10, 0x5a, 0x83, 0xbc,
	0x45, 0x1c, 0xb7, 0x2b, 0xb9, 0xc5, 0x04, 0xdd, 0x87, 0x79, 0xa9, 0x96, 0x12, 0x26, 0x71, 0xf7,
	0x27, 0xb9, 0x42, 0x25, 0xed, 0x4f, 0x19, 0x58, 0x1e, 0xa9, 0x35, 0xe8, 0x3e, 0x14, 0xa8, 0x8f,
	0xfd, 0x80, 0x72, 0xaa, 0xa5, 0x89, 0x37, 0x50, 0xa4, 0x71, 0xc2, 0xa5, 0x75, 0xa9, 0xc5, 0xae,
	0x0e, 0x1e, 0x8b, 0x46, 0x0b, 0xd3, 0x16, 0x37, 0x4b, 0x91, 0xd1, 0xf9, 0x0c, 0xd3, 0x16, 0x8b,
	0x76, 0xd3, 0xb6, 0x78, 0xe7, 0xa5, 0xe8, 0x6c, 0x88, 0x7e, 0x00, 0x79, 0xfe, 0x59, 0x36, 0x4c,
	0x5b, 0xd3, 0x2b, 0xa2, 0x2e, 0x84, 0xb5, 0x36, 0x28, 0xd1, 0xda, 0xf4, 0x20, 0x7f, 0x18, 0xe2,
	0x0b, 0x17, 0x7d, 0x35, 0xc1, 0x45, 0x0c, 0xed, 0xc8, 0xee, 0xda, 0x02, 0x52, 0x7a, 0x4a, 0x92,
	0xfd, 0x25, 0x03, 0xeb, 0xa9, 0x65, 0xf4, 0x7f, 0xef, 0xad, 0xfd, 0xa4, 0xb7, 0x76, 0x67, 0x29,
	0xf9, 0xe1, 0x36, 0x7e, 0x9f, 0x81, 0xe5, 0x91, 0x4f, 0xd3, 0x5d, 0xf7, 0x34, 0xe9, 0xba, 0xef,
	0x26, 0x46, 0x57, 0x88, 0x39, 0xc1, 0x81, 0x8c, 0xc5, 0xa6, 0x86, 0xc0, 0xe5, 0xbb, 0x29, 0xea,
	0x45, 0x9b, 0x3e, 0xe7, 0x73, 0xed, 0x37, 0x39, 0x28, 0x86, 0xf5, 0x78, 0xba, 0x3d, 0x63, 0x99,
	0x98, 0x4d, 0xc9, 0xc4, 0x0d, 0x28, 0xd8, 0xf4, 0xc8, 0x75, 0x9a, 0x92, 0x48, 0xce, 0xd0, 0x03,
	0x28, 0x5e, 0x05, 0xd8, 0xf1, 0x6d, 0x7f, 0xc0, 0x9d, 0xa7, 0xd4, 0x6f, 0x31, 0x13, 0xff, 0xfe,
	0x61, 0xfb, 0x73, 0x51, 0x19, 0xa8, 0xd5, 0xae, 0xd8, 0x6e, 0xb5, 0x8b, 0xfd, 0x56, 0xe5, 0x88,
	0x34, 0xb1, 0x39, 0x38, 0x20, 0xa6, 0x1e, 0x29, 0xa1, 0x03, 0x28, 0x11, 0xc7, 0xf7, 0x06, 0xb2,
	0xb4, 0xe7, 0x67, 0xc7, 0x00, 0xae, 0xc7, 0x6f, 0x00, 0x74, 0x0f, 0x0a, 0x5d, 0xec, 0x35, 0x6d,
	0x87, 0xb7, 0xd9, 0x33, 0x02, 0x48, 0x15, 0xf4, 0x0b, 0x50, 0xcd, 0xa0, 0x1b, 0x74, 0xc4, 0x3d,
	0x7a, 0x19, 0x38, 0x96, 0xed, 0x34, 0x0d, 0x8e, 0xce, 0x9b, 0xea, 0x19, 0xe1, 0x36, 0x86, 0x20,
	0x4f, 0x04, 0xc6, 0x63, 0x06, 0xa1, 0xf9, 0x50, 0x8a, 0xdd, 0x6b, 0xcc, 0x93, 0x74, 0xd0, 0x6d,
	0xb8, 0x1d, 0x79, 0x10, 0x72, 0x86, 0x7e, 0x0c, 0x79, 0xe1, 0x82, 0xec, 0xec, 0x94, 0x42, 0x03,
	0x21, 0x98, 0x63, 0xb5, 0x57, 0x46, 0x34, 0x1f, 0x6b, 0x7f, 0xce, 0x89, 0x5c, 0xe6, 0x7d, 0xd2,
	0xf4, 0x00, 0x58, 0x67, 0x67, 0x6b, 0x34, 0x82, 0x01, 0xa7, 0x2e, 0xea, 0x79, 0x9b, 0xd6, 0x83,
	0x01, 0xda, 0x85, 0x45, 0xf2, 0x86, 0x98, 0x01, 0x8b, 0xa0, 0xd3, 0x21, 0x7c, 0x72, 0xf1, 0x3f,
	0x0f, 0x80, 0x68, 0xdf, 0xf9, 0x6b, 0xef, 0x7b, 0x2c, 0x72, 0x0b, 0x29, 0x91, 0xfb, 0x43, 0xc8,
	0x5d, 0x12, 0x72, 0x9d, 0x83, 0x64, 0xf2, 0x23, 0x35, 0xa4, 0x38, 0x5a, 0x43, 0x7e, 0x04, 0xeb,
	0x97, 0x84, 0x18, 0x1e, 0x31, 0xed, 0x9e, 0x4d, 0x1c, 0xdf, 0xc0, 0x96, 0xe5, 0x11, 0x4a, 0xf9,
	0x7f, 0x17, 0x45, 0xfe, 0x73, 0x58, 0xbd, 0x24, 0x44, 0x0f, 0x25, 0x1e, 0x0a, 0x81, 0xb0, 0xfa,
	0xc0, 0xb0, 0xfa, 0x7c, 0x06, 0x45, 0xde, 0x0b, 0xb3, 0x1d, 0x94, 0xc4, 0x2d, 0xcd, 0xe7, 0x87,
	0x96, 0xf6, 0xb7, 0x5c, 0xbc, 0xb8, 0xfc, 0xb7, 0xcf, 0x72, 0xcc, 0x9f, 0x73, 0x29, 0xfe, 0xfc,
	0x19, 0x2c, 0x85, 0xdd, 0x9d, 0x61, 0x91, 0x8e, 0x8f, 0xe5, 0xdf, 0xe6, 0xdd, 0x09, 0x75, 0x2c,
	0x2c, 0x42, 0x07, 0x4c, 0x56, 0x5f, 0xec, 0xc5, 0xa7, 0x2c, 0x6f, 0x7b, 0x78, 0xe0, 0x06, 0xfe,
	0xb5, 0xf2, 0x56, 0xa8, 0xfc, 0x7f, 0x9f, 0xec, 0x29, 0x2c, 0x24, 0x5e, 0x24, 0xbe, 0x82, 0xa5,
	0x84, 0xef, 0xd9, 0xdd, 0x97, 0x63, 0x47, 0x14, 0x77, 0x3e, 0xbf, 0xda, 0xa2, 0xc3, 0x17, 0x3d,
	0x91, 0xa2, 0x2b, 0xe1, 0xe9, 0x53, 0xed, 0x25, 0x2c, 0x8f, 0xfc, 0x41, 0xfe, 0x44, 0xc0, 0xa7,
	0xb0, 0x90, 0x78, 0x86, 0xf8, 0x34, 0xa8, 0x77, 0x62, 0x8d, 0xbb, 0x04, 0x4e, 0x6a, 0x64, 0xc6,
	0x35, 0xd0, 0xf8, 0xab, 0x18, 0xda, 0x84, 0xa2, 0x24, 0x0d, 0x55, 0xa2, 0xb9, 0xf6, 0x10, 0xd4,
	0x49, 0x0f, 0x5c, 0x33, 0xee, 0x42, 0xfb, 0x0e, 0x56, 0xc6, 0x1e, 0x07, 0x12, 0x75, 0x3c, 0x37,
	0xac, 0xe3, 0xdf, 0x1e, 0x31, 0xe1, 0x91, 0xce, 0x04, 0x2d, 0x43, 0xe9, 0xcc, 0xa1, 0x3d, 0x62,
	0xda, 0x97, 0x36, 0xb1, 0xca, 0x37, 0x10, 0x40, 0xa1, 0xee, 0xba, 0x6d, 0x62, 0x95, 0x33, 0xa8,
	0x04, 0xf3, 0xcf, 0xb1, 0x6f, 0xb6, 0x88, 0x55, 0xce, 0xa2, 0x45, 0x50, 0x1e, 0xb1, 0xad, 0x75,
	0x3a, 0xc4, 0x2a, 0xe7, 0x6a, 0x06, 0x14, 0xc4, 0x43, 0x03, 0x3a, 0x83, 0xa2, 0x18, 0x9d, 0xd7,
	0x90, 0x96, 0xde, 0xce, 0xc5, 0x1f, 0x1c, 0x37, 0x6f, 0x4d, 0x95, 0x11, 0xaf, 0x16, 0x77, 0x32,
	0xf5, 0xf7, 0x19, 0xf8, 0x9e, 0xe9, 0x76, 0xd3, 0x84, 0xeb, 0xf0, 0x22, 0x20, 0xec, 0x86, 0x75,
	0x7d, 0xf7, 0x38, 0xf3, 0xfa, 0x69, 0xac, 0xf9, 0x3f, 0x0c, 0xa5, 0x8f, 0x70, 0x83, 0x56, 0x23,
	0xdd, 0xdb, 0xa6, 0xeb, 0x91, 0xf8, 0xb4, 0x85, 0x6d, 0x27, 0x7c, 0xda, 0xe5, 0x7f, 0x0f, 0xaa,
	0xfd, 0xda, 0x1f, 0xb2, 0xb9, 0xc3, 0x93, 0x57, 0x6f, 0xb3, 0xab, 0x11, 0x88, 0xb4, 0xaa, 0x72,
	0x5e, 0xfb, 0x6b, 0x6c, 0xf5, 0x42, 0xac, 0x5e, 0x9c, 0xd7, 0xfe, 0x99, 0xdd, 0x4e, 0x59, 0xbd,
	0x78, 0x7a, 0x5c, 0x7f, 0x4e, 0x7c, 0x6c, 0x61, 0x1f, 0xff, 0x2b, 0xbb, 0x1e, 0x49, 0xec, 0xef,
	0x0b, 0x91, 0xfd, 0xfd, 0xf3, 0x5a, 0xa3, 0xc0, 0xdf, 0x63, 0xbf, 0xff, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x14, 0x71, 0x38, 0x69, 0x6a, 0x16, 0x00, 0x00,
}
