// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: injective/oracle/v1beta1/query.proto

package types

import (
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryPythPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceId       string                 `protobuf:"bytes,1,opt,name=price_id,json=priceId,proto3" json:"price_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPythPriceRequest) Reset() {
	*x = QueryPythPriceRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPythPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPythPriceRequest) ProtoMessage() {}

func (x *QueryPythPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPythPriceRequest.ProtoReflect.Descriptor instead.
func (*QueryPythPriceRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryPythPriceRequest) GetPriceId() string {
	if x != nil {
		return x.PriceId
	}
	return ""
}

type QueryPythPriceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceState    *PythPriceState        `protobuf:"bytes,1,opt,name=price_state,json=priceState,proto3" json:"price_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPythPriceResponse) Reset() {
	*x = QueryPythPriceResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPythPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPythPriceResponse) ProtoMessage() {}

func (x *QueryPythPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPythPriceResponse.ProtoReflect.Descriptor instead.
func (*QueryPythPriceResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryPythPriceResponse) GetPriceState() *PythPriceState {
	if x != nil {
		return x.PriceState
	}
	return nil
}

// QueryOracleParamsRequest is the request type for the Query/OracleParams RPC
// method.
type QueryParamsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryParamsRequest) Reset() {
	*x = QueryParamsRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParamsRequest) ProtoMessage() {}

func (x *QueryParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryParamsRequest.ProtoReflect.Descriptor instead.
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{2}
}

// QueryOracleParamsResponse is the response type for the Query/OracleParams RPC
// method.
type QueryParamsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *Params                `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryParamsResponse) Reset() {
	*x = QueryParamsResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParamsResponse) ProtoMessage() {}

func (x *QueryParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryParamsResponse.ProtoReflect.Descriptor instead.
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryParamsResponse) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// QueryBandRelayersRequest is the request type for the Query/BandRelayers RPC
// method.
type QueryBandRelayersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBandRelayersRequest) Reset() {
	*x = QueryBandRelayersRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBandRelayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBandRelayersRequest) ProtoMessage() {}

func (x *QueryBandRelayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBandRelayersRequest.ProtoReflect.Descriptor instead.
func (*QueryBandRelayersRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{4}
}

// QueryBandRelayersResponse is the response type for the Query/BandRelayers RPC
// method.
type QueryBandRelayersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Relayers      []string               `protobuf:"bytes,1,rep,name=relayers,proto3" json:"relayers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBandRelayersResponse) Reset() {
	*x = QueryBandRelayersResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBandRelayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBandRelayersResponse) ProtoMessage() {}

func (x *QueryBandRelayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBandRelayersResponse.ProtoReflect.Descriptor instead.
func (*QueryBandRelayersResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryBandRelayersResponse) GetRelayers() []string {
	if x != nil {
		return x.Relayers
	}
	return nil
}

// QueryBandPriceStatesRequest is the request type for the Query/BandPriceStates
// RPC method.
type QueryBandPriceStatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBandPriceStatesRequest) Reset() {
	*x = QueryBandPriceStatesRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBandPriceStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBandPriceStatesRequest) ProtoMessage() {}

func (x *QueryBandPriceStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBandPriceStatesRequest.ProtoReflect.Descriptor instead.
func (*QueryBandPriceStatesRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{6}
}

// QueryBandPriceStatesResponse is the response type for the
// Query/BandPriceStates RPC method.
type QueryBandPriceStatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceStates   []*BandPriceState      `protobuf:"bytes,1,rep,name=price_states,json=priceStates,proto3" json:"price_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBandPriceStatesResponse) Reset() {
	*x = QueryBandPriceStatesResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBandPriceStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBandPriceStatesResponse) ProtoMessage() {}

func (x *QueryBandPriceStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBandPriceStatesResponse.ProtoReflect.Descriptor instead.
func (*QueryBandPriceStatesResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryBandPriceStatesResponse) GetPriceStates() []*BandPriceState {
	if x != nil {
		return x.PriceStates
	}
	return nil
}

// QueryBandIBCPriceStatesRequest is the request type for the
// Query/BandIBCPriceStates RPC method.
type QueryBandIBCPriceStatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBandIBCPriceStatesRequest) Reset() {
	*x = QueryBandIBCPriceStatesRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBandIBCPriceStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBandIBCPriceStatesRequest) ProtoMessage() {}

func (x *QueryBandIBCPriceStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBandIBCPriceStatesRequest.ProtoReflect.Descriptor instead.
func (*QueryBandIBCPriceStatesRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{8}
}

// QueryBandIBCPriceStatesResponse is the response type for the
// Query/BandIBCPriceStates RPC method.
type QueryBandIBCPriceStatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceStates   []*BandPriceState      `protobuf:"bytes,1,rep,name=price_states,json=priceStates,proto3" json:"price_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBandIBCPriceStatesResponse) Reset() {
	*x = QueryBandIBCPriceStatesResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBandIBCPriceStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBandIBCPriceStatesResponse) ProtoMessage() {}

func (x *QueryBandIBCPriceStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBandIBCPriceStatesResponse.ProtoReflect.Descriptor instead.
func (*QueryBandIBCPriceStatesResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryBandIBCPriceStatesResponse) GetPriceStates() []*BandPriceState {
	if x != nil {
		return x.PriceStates
	}
	return nil
}

// QueryPriceFeedPriceStatesRequest is the request type for the
// Query/PriceFeedPriceStates RPC method.
type QueryPriceFeedPriceStatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPriceFeedPriceStatesRequest) Reset() {
	*x = QueryPriceFeedPriceStatesRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPriceFeedPriceStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPriceFeedPriceStatesRequest) ProtoMessage() {}

func (x *QueryPriceFeedPriceStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPriceFeedPriceStatesRequest.ProtoReflect.Descriptor instead.
func (*QueryPriceFeedPriceStatesRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{10}
}

// QueryPriceFeedPriceStatesResponse is the response type for the
// Query/PriceFeedPriceStates RPC method.
type QueryPriceFeedPriceStatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceStates   []*PriceFeedState      `protobuf:"bytes,1,rep,name=price_states,json=priceStates,proto3" json:"price_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPriceFeedPriceStatesResponse) Reset() {
	*x = QueryPriceFeedPriceStatesResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPriceFeedPriceStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPriceFeedPriceStatesResponse) ProtoMessage() {}

func (x *QueryPriceFeedPriceStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPriceFeedPriceStatesResponse.ProtoReflect.Descriptor instead.
func (*QueryPriceFeedPriceStatesResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryPriceFeedPriceStatesResponse) GetPriceStates() []*PriceFeedState {
	if x != nil {
		return x.PriceStates
	}
	return nil
}

// QueryCoinbasePriceStatesRequest is the request type for the
// Query/CoinbasePriceStates RPC method.
type QueryCoinbasePriceStatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCoinbasePriceStatesRequest) Reset() {
	*x = QueryCoinbasePriceStatesRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCoinbasePriceStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCoinbasePriceStatesRequest) ProtoMessage() {}

func (x *QueryCoinbasePriceStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCoinbasePriceStatesRequest.ProtoReflect.Descriptor instead.
func (*QueryCoinbasePriceStatesRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{12}
}

// QueryCoinbasePriceStatesResponse is the response type for the
// Query/CoinbasePriceStates RPC method.
type QueryCoinbasePriceStatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceStates   []*CoinbasePriceState  `protobuf:"bytes,1,rep,name=price_states,json=priceStates,proto3" json:"price_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCoinbasePriceStatesResponse) Reset() {
	*x = QueryCoinbasePriceStatesResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCoinbasePriceStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCoinbasePriceStatesResponse) ProtoMessage() {}

func (x *QueryCoinbasePriceStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCoinbasePriceStatesResponse.ProtoReflect.Descriptor instead.
func (*QueryCoinbasePriceStatesResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{13}
}

func (x *QueryCoinbasePriceStatesResponse) GetPriceStates() []*CoinbasePriceState {
	if x != nil {
		return x.PriceStates
	}
	return nil
}

// QueryPythPriceStatesRequest is the request type for the
// Query/CoinbasePriceStates RPC method.
type QueryPythPriceStatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPythPriceStatesRequest) Reset() {
	*x = QueryPythPriceStatesRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPythPriceStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPythPriceStatesRequest) ProtoMessage() {}

func (x *QueryPythPriceStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPythPriceStatesRequest.ProtoReflect.Descriptor instead.
func (*QueryPythPriceStatesRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{14}
}

// QueryPythPriceStatesResponse is the response type for the
// Query/CoinbasePriceStates RPC method.
type QueryPythPriceStatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceStates   []*PythPriceState      `protobuf:"bytes,1,rep,name=price_states,json=priceStates,proto3" json:"price_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPythPriceStatesResponse) Reset() {
	*x = QueryPythPriceStatesResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPythPriceStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPythPriceStatesResponse) ProtoMessage() {}

func (x *QueryPythPriceStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPythPriceStatesResponse.ProtoReflect.Descriptor instead.
func (*QueryPythPriceStatesResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{15}
}

func (x *QueryPythPriceStatesResponse) GetPriceStates() []*PythPriceState {
	if x != nil {
		return x.PriceStates
	}
	return nil
}

// QueryStorkPriceStatesRequest is the request type for the
// Query/StorkPriceStates RPC method.
type QueryStorkPriceStatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStorkPriceStatesRequest) Reset() {
	*x = QueryStorkPriceStatesRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStorkPriceStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStorkPriceStatesRequest) ProtoMessage() {}

func (x *QueryStorkPriceStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStorkPriceStatesRequest.ProtoReflect.Descriptor instead.
func (*QueryStorkPriceStatesRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{16}
}

// QueryStorkPriceStatesResponse is the response type for the
// Query/StorkPriceStates RPC method.
type QueryStorkPriceStatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceStates   []*StorkPriceState     `protobuf:"bytes,1,rep,name=price_states,json=priceStates,proto3" json:"price_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStorkPriceStatesResponse) Reset() {
	*x = QueryStorkPriceStatesResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStorkPriceStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStorkPriceStatesResponse) ProtoMessage() {}

func (x *QueryStorkPriceStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStorkPriceStatesResponse.ProtoReflect.Descriptor instead.
func (*QueryStorkPriceStatesResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{17}
}

func (x *QueryStorkPriceStatesResponse) GetPriceStates() []*StorkPriceState {
	if x != nil {
		return x.PriceStates
	}
	return nil
}

// QueryStorkPublishersRequest is the request type for the
// Query/StorkPublishers RPC method.
type QueryStorkPublishersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStorkPublishersRequest) Reset() {
	*x = QueryStorkPublishersRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStorkPublishersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStorkPublishersRequest) ProtoMessage() {}

func (x *QueryStorkPublishersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStorkPublishersRequest.ProtoReflect.Descriptor instead.
func (*QueryStorkPublishersRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{18}
}

// QueryStorkPublishersResponse is the response type for the
// Query/StorkPublishers RPC method.
type QueryStorkPublishersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publishers    []string               `protobuf:"bytes,1,rep,name=publishers,proto3" json:"publishers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStorkPublishersResponse) Reset() {
	*x = QueryStorkPublishersResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStorkPublishersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStorkPublishersResponse) ProtoMessage() {}

func (x *QueryStorkPublishersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStorkPublishersResponse.ProtoReflect.Descriptor instead.
func (*QueryStorkPublishersResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{19}
}

func (x *QueryStorkPublishersResponse) GetPublishers() []string {
	if x != nil {
		return x.Publishers
	}
	return nil
}

// QueryProviderPriceStateRequest is the request type for the
// Query/ProviderPriceState RPC method.
type QueryProviderPriceStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryProviderPriceStateRequest) Reset() {
	*x = QueryProviderPriceStateRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryProviderPriceStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProviderPriceStateRequest) ProtoMessage() {}

func (x *QueryProviderPriceStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProviderPriceStateRequest.ProtoReflect.Descriptor instead.
func (*QueryProviderPriceStateRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{20}
}

func (x *QueryProviderPriceStateRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *QueryProviderPriceStateRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

// QueryProviderPriceStatesResponse is the response type for the
// Query/ProviderPriceStates RPC method.
type QueryProviderPriceStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceState    *PriceState            `protobuf:"bytes,1,opt,name=price_state,json=priceState,proto3" json:"price_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryProviderPriceStateResponse) Reset() {
	*x = QueryProviderPriceStateResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryProviderPriceStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProviderPriceStateResponse) ProtoMessage() {}

func (x *QueryProviderPriceStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProviderPriceStateResponse.ProtoReflect.Descriptor instead.
func (*QueryProviderPriceStateResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{21}
}

func (x *QueryProviderPriceStateResponse) GetPriceState() *PriceState {
	if x != nil {
		return x.PriceState
	}
	return nil
}

// QueryModuleStateRequest is the request type for the Query/OracleModuleState
// RPC method.
type QueryModuleStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryModuleStateRequest) Reset() {
	*x = QueryModuleStateRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryModuleStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryModuleStateRequest) ProtoMessage() {}

func (x *QueryModuleStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryModuleStateRequest.ProtoReflect.Descriptor instead.
func (*QueryModuleStateRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{22}
}

// QueryModuleStateResponse is the response type for the Query/OracleModuleState
// RPC method.
type QueryModuleStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *GenesisState          `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryModuleStateResponse) Reset() {
	*x = QueryModuleStateResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryModuleStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryModuleStateResponse) ProtoMessage() {}

func (x *QueryModuleStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryModuleStateResponse.ProtoReflect.Descriptor instead.
func (*QueryModuleStateResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{23}
}

func (x *QueryModuleStateResponse) GetState() *GenesisState {
	if x != nil {
		return x.State
	}
	return nil
}

type QueryHistoricalPriceRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Oracle        OracleType             `protobuf:"varint,1,opt,name=oracle,proto3,enum=injective.oracle.v1beta1.OracleType" json:"oracle,omitempty"`
	SymbolId      string                 `protobuf:"bytes,2,opt,name=symbol_id,json=symbolId,proto3" json:"symbol_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryHistoricalPriceRecordsRequest) Reset() {
	*x = QueryHistoricalPriceRecordsRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryHistoricalPriceRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHistoricalPriceRecordsRequest) ProtoMessage() {}

func (x *QueryHistoricalPriceRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHistoricalPriceRecordsRequest.ProtoReflect.Descriptor instead.
func (*QueryHistoricalPriceRecordsRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{24}
}

func (x *QueryHistoricalPriceRecordsRequest) GetOracle() OracleType {
	if x != nil {
		return x.Oracle
	}
	return OracleType_Unspecified
}

func (x *QueryHistoricalPriceRecordsRequest) GetSymbolId() string {
	if x != nil {
		return x.SymbolId
	}
	return ""
}

type QueryHistoricalPriceRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PriceRecords  []*PriceRecords        `protobuf:"bytes,1,rep,name=price_records,json=priceRecords,proto3" json:"price_records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryHistoricalPriceRecordsResponse) Reset() {
	*x = QueryHistoricalPriceRecordsResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryHistoricalPriceRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHistoricalPriceRecordsResponse) ProtoMessage() {}

func (x *QueryHistoricalPriceRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHistoricalPriceRecordsResponse.ProtoReflect.Descriptor instead.
func (*QueryHistoricalPriceRecordsResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{25}
}

func (x *QueryHistoricalPriceRecordsResponse) GetPriceRecords() []*PriceRecords {
	if x != nil {
		return x.PriceRecords
	}
	return nil
}

type OracleHistoryOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MaxAge restricts the oracle price records oldest age in seconds from the
	// current block time to consider. A value of 0 means use all the records
	// present on the chain.
	MaxAge uint64 `protobuf:"varint,1,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	// If IncludeRawHistory is true, the raw underlying data used for the
	// computation is included in the response
	IncludeRawHistory bool `protobuf:"varint,2,opt,name=include_raw_history,json=includeRawHistory,proto3" json:"include_raw_history,omitempty"`
	// If IncludeMetadata is true, metadata on the computation is included in the
	// response
	IncludeMetadata bool `protobuf:"varint,3,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OracleHistoryOptions) Reset() {
	*x = OracleHistoryOptions{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OracleHistoryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleHistoryOptions) ProtoMessage() {}

func (x *OracleHistoryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleHistoryOptions.ProtoReflect.Descriptor instead.
func (*OracleHistoryOptions) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{26}
}

func (x *OracleHistoryOptions) GetMaxAge() uint64 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *OracleHistoryOptions) GetIncludeRawHistory() bool {
	if x != nil {
		return x.IncludeRawHistory
	}
	return false
}

func (x *OracleHistoryOptions) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

// QueryOracleVolatilityRequest is the request type for Query/OracleVolatility
// RPC method.
type QueryOracleVolatilityRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BaseInfo             *OracleInfo            `protobuf:"bytes,1,opt,name=base_info,json=baseInfo,proto3" json:"base_info,omitempty"`
	QuoteInfo            *OracleInfo            `protobuf:"bytes,2,opt,name=quote_info,json=quoteInfo,proto3" json:"quote_info,omitempty"`
	OracleHistoryOptions *OracleHistoryOptions  `protobuf:"bytes,3,opt,name=oracle_history_options,json=oracleHistoryOptions,proto3" json:"oracle_history_options,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *QueryOracleVolatilityRequest) Reset() {
	*x = QueryOracleVolatilityRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOracleVolatilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOracleVolatilityRequest) ProtoMessage() {}

func (x *QueryOracleVolatilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOracleVolatilityRequest.ProtoReflect.Descriptor instead.
func (*QueryOracleVolatilityRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{27}
}

func (x *QueryOracleVolatilityRequest) GetBaseInfo() *OracleInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *QueryOracleVolatilityRequest) GetQuoteInfo() *OracleInfo {
	if x != nil {
		return x.QuoteInfo
	}
	return nil
}

func (x *QueryOracleVolatilityRequest) GetOracleHistoryOptions() *OracleHistoryOptions {
	if x != nil {
		return x.OracleHistoryOptions
	}
	return nil
}

// QueryOracleVolatilityResponse is the response type for Query/OracleVolatility
// RPC method.
type QueryOracleVolatilityResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Volatility      string                 `protobuf:"bytes,1,opt,name=volatility,proto3" json:"volatility,omitempty"`
	HistoryMetadata *MetadataStatistics    `protobuf:"bytes,2,opt,name=history_metadata,json=historyMetadata,proto3" json:"history_metadata,omitempty"`
	RawHistory      []*PriceRecord         `protobuf:"bytes,3,rep,name=raw_history,json=rawHistory,proto3" json:"raw_history,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryOracleVolatilityResponse) Reset() {
	*x = QueryOracleVolatilityResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOracleVolatilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOracleVolatilityResponse) ProtoMessage() {}

func (x *QueryOracleVolatilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOracleVolatilityResponse.ProtoReflect.Descriptor instead.
func (*QueryOracleVolatilityResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{28}
}

func (x *QueryOracleVolatilityResponse) GetVolatility() string {
	if x != nil {
		return x.Volatility
	}
	return ""
}

func (x *QueryOracleVolatilityResponse) GetHistoryMetadata() *MetadataStatistics {
	if x != nil {
		return x.HistoryMetadata
	}
	return nil
}

func (x *QueryOracleVolatilityResponse) GetRawHistory() []*PriceRecord {
	if x != nil {
		return x.RawHistory
	}
	return nil
}

type QueryOracleProvidersInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOracleProvidersInfoRequest) Reset() {
	*x = QueryOracleProvidersInfoRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOracleProvidersInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOracleProvidersInfoRequest) ProtoMessage() {}

func (x *QueryOracleProvidersInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOracleProvidersInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryOracleProvidersInfoRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{29}
}

type QueryOracleProvidersInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Providers     []*ProviderInfo        `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOracleProvidersInfoResponse) Reset() {
	*x = QueryOracleProvidersInfoResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOracleProvidersInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOracleProvidersInfoResponse) ProtoMessage() {}

func (x *QueryOracleProvidersInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOracleProvidersInfoResponse.ProtoReflect.Descriptor instead.
func (*QueryOracleProvidersInfoResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{30}
}

func (x *QueryOracleProvidersInfoResponse) GetProviders() []*ProviderInfo {
	if x != nil {
		return x.Providers
	}
	return nil
}

type QueryOracleProviderPricesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOracleProviderPricesRequest) Reset() {
	*x = QueryOracleProviderPricesRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOracleProviderPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOracleProviderPricesRequest) ProtoMessage() {}

func (x *QueryOracleProviderPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOracleProviderPricesRequest.ProtoReflect.Descriptor instead.
func (*QueryOracleProviderPricesRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{31}
}

func (x *QueryOracleProviderPricesRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type QueryOracleProviderPricesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProviderState []*ProviderState       `protobuf:"bytes,1,rep,name=providerState,proto3" json:"providerState,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOracleProviderPricesResponse) Reset() {
	*x = QueryOracleProviderPricesResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOracleProviderPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOracleProviderPricesResponse) ProtoMessage() {}

func (x *QueryOracleProviderPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOracleProviderPricesResponse.ProtoReflect.Descriptor instead.
func (*QueryOracleProviderPricesResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{32}
}

func (x *QueryOracleProviderPricesResponse) GetProviderState() []*ProviderState {
	if x != nil {
		return x.ProviderState
	}
	return nil
}

// ScalingOptions defines optional configuration to avoid precision loss. The
// oracle result will be returned as base_price * 10^base_decimals / quote_price
// * 10^quote_decimals
type ScalingOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseDecimals  uint32                 `protobuf:"varint,1,opt,name=base_decimals,json=baseDecimals,proto3" json:"base_decimals,omitempty"`
	QuoteDecimals uint32                 `protobuf:"varint,2,opt,name=quote_decimals,json=quoteDecimals,proto3" json:"quote_decimals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScalingOptions) Reset() {
	*x = ScalingOptions{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScalingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalingOptions) ProtoMessage() {}

func (x *ScalingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalingOptions.ProtoReflect.Descriptor instead.
func (*ScalingOptions) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{33}
}

func (x *ScalingOptions) GetBaseDecimals() uint32 {
	if x != nil {
		return x.BaseDecimals
	}
	return 0
}

func (x *ScalingOptions) GetQuoteDecimals() uint32 {
	if x != nil {
		return x.QuoteDecimals
	}
	return 0
}

// QueryOraclePriceRequest is the request type for the Query/OraclePrice RPC
// method.
type QueryOraclePriceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OracleType     OracleType             `protobuf:"varint,1,opt,name=oracle_type,json=oracleType,proto3,enum=injective.oracle.v1beta1.OracleType" json:"oracle_type,omitempty"`
	Base           string                 `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	Quote          string                 `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`
	ScalingOptions *ScalingOptions        `protobuf:"bytes,4,opt,name=scaling_options,json=scalingOptions,proto3" json:"scaling_options,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryOraclePriceRequest) Reset() {
	*x = QueryOraclePriceRequest{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOraclePriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOraclePriceRequest) ProtoMessage() {}

func (x *QueryOraclePriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOraclePriceRequest.ProtoReflect.Descriptor instead.
func (*QueryOraclePriceRequest) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{34}
}

func (x *QueryOraclePriceRequest) GetOracleType() OracleType {
	if x != nil {
		return x.OracleType
	}
	return OracleType_Unspecified
}

func (x *QueryOraclePriceRequest) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *QueryOraclePriceRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *QueryOraclePriceRequest) GetScalingOptions() *ScalingOptions {
	if x != nil {
		return x.ScalingOptions
	}
	return nil
}

type PricePairState struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	PairPrice            string                 `protobuf:"bytes,1,opt,name=pair_price,json=pairPrice,proto3" json:"pair_price,omitempty"`
	BasePrice            string                 `protobuf:"bytes,2,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	QuotePrice           string                 `protobuf:"bytes,3,opt,name=quote_price,json=quotePrice,proto3" json:"quote_price,omitempty"`
	BaseCumulativePrice  string                 `protobuf:"bytes,4,opt,name=base_cumulative_price,json=baseCumulativePrice,proto3" json:"base_cumulative_price,omitempty"`
	QuoteCumulativePrice string                 `protobuf:"bytes,5,opt,name=quote_cumulative_price,json=quoteCumulativePrice,proto3" json:"quote_cumulative_price,omitempty"`
	BaseTimestamp        int64                  `protobuf:"varint,6,opt,name=base_timestamp,json=baseTimestamp,proto3" json:"base_timestamp,omitempty"`
	QuoteTimestamp       int64                  `protobuf:"varint,7,opt,name=quote_timestamp,json=quoteTimestamp,proto3" json:"quote_timestamp,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PricePairState) Reset() {
	*x = PricePairState{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PricePairState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricePairState) ProtoMessage() {}

func (x *PricePairState) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricePairState.ProtoReflect.Descriptor instead.
func (*PricePairState) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{35}
}

func (x *PricePairState) GetPairPrice() string {
	if x != nil {
		return x.PairPrice
	}
	return ""
}

func (x *PricePairState) GetBasePrice() string {
	if x != nil {
		return x.BasePrice
	}
	return ""
}

func (x *PricePairState) GetQuotePrice() string {
	if x != nil {
		return x.QuotePrice
	}
	return ""
}

func (x *PricePairState) GetBaseCumulativePrice() string {
	if x != nil {
		return x.BaseCumulativePrice
	}
	return ""
}

func (x *PricePairState) GetQuoteCumulativePrice() string {
	if x != nil {
		return x.QuoteCumulativePrice
	}
	return ""
}

func (x *PricePairState) GetBaseTimestamp() int64 {
	if x != nil {
		return x.BaseTimestamp
	}
	return 0
}

func (x *PricePairState) GetQuoteTimestamp() int64 {
	if x != nil {
		return x.QuoteTimestamp
	}
	return 0
}

// QueryOraclePriceResponse is the response type for the Query/OraclePrice RPC
// method.
type QueryOraclePriceResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PricePairState *PricePairState        `protobuf:"bytes,1,opt,name=price_pair_state,json=pricePairState,proto3" json:"price_pair_state,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryOraclePriceResponse) Reset() {
	*x = QueryOraclePriceResponse{}
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOraclePriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOraclePriceResponse) ProtoMessage() {}

func (x *QueryOraclePriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_query_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOraclePriceResponse.ProtoReflect.Descriptor instead.
func (*QueryOraclePriceResponse) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_query_proto_rawDescGZIP(), []int{36}
}

func (x *QueryOraclePriceResponse) GetPricePairState() *PricePairState {
	if x != nil {
		return x.PricePairState
	}
	return nil
}

var File_injective_oracle_v1beta1_query_proto protoreflect.FileDescriptor

const file_injective_oracle_v1beta1_query_proto_rawDesc = "" +
	"\n" +
	"$injective/oracle/v1beta1/query.proto\x12\x18injective.oracle.v1beta1\x1a\x1cgoogle/api/annotations.proto\x1a%injective/oracle/v1beta1/oracle.proto\x1a&injective/oracle/v1beta1/genesis.proto\x1a\x14gogoproto/gogo.proto\"2\n" +
	"\x15QueryPythPriceRequest\x12\x19\n" +
	"\bprice_id\x18\x01 \x01(\tR\apriceId\"c\n" +
	"\x16QueryPythPriceResponse\x12I\n" +
	"\vprice_state\x18\x01 \x01(\v2(.injective.oracle.v1beta1.PythPriceStateR\n" +
	"priceState\"\x14\n" +
	"\x12QueryParamsRequest\"U\n" +
	"\x13QueryParamsResponse\x12>\n" +
	"\x06params\x18\x01 \x01(\v2 .injective.oracle.v1beta1.ParamsB\x04\xc8\xde\x1f\x00R\x06params\"\x1a\n" +
	"\x18QueryBandRelayersRequest\"7\n" +
	"\x19QueryBandRelayersResponse\x12\x1a\n" +
	"\brelayers\x18\x01 \x03(\tR\brelayers\"\x1d\n" +
	"\x1bQueryBandPriceStatesRequest\"k\n" +
	"\x1cQueryBandPriceStatesResponse\x12K\n" +
	"\fprice_states\x18\x01 \x03(\v2(.injective.oracle.v1beta1.BandPriceStateR\vpriceStates\" \n" +
	"\x1eQueryBandIBCPriceStatesRequest\"n\n" +
	"\x1fQueryBandIBCPriceStatesResponse\x12K\n" +
	"\fprice_states\x18\x01 \x03(\v2(.injective.oracle.v1beta1.BandPriceStateR\vpriceStates\"\"\n" +
	" QueryPriceFeedPriceStatesRequest\"p\n" +
	"!QueryPriceFeedPriceStatesResponse\x12K\n" +
	"\fprice_states\x18\x01 \x03(\v2(.injective.oracle.v1beta1.PriceFeedStateR\vpriceStates\"!\n" +
	"\x1fQueryCoinbasePriceStatesRequest\"s\n" +
	" QueryCoinbasePriceStatesResponse\x12O\n" +
	"\fprice_states\x18\x01 \x03(\v2,.injective.oracle.v1beta1.CoinbasePriceStateR\vpriceStates\"\x1d\n" +
	"\x1bQueryPythPriceStatesRequest\"k\n" +
	"\x1cQueryPythPriceStatesResponse\x12K\n" +
	"\fprice_states\x18\x01 \x03(\v2(.injective.oracle.v1beta1.PythPriceStateR\vpriceStates\"\x1e\n" +
	"\x1cQueryStorkPriceStatesRequest\"m\n" +
	"\x1dQueryStorkPriceStatesResponse\x12L\n" +
	"\fprice_states\x18\x01 \x03(\v2).injective.oracle.v1beta1.StorkPriceStateR\vpriceStates\"\x1d\n" +
	"\x1bQueryStorkPublishersRequest\">\n" +
	"\x1cQueryStorkPublishersResponse\x12\x1e\n" +
	"\n" +
	"publishers\x18\x01 \x03(\tR\n" +
	"publishers\"T\n" +
	"\x1eQueryProviderPriceStateRequest\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\"h\n" +
	"\x1fQueryProviderPriceStateResponse\x12E\n" +
	"\vprice_state\x18\x01 \x01(\v2$.injective.oracle.v1beta1.PriceStateR\n" +
	"priceState\"\x19\n" +
	"\x17QueryModuleStateRequest\"X\n" +
	"\x18QueryModuleStateResponse\x12<\n" +
	"\x05state\x18\x01 \x01(\v2&.injective.oracle.v1beta1.GenesisStateR\x05state\"\x7f\n" +
	"\"QueryHistoricalPriceRecordsRequest\x12<\n" +
	"\x06oracle\x18\x01 \x01(\x0e2$.injective.oracle.v1beta1.OracleTypeR\x06oracle\x12\x1b\n" +
	"\tsymbol_id\x18\x02 \x01(\tR\bsymbolId\"r\n" +
	"#QueryHistoricalPriceRecordsResponse\x12K\n" +
	"\rprice_records\x18\x01 \x03(\v2&.injective.oracle.v1beta1.PriceRecordsR\fpriceRecords\"\x8a\x01\n" +
	"\x14OracleHistoryOptions\x12\x17\n" +
	"\amax_age\x18\x01 \x01(\x04R\x06maxAge\x12.\n" +
	"\x13include_raw_history\x18\x02 \x01(\bR\x11includeRawHistory\x12)\n" +
	"\x10include_metadata\x18\x03 \x01(\bR\x0fincludeMetadata\"\x8c\x02\n" +
	"\x1cQueryOracleVolatilityRequest\x12A\n" +
	"\tbase_info\x18\x01 \x01(\v2$.injective.oracle.v1beta1.OracleInfoR\bbaseInfo\x12C\n" +
	"\n" +
	"quote_info\x18\x02 \x01(\v2$.injective.oracle.v1beta1.OracleInfoR\tquoteInfo\x12d\n" +
	"\x16oracle_history_options\x18\x03 \x01(\v2..injective.oracle.v1beta1.OracleHistoryOptionsR\x14oracleHistoryOptions\"\x81\x02\n" +
	"\x1dQueryOracleVolatilityResponse\x12?\n" +
	"\n" +
	"volatility\x18\x01 \x01(\tB\x1f\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\n" +
	"volatility\x12W\n" +
	"\x10history_metadata\x18\x02 \x01(\v2,.injective.oracle.v1beta1.MetadataStatisticsR\x0fhistoryMetadata\x12F\n" +
	"\vraw_history\x18\x03 \x03(\v2%.injective.oracle.v1beta1.PriceRecordR\n" +
	"rawHistory\"!\n" +
	"\x1fQueryOracleProvidersInfoRequest\"h\n" +
	" QueryOracleProvidersInfoResponse\x12D\n" +
	"\tproviders\x18\x01 \x03(\v2&.injective.oracle.v1beta1.ProviderInfoR\tproviders\">\n" +
	" QueryOracleProviderPricesRequest\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\"r\n" +
	"!QueryOracleProviderPricesResponse\x12M\n" +
	"\rproviderState\x18\x01 \x03(\v2'.injective.oracle.v1beta1.ProviderStateR\rproviderState\"\\\n" +
	"\x0eScalingOptions\x12#\n" +
	"\rbase_decimals\x18\x01 \x01(\rR\fbaseDecimals\x12%\n" +
	"\x0equote_decimals\x18\x02 \x01(\rR\rquoteDecimals\"\xe3\x01\n" +
	"\x17QueryOraclePriceRequest\x12E\n" +
	"\voracle_type\x18\x01 \x01(\x0e2$.injective.oracle.v1beta1.OracleTypeR\n" +
	"oracleType\x12\x12\n" +
	"\x04base\x18\x02 \x01(\tR\x04base\x12\x14\n" +
	"\x05quote\x18\x03 \x01(\tR\x05quote\x12W\n" +
	"\x0fscaling_options\x18\x04 \x01(\v2(.injective.oracle.v1beta1.ScalingOptionsB\x04\xc8\xde\x1f\x01R\x0escalingOptions\"\xe2\x03\n" +
	"\x0ePricePairState\x12B\n" +
	"\n" +
	"pair_price\x18\x01 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\tpairPrice\x12B\n" +
	"\n" +
	"base_price\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\tbasePrice\x12D\n" +
	"\vquote_price\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\n" +
	"quotePrice\x12W\n" +
	"\x15base_cumulative_price\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x13baseCumulativePrice\x12Y\n" +
	"\x16quote_cumulative_price\x18\x05 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x14quoteCumulativePrice\x12%\n" +
	"\x0ebase_timestamp\x18\x06 \x01(\x03R\rbaseTimestamp\x12'\n" +
	"\x0fquote_timestamp\x18\a \x01(\x03R\x0equoteTimestamp\"n\n" +
	"\x18QueryOraclePriceResponse\x12R\n" +
	"\x10price_pair_state\x18\x01 \x01(\v2(.injective.oracle.v1beta1.PricePairStateR\x0epricePairState2\xcd\x18\n" +
	"\x05Query\x12\x8f\x01\n" +
	"\x06Params\x12,.injective.oracle.v1beta1.QueryParamsRequest\x1a-.injective.oracle.v1beta1.QueryParamsResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /injective/oracle/v1beta1/params\x12\xa8\x01\n" +
	"\fBandRelayers\x122.injective.oracle.v1beta1.QueryBandRelayersRequest\x1a3.injective.oracle.v1beta1.QueryBandRelayersResponse\"/\x82\xd3\xe4\x93\x02)\x12'/injective/oracle/v1beta1/band_relayers\x12\xb5\x01\n" +
	"\x0fBandPriceStates\x125.injective.oracle.v1beta1.QueryBandPriceStatesRequest\x1a6.injective.oracle.v1beta1.QueryBandPriceStatesResponse\"3\x82\xd3\xe4\x93\x02-\x12+/injective/oracle/v1beta1/band_price_states\x12\xc2\x01\n" +
	"\x12BandIBCPriceStates\x128.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest\x1a9.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse\"7\x82\xd3\xe4\x93\x021\x12//injective/oracle/v1beta1/band_ibc_price_states\x12\xc9\x01\n" +
	"\x14PriceFeedPriceStates\x12:.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest\x1a;.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse\"8\x82\xd3\xe4\x93\x022\x120/injective/oracle/v1beta1/pricefeed_price_states\x12\xc5\x01\n" +
	"\x13CoinbasePriceStates\x129.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest\x1a:.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse\"7\x82\xd3\xe4\x93\x021\x12//injective/oracle/v1beta1/coinbase_price_states\x12\xb5\x01\n" +
	"\x0fPythPriceStates\x125.injective.oracle.v1beta1.QueryPythPriceStatesRequest\x1a6.injective.oracle.v1beta1.QueryPythPriceStatesResponse\"3\x82\xd3\xe4\x93\x02-\x12+/injective/oracle/v1beta1/pyth_price_states\x12\xb9\x01\n" +
	"\x10StorkPriceStates\x126.injective.oracle.v1beta1.QueryStorkPriceStatesRequest\x1a7.injective.oracle.v1beta1.QueryStorkPriceStatesResponse\"4\x82\xd3\xe4\x93\x02.\x12,/injective/oracle/v1beta1/stork_price_states\x12\xb4\x01\n" +
	"\x0fStorkPublishers\x125.injective.oracle.v1beta1.QueryStorkPublishersRequest\x1a6.injective.oracle.v1beta1.QueryStorkPublishersResponse\"2\x82\xd3\xe4\x93\x02,\x12*/injective/oracle/v1beta1/stork_publishers\x12\xd5\x01\n" +
	"\x12ProviderPriceState\x128.injective.oracle.v1beta1.QueryProviderPriceStateRequest\x1a9.injective.oracle.v1beta1.QueryProviderPriceStateResponse\"J\x82\xd3\xe4\x93\x02D\x12B/injective/oracle/v1beta1/provider_price_state/{provider}/{symbol}\x12\xaa\x01\n" +
	"\x11OracleModuleState\x121.injective.oracle.v1beta1.QueryModuleStateRequest\x1a2.injective.oracle.v1beta1.QueryModuleStateResponse\".\x82\xd3\xe4\x93\x02(\x12&/injective/oracle/v1beta1/module_state\x12\xd1\x01\n" +
	"\x16HistoricalPriceRecords\x12<.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest\x1a=.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse\":\x82\xd3\xe4\x93\x024\x122/injective/oracle/v1beta1/historical_price_records\x12\xb1\x01\n" +
	"\x10OracleVolatility\x126.injective.oracle.v1beta1.QueryOracleVolatilityRequest\x1a7.injective.oracle.v1beta1.QueryOracleVolatilityResponse\",\x82\xd3\xe4\x93\x02&\x12$/injective/oracle/v1beta1/volatility\x12\xb9\x01\n" +
	"\x13OracleProvidersInfo\x129.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest\x1a:.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse\"+\x82\xd3\xe4\x93\x02%\x12#/injective/oracle/v1beta1/providers\x12\xc2\x01\n" +
	"\x14OracleProviderPrices\x12:.injective.oracle.v1beta1.QueryOracleProviderPricesRequest\x1a;.injective.oracle.v1beta1.QueryOracleProviderPricesResponse\"1\x82\xd3\xe4\x93\x02+\x12)/injective/oracle/v1beta1/provider_prices\x12\x9d\x01\n" +
	"\vOraclePrice\x121.injective.oracle.v1beta1.QueryOraclePriceRequest\x1a2.injective.oracle.v1beta1.QueryOraclePriceResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/injective/oracle/v1beta1/price\x12\x9c\x01\n" +
	"\tPythPrice\x12/.injective.oracle.v1beta1.QueryPythPriceRequest\x1a0.injective.oracle.v1beta1.QueryPythPriceResponse\",\x82\xd3\xe4\x93\x02&\x12$/injective/oracle/v1beta1/pyth_priceBNZLgithub.com/InjectiveLabs/injective-core/injective-chain/modules/oracle/typesb\x06proto3"

var (
	file_injective_oracle_v1beta1_query_proto_rawDescOnce sync.Once
	file_injective_oracle_v1beta1_query_proto_rawDescData []byte
)

func file_injective_oracle_v1beta1_query_proto_rawDescGZIP() []byte {
	file_injective_oracle_v1beta1_query_proto_rawDescOnce.Do(func() {
		file_injective_oracle_v1beta1_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_injective_oracle_v1beta1_query_proto_rawDesc), len(file_injective_oracle_v1beta1_query_proto_rawDesc)))
	})
	return file_injective_oracle_v1beta1_query_proto_rawDescData
}

var file_injective_oracle_v1beta1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_injective_oracle_v1beta1_query_proto_goTypes = []any{
	(*QueryPythPriceRequest)(nil),               // 0: injective.oracle.v1beta1.QueryPythPriceRequest
	(*QueryPythPriceResponse)(nil),              // 1: injective.oracle.v1beta1.QueryPythPriceResponse
	(*QueryParamsRequest)(nil),                  // 2: injective.oracle.v1beta1.QueryParamsRequest
	(*QueryParamsResponse)(nil),                 // 3: injective.oracle.v1beta1.QueryParamsResponse
	(*QueryBandRelayersRequest)(nil),            // 4: injective.oracle.v1beta1.QueryBandRelayersRequest
	(*QueryBandRelayersResponse)(nil),           // 5: injective.oracle.v1beta1.QueryBandRelayersResponse
	(*QueryBandPriceStatesRequest)(nil),         // 6: injective.oracle.v1beta1.QueryBandPriceStatesRequest
	(*QueryBandPriceStatesResponse)(nil),        // 7: injective.oracle.v1beta1.QueryBandPriceStatesResponse
	(*QueryBandIBCPriceStatesRequest)(nil),      // 8: injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest
	(*QueryBandIBCPriceStatesResponse)(nil),     // 9: injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse
	(*QueryPriceFeedPriceStatesRequest)(nil),    // 10: injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest
	(*QueryPriceFeedPriceStatesResponse)(nil),   // 11: injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse
	(*QueryCoinbasePriceStatesRequest)(nil),     // 12: injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest
	(*QueryCoinbasePriceStatesResponse)(nil),    // 13: injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse
	(*QueryPythPriceStatesRequest)(nil),         // 14: injective.oracle.v1beta1.QueryPythPriceStatesRequest
	(*QueryPythPriceStatesResponse)(nil),        // 15: injective.oracle.v1beta1.QueryPythPriceStatesResponse
	(*QueryStorkPriceStatesRequest)(nil),        // 16: injective.oracle.v1beta1.QueryStorkPriceStatesRequest
	(*QueryStorkPriceStatesResponse)(nil),       // 17: injective.oracle.v1beta1.QueryStorkPriceStatesResponse
	(*QueryStorkPublishersRequest)(nil),         // 18: injective.oracle.v1beta1.QueryStorkPublishersRequest
	(*QueryStorkPublishersResponse)(nil),        // 19: injective.oracle.v1beta1.QueryStorkPublishersResponse
	(*QueryProviderPriceStateRequest)(nil),      // 20: injective.oracle.v1beta1.QueryProviderPriceStateRequest
	(*QueryProviderPriceStateResponse)(nil),     // 21: injective.oracle.v1beta1.QueryProviderPriceStateResponse
	(*QueryModuleStateRequest)(nil),             // 22: injective.oracle.v1beta1.QueryModuleStateRequest
	(*QueryModuleStateResponse)(nil),            // 23: injective.oracle.v1beta1.QueryModuleStateResponse
	(*QueryHistoricalPriceRecordsRequest)(nil),  // 24: injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest
	(*QueryHistoricalPriceRecordsResponse)(nil), // 25: injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse
	(*OracleHistoryOptions)(nil),                // 26: injective.oracle.v1beta1.OracleHistoryOptions
	(*QueryOracleVolatilityRequest)(nil),        // 27: injective.oracle.v1beta1.QueryOracleVolatilityRequest
	(*QueryOracleVolatilityResponse)(nil),       // 28: injective.oracle.v1beta1.QueryOracleVolatilityResponse
	(*QueryOracleProvidersInfoRequest)(nil),     // 29: injective.oracle.v1beta1.QueryOracleProvidersInfoRequest
	(*QueryOracleProvidersInfoResponse)(nil),    // 30: injective.oracle.v1beta1.QueryOracleProvidersInfoResponse
	(*QueryOracleProviderPricesRequest)(nil),    // 31: injective.oracle.v1beta1.QueryOracleProviderPricesRequest
	(*QueryOracleProviderPricesResponse)(nil),   // 32: injective.oracle.v1beta1.QueryOracleProviderPricesResponse
	(*ScalingOptions)(nil),                      // 33: injective.oracle.v1beta1.ScalingOptions
	(*QueryOraclePriceRequest)(nil),             // 34: injective.oracle.v1beta1.QueryOraclePriceRequest
	(*PricePairState)(nil),                      // 35: injective.oracle.v1beta1.PricePairState
	(*QueryOraclePriceResponse)(nil),            // 36: injective.oracle.v1beta1.QueryOraclePriceResponse
	(*PythPriceState)(nil),                      // 37: injective.oracle.v1beta1.PythPriceState
	(*Params)(nil),                              // 38: injective.oracle.v1beta1.Params
	(*BandPriceState)(nil),                      // 39: injective.oracle.v1beta1.BandPriceState
	(*PriceFeedState)(nil),                      // 40: injective.oracle.v1beta1.PriceFeedState
	(*CoinbasePriceState)(nil),                  // 41: injective.oracle.v1beta1.CoinbasePriceState
	(*StorkPriceState)(nil),                     // 42: injective.oracle.v1beta1.StorkPriceState
	(*PriceState)(nil),                          // 43: injective.oracle.v1beta1.PriceState
	(*GenesisState)(nil),                        // 44: injective.oracle.v1beta1.GenesisState
	(OracleType)(0),                             // 45: injective.oracle.v1beta1.OracleType
	(*PriceRecords)(nil),                        // 46: injective.oracle.v1beta1.PriceRecords
	(*OracleInfo)(nil),                          // 47: injective.oracle.v1beta1.OracleInfo
	(*MetadataStatistics)(nil),                  // 48: injective.oracle.v1beta1.MetadataStatistics
	(*PriceRecord)(nil),                         // 49: injective.oracle.v1beta1.PriceRecord
	(*ProviderInfo)(nil),                        // 50: injective.oracle.v1beta1.ProviderInfo
	(*ProviderState)(nil),                       // 51: injective.oracle.v1beta1.ProviderState
}
var file_injective_oracle_v1beta1_query_proto_depIdxs = []int32{
	37, // 0: injective.oracle.v1beta1.QueryPythPriceResponse.price_state:type_name -> injective.oracle.v1beta1.PythPriceState
	38, // 1: injective.oracle.v1beta1.QueryParamsResponse.params:type_name -> injective.oracle.v1beta1.Params
	39, // 2: injective.oracle.v1beta1.QueryBandPriceStatesResponse.price_states:type_name -> injective.oracle.v1beta1.BandPriceState
	39, // 3: injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.price_states:type_name -> injective.oracle.v1beta1.BandPriceState
	40, // 4: injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.price_states:type_name -> injective.oracle.v1beta1.PriceFeedState
	41, // 5: injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.price_states:type_name -> injective.oracle.v1beta1.CoinbasePriceState
	37, // 6: injective.oracle.v1beta1.QueryPythPriceStatesResponse.price_states:type_name -> injective.oracle.v1beta1.PythPriceState
	42, // 7: injective.oracle.v1beta1.QueryStorkPriceStatesResponse.price_states:type_name -> injective.oracle.v1beta1.StorkPriceState
	43, // 8: injective.oracle.v1beta1.QueryProviderPriceStateResponse.price_state:type_name -> injective.oracle.v1beta1.PriceState
	44, // 9: injective.oracle.v1beta1.QueryModuleStateResponse.state:type_name -> injective.oracle.v1beta1.GenesisState
	45, // 10: injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.oracle:type_name -> injective.oracle.v1beta1.OracleType
	46, // 11: injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.price_records:type_name -> injective.oracle.v1beta1.PriceRecords
	47, // 12: injective.oracle.v1beta1.QueryOracleVolatilityRequest.base_info:type_name -> injective.oracle.v1beta1.OracleInfo
	47, // 13: injective.oracle.v1beta1.QueryOracleVolatilityRequest.quote_info:type_name -> injective.oracle.v1beta1.OracleInfo
	26, // 14: injective.oracle.v1beta1.QueryOracleVolatilityRequest.oracle_history_options:type_name -> injective.oracle.v1beta1.OracleHistoryOptions
	48, // 15: injective.oracle.v1beta1.QueryOracleVolatilityResponse.history_metadata:type_name -> injective.oracle.v1beta1.MetadataStatistics
	49, // 16: injective.oracle.v1beta1.QueryOracleVolatilityResponse.raw_history:type_name -> injective.oracle.v1beta1.PriceRecord
	50, // 17: injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.providers:type_name -> injective.oracle.v1beta1.ProviderInfo
	51, // 18: injective.oracle.v1beta1.QueryOracleProviderPricesResponse.providerState:type_name -> injective.oracle.v1beta1.ProviderState
	45, // 19: injective.oracle.v1beta1.QueryOraclePriceRequest.oracle_type:type_name -> injective.oracle.v1beta1.OracleType
	33, // 20: injective.oracle.v1beta1.QueryOraclePriceRequest.scaling_options:type_name -> injective.oracle.v1beta1.ScalingOptions
	35, // 21: injective.oracle.v1beta1.QueryOraclePriceResponse.price_pair_state:type_name -> injective.oracle.v1beta1.PricePairState
	2,  // 22: injective.oracle.v1beta1.Query.Params:input_type -> injective.oracle.v1beta1.QueryParamsRequest
	4,  // 23: injective.oracle.v1beta1.Query.BandRelayers:input_type -> injective.oracle.v1beta1.QueryBandRelayersRequest
	6,  // 24: injective.oracle.v1beta1.Query.BandPriceStates:input_type -> injective.oracle.v1beta1.QueryBandPriceStatesRequest
	8,  // 25: injective.oracle.v1beta1.Query.BandIBCPriceStates:input_type -> injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest
	10, // 26: injective.oracle.v1beta1.Query.PriceFeedPriceStates:input_type -> injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest
	12, // 27: injective.oracle.v1beta1.Query.CoinbasePriceStates:input_type -> injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest
	14, // 28: injective.oracle.v1beta1.Query.PythPriceStates:input_type -> injective.oracle.v1beta1.QueryPythPriceStatesRequest
	16, // 29: injective.oracle.v1beta1.Query.StorkPriceStates:input_type -> injective.oracle.v1beta1.QueryStorkPriceStatesRequest
	18, // 30: injective.oracle.v1beta1.Query.StorkPublishers:input_type -> injective.oracle.v1beta1.QueryStorkPublishersRequest
	20, // 31: injective.oracle.v1beta1.Query.ProviderPriceState:input_type -> injective.oracle.v1beta1.QueryProviderPriceStateRequest
	22, // 32: injective.oracle.v1beta1.Query.OracleModuleState:input_type -> injective.oracle.v1beta1.QueryModuleStateRequest
	24, // 33: injective.oracle.v1beta1.Query.HistoricalPriceRecords:input_type -> injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest
	27, // 34: injective.oracle.v1beta1.Query.OracleVolatility:input_type -> injective.oracle.v1beta1.QueryOracleVolatilityRequest
	29, // 35: injective.oracle.v1beta1.Query.OracleProvidersInfo:input_type -> injective.oracle.v1beta1.QueryOracleProvidersInfoRequest
	31, // 36: injective.oracle.v1beta1.Query.OracleProviderPrices:input_type -> injective.oracle.v1beta1.QueryOracleProviderPricesRequest
	34, // 37: injective.oracle.v1beta1.Query.OraclePrice:input_type -> injective.oracle.v1beta1.QueryOraclePriceRequest
	0,  // 38: injective.oracle.v1beta1.Query.PythPrice:input_type -> injective.oracle.v1beta1.QueryPythPriceRequest
	3,  // 39: injective.oracle.v1beta1.Query.Params:output_type -> injective.oracle.v1beta1.QueryParamsResponse
	5,  // 40: injective.oracle.v1beta1.Query.BandRelayers:output_type -> injective.oracle.v1beta1.QueryBandRelayersResponse
	7,  // 41: injective.oracle.v1beta1.Query.BandPriceStates:output_type -> injective.oracle.v1beta1.QueryBandPriceStatesResponse
	9,  // 42: injective.oracle.v1beta1.Query.BandIBCPriceStates:output_type -> injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse
	11, // 43: injective.oracle.v1beta1.Query.PriceFeedPriceStates:output_type -> injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse
	13, // 44: injective.oracle.v1beta1.Query.CoinbasePriceStates:output_type -> injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse
	15, // 45: injective.oracle.v1beta1.Query.PythPriceStates:output_type -> injective.oracle.v1beta1.QueryPythPriceStatesResponse
	17, // 46: injective.oracle.v1beta1.Query.StorkPriceStates:output_type -> injective.oracle.v1beta1.QueryStorkPriceStatesResponse
	19, // 47: injective.oracle.v1beta1.Query.StorkPublishers:output_type -> injective.oracle.v1beta1.QueryStorkPublishersResponse
	21, // 48: injective.oracle.v1beta1.Query.ProviderPriceState:output_type -> injective.oracle.v1beta1.QueryProviderPriceStateResponse
	23, // 49: injective.oracle.v1beta1.Query.OracleModuleState:output_type -> injective.oracle.v1beta1.QueryModuleStateResponse
	25, // 50: injective.oracle.v1beta1.Query.HistoricalPriceRecords:output_type -> injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse
	28, // 51: injective.oracle.v1beta1.Query.OracleVolatility:output_type -> injective.oracle.v1beta1.QueryOracleVolatilityResponse
	30, // 52: injective.oracle.v1beta1.Query.OracleProvidersInfo:output_type -> injective.oracle.v1beta1.QueryOracleProvidersInfoResponse
	32, // 53: injective.oracle.v1beta1.Query.OracleProviderPrices:output_type -> injective.oracle.v1beta1.QueryOracleProviderPricesResponse
	36, // 54: injective.oracle.v1beta1.Query.OraclePrice:output_type -> injective.oracle.v1beta1.QueryOraclePriceResponse
	1,  // 55: injective.oracle.v1beta1.Query.PythPrice:output_type -> injective.oracle.v1beta1.QueryPythPriceResponse
	39, // [39:56] is the sub-list for method output_type
	22, // [22:39] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_injective_oracle_v1beta1_query_proto_init() }
func file_injective_oracle_v1beta1_query_proto_init() {
	if File_injective_oracle_v1beta1_query_proto != nil {
		return
	}
	file_injective_oracle_v1beta1_oracle_proto_init()
	file_injective_oracle_v1beta1_genesis_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_injective_oracle_v1beta1_query_proto_rawDesc), len(file_injective_oracle_v1beta1_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_injective_oracle_v1beta1_query_proto_goTypes,
		DependencyIndexes: file_injective_oracle_v1beta1_query_proto_depIdxs,
		MessageInfos:      file_injective_oracle_v1beta1_query_proto_msgTypes,
	}.Build()
	File_injective_oracle_v1beta1_query_proto = out.File
	file_injective_oracle_v1beta1_query_proto_goTypes = nil
	file_injective_oracle_v1beta1_query_proto_depIdxs = nil
}
