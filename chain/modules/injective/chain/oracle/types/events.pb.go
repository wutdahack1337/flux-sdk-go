// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: injective/oracle/v1beta1/events.proto

package types

import (
	_ "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetChainlinkPriceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeedId        string                 `protobuf:"bytes,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	Answer        string                 `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetChainlinkPriceEvent) Reset() {
	*x = SetChainlinkPriceEvent{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetChainlinkPriceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChainlinkPriceEvent) ProtoMessage() {}

func (x *SetChainlinkPriceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChainlinkPriceEvent.ProtoReflect.Descriptor instead.
func (*SetChainlinkPriceEvent) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{0}
}

func (x *SetChainlinkPriceEvent) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

func (x *SetChainlinkPriceEvent) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *SetChainlinkPriceEvent) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Event type upon set ref
type SetBandPriceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Relayer       string                 `protobuf:"bytes,1,opt,name=relayer,proto3" json:"relayer,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price         string                 `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	ResolveTime   uint64                 `protobuf:"varint,4,opt,name=resolve_time,json=resolveTime,proto3" json:"resolve_time,omitempty"`
	RequestId     uint64                 `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetBandPriceEvent) Reset() {
	*x = SetBandPriceEvent{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBandPriceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBandPriceEvent) ProtoMessage() {}

func (x *SetBandPriceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBandPriceEvent.ProtoReflect.Descriptor instead.
func (*SetBandPriceEvent) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{1}
}

func (x *SetBandPriceEvent) GetRelayer() string {
	if x != nil {
		return x.Relayer
	}
	return ""
}

func (x *SetBandPriceEvent) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SetBandPriceEvent) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *SetBandPriceEvent) GetResolveTime() uint64 {
	if x != nil {
		return x.ResolveTime
	}
	return 0
}

func (x *SetBandPriceEvent) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type SetBandIBCPriceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Relayer       string                 `protobuf:"bytes,1,opt,name=relayer,proto3" json:"relayer,omitempty"`
	Symbols       []string               `protobuf:"bytes,2,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Prices        []string               `protobuf:"bytes,3,rep,name=prices,proto3" json:"prices,omitempty"`
	ResolveTime   uint64                 `protobuf:"varint,4,opt,name=resolve_time,json=resolveTime,proto3" json:"resolve_time,omitempty"`
	RequestId     uint64                 `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ClientId      int64                  `protobuf:"varint,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetBandIBCPriceEvent) Reset() {
	*x = SetBandIBCPriceEvent{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBandIBCPriceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBandIBCPriceEvent) ProtoMessage() {}

func (x *SetBandIBCPriceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBandIBCPriceEvent.ProtoReflect.Descriptor instead.
func (*SetBandIBCPriceEvent) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{2}
}

func (x *SetBandIBCPriceEvent) GetRelayer() string {
	if x != nil {
		return x.Relayer
	}
	return ""
}

func (x *SetBandIBCPriceEvent) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *SetBandIBCPriceEvent) GetPrices() []string {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *SetBandIBCPriceEvent) GetResolveTime() uint64 {
	if x != nil {
		return x.ResolveTime
	}
	return 0
}

func (x *SetBandIBCPriceEvent) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SetBandIBCPriceEvent) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type EventBandIBCAckSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AckResult     string                 `protobuf:"bytes,1,opt,name=ack_result,json=ackResult,proto3" json:"ack_result,omitempty"`
	ClientId      int64                  `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBandIBCAckSuccess) Reset() {
	*x = EventBandIBCAckSuccess{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBandIBCAckSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBandIBCAckSuccess) ProtoMessage() {}

func (x *EventBandIBCAckSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBandIBCAckSuccess.ProtoReflect.Descriptor instead.
func (*EventBandIBCAckSuccess) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventBandIBCAckSuccess) GetAckResult() string {
	if x != nil {
		return x.AckResult
	}
	return ""
}

func (x *EventBandIBCAckSuccess) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type EventBandIBCAckError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AckError      string                 `protobuf:"bytes,1,opt,name=ack_error,json=ackError,proto3" json:"ack_error,omitempty"`
	ClientId      int64                  `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBandIBCAckError) Reset() {
	*x = EventBandIBCAckError{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBandIBCAckError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBandIBCAckError) ProtoMessage() {}

func (x *EventBandIBCAckError) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBandIBCAckError.ProtoReflect.Descriptor instead.
func (*EventBandIBCAckError) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventBandIBCAckError) GetAckError() string {
	if x != nil {
		return x.AckError
	}
	return ""
}

func (x *EventBandIBCAckError) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type EventBandIBCResponseTimeout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int64                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBandIBCResponseTimeout) Reset() {
	*x = EventBandIBCResponseTimeout{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBandIBCResponseTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBandIBCResponseTimeout) ProtoMessage() {}

func (x *EventBandIBCResponseTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBandIBCResponseTimeout.ProtoReflect.Descriptor instead.
func (*EventBandIBCResponseTimeout) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventBandIBCResponseTimeout) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type SetPriceFeedPriceEvent struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Relayer string                 `protobuf:"bytes,1,opt,name=relayer,proto3" json:"relayer,omitempty"`
	Base    string                 `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	Quote   string                 `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`
	// price defines the price of the oracle base and quote
	Price         string `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPriceFeedPriceEvent) Reset() {
	*x = SetPriceFeedPriceEvent{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPriceFeedPriceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPriceFeedPriceEvent) ProtoMessage() {}

func (x *SetPriceFeedPriceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPriceFeedPriceEvent.ProtoReflect.Descriptor instead.
func (*SetPriceFeedPriceEvent) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{6}
}

func (x *SetPriceFeedPriceEvent) GetRelayer() string {
	if x != nil {
		return x.Relayer
	}
	return ""
}

func (x *SetPriceFeedPriceEvent) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *SetPriceFeedPriceEvent) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *SetPriceFeedPriceEvent) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type SetProviderPriceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Relayer       string                 `protobuf:"bytes,2,opt,name=relayer,proto3" json:"relayer,omitempty"`
	Symbol        string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price         string                 `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetProviderPriceEvent) Reset() {
	*x = SetProviderPriceEvent{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetProviderPriceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProviderPriceEvent) ProtoMessage() {}

func (x *SetProviderPriceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProviderPriceEvent.ProtoReflect.Descriptor instead.
func (*SetProviderPriceEvent) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{7}
}

func (x *SetProviderPriceEvent) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *SetProviderPriceEvent) GetRelayer() string {
	if x != nil {
		return x.Relayer
	}
	return ""
}

func (x *SetProviderPriceEvent) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SetProviderPriceEvent) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type SetCoinbasePriceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price         string                 `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCoinbasePriceEvent) Reset() {
	*x = SetCoinbasePriceEvent{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCoinbasePriceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCoinbasePriceEvent) ProtoMessage() {}

func (x *SetCoinbasePriceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCoinbasePriceEvent.ProtoReflect.Descriptor instead.
func (*SetCoinbasePriceEvent) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{8}
}

func (x *SetCoinbasePriceEvent) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SetCoinbasePriceEvent) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *SetCoinbasePriceEvent) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type EventSetStorkPrices struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prices        []*StorkPriceState     `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSetStorkPrices) Reset() {
	*x = EventSetStorkPrices{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSetStorkPrices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSetStorkPrices) ProtoMessage() {}

func (x *EventSetStorkPrices) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSetStorkPrices.ProtoReflect.Descriptor instead.
func (*EventSetStorkPrices) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{9}
}

func (x *EventSetStorkPrices) GetPrices() []*StorkPriceState {
	if x != nil {
		return x.Prices
	}
	return nil
}

type EventSetPythPrices struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prices        []*PythPriceState      `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSetPythPrices) Reset() {
	*x = EventSetPythPrices{}
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSetPythPrices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSetPythPrices) ProtoMessage() {}

func (x *EventSetPythPrices) ProtoReflect() protoreflect.Message {
	mi := &file_injective_oracle_v1beta1_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSetPythPrices.ProtoReflect.Descriptor instead.
func (*EventSetPythPrices) Descriptor() ([]byte, []int) {
	return file_injective_oracle_v1beta1_events_proto_rawDescGZIP(), []int{10}
}

func (x *EventSetPythPrices) GetPrices() []*PythPriceState {
	if x != nil {
		return x.Prices
	}
	return nil
}

var File_injective_oracle_v1beta1_events_proto protoreflect.FileDescriptor

const file_injective_oracle_v1beta1_events_proto_rawDesc = "" +
	"\n" +
	"%injective/oracle/v1beta1/events.proto\x12\x18injective.oracle.v1beta1\x1a\x14gogoproto/gogo.proto\x1a\x1ecosmos/base/v1beta1/coin.proto\x1a%injective/oracle/v1beta1/oracle.proto\"\x8c\x01\n" +
	"\x16SetChainlinkPriceEvent\x12\x17\n" +
	"\afeed_id\x18\x01 \x01(\tR\x06feedId\x12;\n" +
	"\x06answer\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x06answer\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\"\xc2\x01\n" +
	"\x11SetBandPriceEvent\x12\x18\n" +
	"\arelayer\x18\x01 \x01(\tR\arelayer\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x129\n" +
	"\x05price\x18\x03 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\x12!\n" +
	"\fresolve_time\x18\x04 \x01(\x04R\vresolveTime\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\x04R\trequestId\"\xe6\x01\n" +
	"\x14SetBandIBCPriceEvent\x12\x18\n" +
	"\arelayer\x18\x01 \x01(\tR\arelayer\x12\x18\n" +
	"\asymbols\x18\x02 \x03(\tR\asymbols\x12;\n" +
	"\x06prices\x18\x03 \x03(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x06prices\x12!\n" +
	"\fresolve_time\x18\x04 \x01(\x04R\vresolveTime\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\x04R\trequestId\x12\x1b\n" +
	"\tclient_id\x18\x06 \x01(\x03R\bclientId\"T\n" +
	"\x16EventBandIBCAckSuccess\x12\x1d\n" +
	"\n" +
	"ack_result\x18\x01 \x01(\tR\tackResult\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\x03R\bclientId\"P\n" +
	"\x14EventBandIBCAckError\x12\x1b\n" +
	"\tack_error\x18\x01 \x01(\tR\backError\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\x03R\bclientId\":\n" +
	"\x1bEventBandIBCResponseTimeout\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x03R\bclientId\"\x97\x01\n" +
	"\x16SetPriceFeedPriceEvent\x12\x18\n" +
	"\arelayer\x18\x01 \x01(\tR\arelayer\x12\x12\n" +
	"\x04base\x18\x02 \x01(\tR\x04base\x12\x14\n" +
	"\x05quote\x18\x03 \x01(\tR\x05quote\x129\n" +
	"\x05price\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\"\xa0\x01\n" +
	"\x15SetProviderPriceEvent\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x18\n" +
	"\arelayer\x18\x02 \x01(\tR\arelayer\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x129\n" +
	"\x05price\x18\x04 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\"\x88\x01\n" +
	"\x15SetCoinbasePriceEvent\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x129\n" +
	"\x05price\x18\x02 \x01(\tB#\xc8\xde\x1f\x00\xda\xde\x1f\x1bcosmossdk.io/math.LegacyDecR\x05price\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\"X\n" +
	"\x13EventSetStorkPrices\x12A\n" +
	"\x06prices\x18\x01 \x03(\v2).injective.oracle.v1beta1.StorkPriceStateR\x06prices\"V\n" +
	"\x12EventSetPythPrices\x12@\n" +
	"\x06prices\x18\x01 \x03(\v2(.injective.oracle.v1beta1.PythPriceStateR\x06pricesBNZLgithub.com/InjectiveLabs/injective-core/injective-chain/modules/oracle/typesb\x06proto3"

var (
	file_injective_oracle_v1beta1_events_proto_rawDescOnce sync.Once
	file_injective_oracle_v1beta1_events_proto_rawDescData []byte
)

func file_injective_oracle_v1beta1_events_proto_rawDescGZIP() []byte {
	file_injective_oracle_v1beta1_events_proto_rawDescOnce.Do(func() {
		file_injective_oracle_v1beta1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_injective_oracle_v1beta1_events_proto_rawDesc), len(file_injective_oracle_v1beta1_events_proto_rawDesc)))
	})
	return file_injective_oracle_v1beta1_events_proto_rawDescData
}

var file_injective_oracle_v1beta1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_injective_oracle_v1beta1_events_proto_goTypes = []any{
	(*SetChainlinkPriceEvent)(nil),      // 0: injective.oracle.v1beta1.SetChainlinkPriceEvent
	(*SetBandPriceEvent)(nil),           // 1: injective.oracle.v1beta1.SetBandPriceEvent
	(*SetBandIBCPriceEvent)(nil),        // 2: injective.oracle.v1beta1.SetBandIBCPriceEvent
	(*EventBandIBCAckSuccess)(nil),      // 3: injective.oracle.v1beta1.EventBandIBCAckSuccess
	(*EventBandIBCAckError)(nil),        // 4: injective.oracle.v1beta1.EventBandIBCAckError
	(*EventBandIBCResponseTimeout)(nil), // 5: injective.oracle.v1beta1.EventBandIBCResponseTimeout
	(*SetPriceFeedPriceEvent)(nil),      // 6: injective.oracle.v1beta1.SetPriceFeedPriceEvent
	(*SetProviderPriceEvent)(nil),       // 7: injective.oracle.v1beta1.SetProviderPriceEvent
	(*SetCoinbasePriceEvent)(nil),       // 8: injective.oracle.v1beta1.SetCoinbasePriceEvent
	(*EventSetStorkPrices)(nil),         // 9: injective.oracle.v1beta1.EventSetStorkPrices
	(*EventSetPythPrices)(nil),          // 10: injective.oracle.v1beta1.EventSetPythPrices
	(*StorkPriceState)(nil),             // 11: injective.oracle.v1beta1.StorkPriceState
	(*PythPriceState)(nil),              // 12: injective.oracle.v1beta1.PythPriceState
}
var file_injective_oracle_v1beta1_events_proto_depIdxs = []int32{
	11, // 0: injective.oracle.v1beta1.EventSetStorkPrices.prices:type_name -> injective.oracle.v1beta1.StorkPriceState
	12, // 1: injective.oracle.v1beta1.EventSetPythPrices.prices:type_name -> injective.oracle.v1beta1.PythPriceState
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_injective_oracle_v1beta1_events_proto_init() }
func file_injective_oracle_v1beta1_events_proto_init() {
	if File_injective_oracle_v1beta1_events_proto != nil {
		return
	}
	file_injective_oracle_v1beta1_oracle_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_injective_oracle_v1beta1_events_proto_rawDesc), len(file_injective_oracle_v1beta1_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_injective_oracle_v1beta1_events_proto_goTypes,
		DependencyIndexes: file_injective_oracle_v1beta1_events_proto_depIdxs,
		MessageInfos:      file_injective_oracle_v1beta1_events_proto_msgTypes,
	}.Build()
	File_injective_oracle_v1beta1_events_proto = out.File
	file_injective_oracle_v1beta1_events_proto_goTypes = nil
	file_injective_oracle_v1beta1_events_proto_depIdxs = nil
}
